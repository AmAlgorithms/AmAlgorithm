{"version":3,"sources":["helpers/data-structures/heap_helper.js","Components/algorithms/tree-algorithms/DepthFirstSearch.js","Components/algorithms/tree-algorithms/BreadthFirstSearch.js","graph-builders/tree-builder.js","Components/sidebar/Sidebar.js","Components/sidebar/RenderListComponent.js","Components/sidebar/RenderObjectComponent.js","Components/TreeTraversals.js","graph-builders/undirected-graph-builder.js","Components/algorithms/graph-algorithms/Dijkstra.js","Components/algorithms/graph-algorithms/Prim.js","Components/UndirectedGraphAlgorithms.js","Components/algorithms/graph-algorithms/Topsort.js","graph-builders/directed-graph-builder.js","Components/DirectedGraphAlgorithms.js","graph-builders/scatterplot-builder.js","Components/algorithms/clustering-algorithms/KMeans.js","Components/ScatterPlotAlgorithms.js","graph-builders/dynamic-tree-builder.js","Components/data-structures/Heap.js","Components/algorithms/sorts/InsertionSort.js","Components/MainPage.js","Components/NavigationBar.js","App.js","index.js"],"names":["Heap","this","h","size","e","fixUp","pos","parent","Math","floor","temp","smallest","pop","fixDown","child","a","i","push","its","removeRoot","console","log","module","exports","DepthFirstSearch","props","dfs","linkList","highlightLine","Promise","r","setTimeout","speed","checkPauseStatus","stop","unMounting","removeHighlightedLine","root","visited","Object","keys","g","map","node","updateVisitedMap","stack","nodePath","length","currentNode","updateStack","activateLink","activateVisitedNode","updateCurrentNode","buildNodePath","updateChild","forEach","el","classList","remove","prevProps","runningAlg","lineNum","document","getElementById","add","linkElement","nodeElement","pause","onClick","setRunningAlg","Component","BreadthFirstSearch","bfs","queue","updateQueue","shift","createTree","adjList","treeData","entries","children","name","value","type","level","buildTreeDataFromAdjList","margin","width","height","treemap","d3","nodes","d","append","attr","selectAll","data","descendants","slice","enter","style","x","y","depth","text","Sidebar","toggleSidebar","setState","sidebar","state","className","visibility","showButton","id","RenderListComponent","clicked","paddingLeft","listStyle","listName","list","key","marginLeft","RenderObjectComponent","objName","obj","Array","isArray","String","lst","TreeTraversals","q","s","getPauseStatus","getStopStatus","getSpeedRequest","Number","reset","dfsPseduoElement","bfsPseduoElement","visitedMap","alg","updateStopState","val","toggleClicked","b","c","f","j","k","l","m","n","o","p","t","u","v","w","z","tree","svg","hasChildNodes","removeChild","indentation","num","onSubmit","event","preventDefault","onChange","target","renderBfsPseudocode","renderDfsPseudocode","createGraph","links","source","strength","cost","linkForce","link","simulation","force","linkElements","linkTextElements","nodeElements","nodeTextElements","on","PriorityQueue","require","Dijkstra","djikstra","pq","updatePq","getArray","parents","distances","Infinity","updateParents","updateDistances","insert","activeLinks","currentNodeElement","activateCurrentNode","cleanUpActiveLinksAndCurrentNode","updateNode","removeActiveLinks","neighborNodeWeight","neighborNode","linkOfInterestElement","updateNeighbor","potentialScore","updatePotentialScore","fadeOutLinks","updateCurrentNodeToBeVisited","end","shortestPath","reverse","highlightShortestPath","linkString","prev","current","Prim","prim","costMap","mstSet","updatePrimMstSet","minNode","findMin","updatePrimMinNode","minNodeEl","neighbor","deActivateOldLink","filter","min","oldChild","UndirectedGraphAlgorithms","neighborCost","priorityQueue","dijkstraPseduoElement","primPseduoElement","lines","getElementsByTagName","graph","index","backgroundColor","marginRight","renderPrimHeading","renderDijkstraHeading","renderPrimTableData","renderDijkstraTableData","renderPrimPseudocode","renderDijkstraPseudocode","Topsort","topSort","updateVisited","callStack","unshift","updateCallStack","visit","getOrdering","previousNodes","activeLink","updateActiveLinks","activateNeighbor","markNodeComplete","removeOutgoingLinks","classId","contains","neighborEl","lineElement","values","createDirectedGraph","DirectedGraphAlgorithms","ord","ordering","V","pseduoTopsortElements","renderTopsortPseudocode","top","right","bottom","left","domain","range","call","parseFloat","toFixed","classed","select","transition","duration","delay","createScatterplot","KMeans","kmeans","randomPoints","getRandomElements","points","centroids","centroid","scaleX","scaleY","hasConverged","iter","assignToClusters","prevCentroids","updateCentroids","JSON","stringify","reduce","bool","currentCentroid","point","sqrt","pow","closestCentroid","indexOf","colorPoint","clusterArray","mean","sum","currentPoint","moveIthCentroid","arr","result","len","taken","RangeError","random","pointElement","pointClasses","ScatterPlotAlgorithms","setPoints","ps","centroidGroup","parentNode","circleElements","setAttribute","scatter","createDynamicTree","getMin","clearTree","dataStructure","removeRootOfDynamicTree","insertIntoDynamicTree","swap","parentText","childText","parentCircle","childCircle","parentG","childG","childLink","parentLink","componentDidMount","inputList","buildSampleHeap","handleInsertButton","newNode","inputNum","executing","convertHeapArrayToAdjList","leftChild","rightChild","sample","heapA","parentIndex","currentIndex","newElement","removedRoot","inserting","removingRoot","childIndex","activateChildAndParent","removeActiveChildParent","deActivateLink","updatedList","activateParent","activateLeftAndRightChildren","deActivateParent","deActivateLeftAndRightChildren","leftChildElement","getElementsByClassName","rightChildElement","childElement","parentElement","childLinkElement","includes","disabled","formatInsertButtonText","clearHeap","renderHeapClassPseudocode","renderInsertPseudocode","renderRemoveRootPseudocode","InsertionSort","padding","bandwidth","MainPage","color","src","process","alt","NavigationBar","Navbar","Brand","as","Link","to","Nav","NavDropdown","title","Item","eventKey","path","component","exact","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.3b72ad1b.chunk.js","sourcesContent":["class Heap {\n  constructor() {\n    this.h = [0];\n    this.size = 0;\n  }\n  insert(e) {\n    this.h[0] = ++this.size;\n    this.h[this.size] = e;\n    this.fixUp();\n  }\n  fixUp() {\n    let pos = this.size;\n    while (pos > 0) {\n      let parent = Math.floor(pos / 2);\n      if (this.h[parent][0] > this.h[pos][0]) {\n        let temp = this.h[parent];\n        this.h[parent] = this.h[pos];\n        this.h[pos] = temp;\n        pos = parent;\n      } else {\n        break;\n      }\n    }\n  }\n\n  removeRoot() {\n    let smallest = this.h[1];\n    this.h[1] = this.h.pop();\n    this.h[0] = --this.size;\n    this.fixDown();\n    return smallest;\n  }\n  fixDown() {\n    let pos = 1;\n    while (pos * 2 < this.size) {\n      let child = pos * 2;\n      if (this.h[child][0] > this.h[child + 1][0]) {\n        child += 1;\n      }\n      if (this.h[pos][0] > this.h[child][0]) {\n        let temp = this.h[child];\n        this.h[child] = this.h[pos];\n        this.h[pos] = temp;\n        pos = child;\n      } else {\n        break;\n      }\n    }\n  }\n\n  getArray() {\n    let a = [];\n    for (let i = 1; i <= this.size; i++) {\n      a.push(this.h[i][1] + ': ' + this.h[i][0]);\n    }\n    return a;\n  }\n\n  heapSort() {\n    let a = [];\n    let its = this.h[0];\n    for (let i = 0; i < its; i++) {\n      a.push(this.removeRoot());\n    }\n    console.log(a);\n    return a;\n  }\n}\nmodule.exports = { Heap };\n","import React, { Component } from 'react';\n\nclass DepthFirstSearch extends Component {\n  constructor(props) {\n    super(props);\n    this.unMounting = false;\n  }\n\n  componentWillUnmount() {\n    this.unMounting = true;\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.runningAlg === 'dfs' && this.props.runningAlg !== 'dfs') {\n      this.unMounting = true;\n    }\n  }\n\n  highlightLine(lineNum) {\n    let el = document.getElementById('dfs-' + lineNum);\n    if (el) el.classList.add('active-code-line');\n  }\n  removeHighlightedLine(lineNum) {\n    let el = document.getElementById('dfs-' + lineNum);\n    if (el) el.classList.remove('active-code-line');\n  }\n\n  dfs = async () => {\n    let linkList = [];\n\n    this.highlightLine(1);\n    await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n    await this.checkPauseStatus();\n    if (this.props.stop) return;\n    if (this.unMounting) return;\n    this.removeHighlightedLine(1);\n\n    this.highlightLine(2);\n    await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n    await this.checkPauseStatus();\n    if (this.props.stop) return;\n    if (this.unMounting) return;\n    this.removeHighlightedLine(2);\n\n    let root = 'a';\n    let visited = {};\n    Object.keys(this.props.g).map((node) => (visited[node] = false));\n\n    this.highlightLine(3);\n    this.props.updateVisitedMap(visited);\n    await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n    await this.checkPauseStatus();\n    if (this.props.stop) return;\n    if (this.unMounting) return;\n    this.removeHighlightedLine(3);\n\n    this.highlightLine(4);\n    visited[root] = true;\n    this.props.updateVisitedMap(visited);\n\n    await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n    await this.checkPauseStatus();\n    if (this.props.stop) return;\n    if (this.unMounting) return;\n    this.removeHighlightedLine(4);\n\n    this.highlightLine(5);\n    let stack = [root];\n    await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n    await this.checkPauseStatus();\n    if (this.props.stop) return;\n    if (this.unMounting) return;\n    this.removeHighlightedLine(5);\n\n    let nodePath = [];\n    while (stack.length > 0) {\n      this.highlightLine(6);\n      await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n      await this.checkPauseStatus();\n      if (this.props.stop) return;\n      if (this.unMounting) return;\n      this.removeHighlightedLine(6);\n\n      let currentNode = stack.pop();\n      this.props.updateStack(stack);\n\n      this.highlightLine(7);\n      await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n      await this.checkPauseStatus();\n      if (this.props.stop) return;\n      if (this.unMounting) return;\n\n      this.activateLink(currentNode, linkList);\n      await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n      await this.checkPauseStatus();\n      if (this.props.stop) return;\n      if (this.unMounting) return;\n\n      this.activateVisitedNode(currentNode);\n      this.props.updateCurrentNode(currentNode);\n\n      nodePath.push(currentNode);\n      this.props.buildNodePath(nodePath);\n\n      await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n      await this.checkPauseStatus();\n      if (this.props.stop) return;\n      if (this.unMounting) return;\n      this.removeHighlightedLine(7);\n\n      this.highlightLine(8);\n      await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n      await this.checkPauseStatus();\n      if (this.props.stop) return;\n      if (this.unMounting) return;\n      this.removeHighlightedLine(8);\n\n      for (let child of this.props.g[currentNode]) {\n        this.props.updateChild(child);\n\n        this.highlightLine(9);\n        await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n        await this.checkPauseStatus();\n        if (this.props.stop) return;\n        if (this.unMounting) return;\n        this.removeHighlightedLine(9);\n\n        if (visited[child] === false) {\n          this.highlightLine(10);\n          await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n          await this.checkPauseStatus();\n          if (this.props.stop) return;\n          if (this.unMounting) return;\n          this.removeHighlightedLine(10);\n          visited[child] = true;\n          this.props.updateVisitedMap(visited);\n\n          this.highlightLine(11);\n          await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n          await this.checkPauseStatus();\n          if (this.props.stop) return;\n          if (this.unMounting) return;\n          this.removeHighlightedLine(11);\n          stack.push(child);\n          this.props.updateStack(stack);\n        }\n      }\n      this.props.updateChild(null);\n      this.props.updateCurrentNode(null);\n    }\n    this.props.updateChild(null);\n    this.props.updateCurrentNode(null);\n    linkList.forEach((el) => el.classList.remove('link-traversed'));\n  };\n\n  activateLink(currentNode, linkList) {\n    let linkElement = document.getElementById(currentNode + 'link');\n    if (linkElement) {\n      linkElement.classList.add('link-traversed');\n      linkList.push(linkElement);\n    }\n  }\n\n  activateVisitedNode(currentNode) {\n    let nodeElement = document.getElementById(currentNode);\n    if (nodeElement) nodeElement.classList.add('node-complete-tree');\n  }\n\n  async checkPauseStatus() {\n    while (this.props.pause) {\n      await new Promise((r) => setTimeout(r, 1000));\n      continue;\n    }\n  }\n\n  render() {\n    return (\n      <button\n        onClick={async () => {\n          if (this.unMounting) {\n            this.unMounting = false;\n          }\n          await this.props.setRunningAlg('dfs');\n          this.dfs();\n        }}\n      >\n        DFS traverse\n      </button>\n    );\n  }\n}\n\nexport default DepthFirstSearch;\n","import React, { Component } from 'react';\n\nclass BreadthFirstSearch extends Component {\n  constructor(props) {\n    super(props);\n    this.unMounting = false;\n  }\n\n  componentWillUnmount() {\n    this.unMounting = true;\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.runningAlg === 'bfs' && this.props.runningAlg !== 'bfs') {\n      this.unMounting = true;\n    }\n  }\n\n  highlightLine(lineNum) {\n    let el = document.getElementById('bfs-' + lineNum);\n    if (el) el.classList.add('active-code-line');\n  }\n  removeHighlightedLine(lineNum) {\n    let el = document.getElementById('bfs-' + lineNum);\n    if (el) el.classList.remove('active-code-line');\n  }\n\n  bfs = async () => {\n    let linkList = [];\n    let root = 'a';\n\n    this.highlightLine(1);\n    await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n    await this.checkPauseStatus();\n    if (this.props.stop) return;\n    if (this.unMounting) return;\n    this.removeHighlightedLine(1);\n\n    this.highlightLine(2);\n    await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n    await this.checkPauseStatus();\n    if (this.props.stop) return;\n    if (this.unMounting) return;\n    this.removeHighlightedLine(2);\n\n    let visited = {};\n    Object.keys(this.props.g).map((node) => (visited[node] = false));\n\n    this.highlightLine(3);\n    await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n    await this.checkPauseStatus();\n    if (this.props.stop) return;\n    if (this.unMounting) return;\n    this.props.updateVisitedMap(visited);\n    this.removeHighlightedLine(3);\n\n    this.highlightLine(4);\n    visited[root] = true;\n    await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n    await this.checkPauseStatus();\n    if (this.props.stop) return;\n    if (this.unMounting) return;\n    this.removeHighlightedLine(4);\n\n    this.highlightLine(5);\n    await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n    await this.checkPauseStatus();\n    if (this.props.stop) return;\n    if (this.unMounting) return;\n    this.removeHighlightedLine(5);\n\n    visited[root] = true;\n    this.props.updateVisitedMap(visited);\n    let queue = [root];\n    this.props.updateQueue(queue);\n    let nodePath = [];\n    while (queue.length > 0) {\n      this.highlightLine(6);\n      await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n      await this.checkPauseStatus();\n      if (this.props.stop) return;\n      if (this.unMounting) return;\n      this.removeHighlightedLine(6);\n\n      let currentNode = queue[0];\n      queue.shift();\n      this.props.updateQueue(queue);\n\n      this.highlightLine(7);\n      this.activateLink(currentNode, linkList);\n      await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n      await this.checkPauseStatus();\n      if (this.props.stop) return;\n      if (this.unMounting) return;\n\n      this.activateVisitedNode(currentNode);\n      this.props.updateCurrentNode(currentNode);\n\n      nodePath.push(currentNode);\n      this.props.buildNodePath(nodePath);\n\n      await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n      await this.checkPauseStatus();\n      if (this.props.stop) return;\n      if (this.unMounting) return;\n      this.removeHighlightedLine(7);\n\n      this.highlightLine(8);\n      await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n      await this.checkPauseStatus();\n      if (this.props.stop) return;\n      if (this.unMounting) return;\n\n      this.removeHighlightedLine(8);\n      for (let child of this.props.g[currentNode]) {\n        this.props.updateChild(child);\n        this.highlightLine(9);\n\n        await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n        await this.checkPauseStatus();\n        if (this.props.stop) return;\n        if (this.unMounting) return;\n\n        this.removeHighlightedLine(9);\n        if (visited[child] === false) {\n          this.highlightLine(10);\n          await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n          await this.checkPauseStatus();\n          if (this.props.stop) return;\n          if (this.unMounting) return;\n          this.removeHighlightedLine(10);\n          visited[child] = true;\n          this.props.updateVisitedMap(visited);\n          this.highlightLine(11);\n          await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n          await this.checkPauseStatus();\n          if (this.props.stop) return;\n          if (this.unMounting) return;\n          this.removeHighlightedLine(11);\n          queue.push(child);\n          this.props.updateQueue(queue);\n        }\n      }\n      this.props.updateChild(null);\n      this.props.updateCurrentNode(null);\n    }\n    this.props.updateChild(null);\n    this.props.updateCurrentNode(null);\n    linkList.forEach((el) => el.classList.remove('link-traversed'));\n  };\n\n  activateLink(currentNode, linkList) {\n    let linkElement = document.getElementById(currentNode + 'link');\n    if (linkElement) {\n      linkElement.classList.add('link-traversed');\n      linkList.push(linkElement);\n    }\n  }\n\n  activateVisitedNode(currentNode) {\n    let nodeElement = document.getElementById(currentNode);\n    if (nodeElement) nodeElement.classList.add('node-complete-tree');\n  }\n\n  async checkPauseStatus() {\n    while (this.props.pause) {\n      await new Promise((r) => setTimeout(r, 1000));\n      continue;\n    }\n  }\n\n  render() {\n    return (\n      <button\n        onClick={async () => {\n          if (this.unMounting) {\n            this.unMounting = false;\n          }\n          await this.props.setRunningAlg('bfs');\n          this.bfs();\n        }}\n      >\n        BFS traverse\n      </button>\n    );\n  }\n}\n\nexport default BreadthFirstSearch;\n","import * as d3 from 'd3';\n\nfunction buildTreeDataFromAdjList(adjList) {\n  let treeData = {};\n  let root = true;\n  for (let [node, children] of Object.entries(adjList)) {\n    if (root === true) {\n      treeData[node] = {\n        name: node,\n        value: 10,\n        type: 'black',\n        level: '',\n        children: [],\n      };\n      root = false;\n    }\n    for (let child of children) {\n      if (!treeData[child]) {\n        treeData[child] = {\n          name: child,\n          value: 10,\n          type: 'black',\n          level: '',\n          children: [],\n        };\n      }\n      treeData[node].children.push(treeData[child]);\n    }\n  }\n  return treeData;\n}\n\nfunction createTree(adjList) {\n  let treeData = buildTreeDataFromAdjList(adjList)['a'];\n  let myScale = 1.5;\n  // set the dimensions and margins of the diagram\n  const margin = { top: 20, right: 50, bottom: 50, left: 20 },\n    width = 900 - margin.left - margin.right,\n    height = 900 - margin.top - margin.bottom;\n\n  // declares a tree layout and assigns the size\n  const treemap = d3.tree().size([height, width]);\n\n  //  assigns the data to a hierarchy using parent-child relationships\n  let nodes = d3.hierarchy(treeData, (d) => d.children);\n\n  // maps the node data to the tree layout\n  nodes = treemap(nodes);\n\n  // append the svg object to the body of the page\n  // appends a 'group' element to 'svg'\n  // moves the 'group' element to the top left margin\n  const svg = d3\n      .select('#graph-container')\n      .append('svg')\n      .attr('id', 'tree-svg')\n      .attr('width', width + margin.left + margin.right)\n      .attr('height', height + margin.top + margin.bottom)\n      .attr('class', 'graph'),\n    g = svg\n      .append('g')\n      .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n  // adds the links between the nodes\n  g.selectAll('.link')\n    .data(nodes.descendants().slice(1))\n    .enter()\n    .append('path')\n    .attr('class', (d) => 'link' + d.data.name, 'link')\n    .attr('class', 'link')\n    .attr('id', (d) => d.data.name + 'link') // d.parent.data.name + '-' + d.data.name\n    .style('stroke', (d) => d.data.level)\n    .attr('d', (d) => {\n      return (\n        'M' +\n        d.x / myScale +\n        ',' +\n        d.y / myScale +\n        'C' +\n        (d.x + d.parent.x) / myScale / 2 +\n        ',' +\n        d.y / myScale +\n        ' ' +\n        (d.x + d.parent.x) / myScale / 2 +\n        ',' +\n        d.parent.y / myScale +\n        ' ' +\n        d.parent.x / myScale +\n        ',' +\n        d.parent.y / myScale\n      );\n    });\n\n  // adds each node as a group\n  const node = g\n    .selectAll('.node')\n    .data(nodes.descendants())\n    .enter()\n    .append('g')\n    .attr(\n      'class',\n      (d) => 'node' + (d.children ? ' node--internal' : ' node--leaf')\n    )\n    .attr(\n      'transform',\n      (d) => 'translate(' + d.x / myScale + ',' + d.y / myScale + ')'\n    );\n\n  // adds the circle to the node\n  node\n    .append('circle')\n    .attr('r', (d) => d.data.value)\n    .attr('id', (d) => d.data.name);\n  // adds the text to the node\n  node\n    .append('text')\n    .attr('dy', '.35em')\n    .attr('x', (d) => (d.children ? (d.data.value + 5) * -1 : d.data.value + 5))\n    .attr('y', (d) =>\n      d.children && d.depth !== 0 ? -(d.data.value + 5) : d.data.value\n    )\n    .style('text-anchor', (d) => (d.children ? 'end' : 'start'))\n    .text((d) => d.data.name);\n}\n\nexport default createTree;\n","import React, { Component } from 'react';\n\nclass Sidebar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      sidebar: false,\n    };\n  }\n\n  toggleSidebar = () => {\n    this.setState({ sidebar: !this.state.sidebar });\n  };\n  render() {\n    return (\n      <>\n        <div\n          className={'sidebar'}\n          style={{ visibility: this.props.showButton ? 'visible' : 'hidden' }}\n        >\n          <button\n            id={'sidebar-button'}\n            className={'menu-bars'}\n            onClick={() => this.toggleSidebar()}\n          >\n            {this.state.sidebar ? 'Hide Variables' : 'Show Variables'}\n          </button>\n        </div>\n        <nav\n          className={\n            this.state.sidebar && this.props.showButton\n              ? 'side-menu active'\n              : 'side-menu'\n          }\n        >\n          <ul className={'side-menu-items'}>{this.props.children}</ul>\n        </nav>\n      </>\n    );\n  }\n}\n\nexport default Sidebar;\n","import React, {Component} from 'react';\nimport { FaChevronDown, FaChevronRight } from 'react-icons/fa';\n\nclass RenderListComponent extends Component {\n  render() {\n    return (\n      <>\n      { this.props.clicked ? \n        <ul style={{paddingLeft: '0px', listStyle:'none'}}>\n          <FaChevronDown /> {this.props.listName} =  [ {  this.props.list.map( (e, i) => <li key={i} style={{marginLeft: '55px'}}>{e}, </li>)} <span style={{marginLeft:'35px'}}>]</span>\n        </ul> \n        :  \n        \n        <> <FaChevronRight /> {this.props.listName}  = {'['+this.props.list.map(e => ' '+e) + ' ]'} </>\n        \n      }\n      </>\n    );\n  }\n}\n\nexport default RenderListComponent;\n","import React, { Component } from 'react';\nimport { FaChevronDown, FaChevronRight } from 'react-icons/fa';\n\nclass RenderObjectComponent extends Component {\n  render() {\n    return (\n      <>\n        {this.props.clicked ? (\n          <ul style={{ paddingLeft: '0px', listStyle: 'none' }}>\n            <FaChevronDown /> {this.props.objName} = {'{'}{' '}\n            {Object.keys(this.props.obj).map((e, i) => (\n              <li key={i} style={{ marginLeft: '55px' }}>\n                {e} :\n                {Array.isArray(this.props.obj[e])\n                  ? Array.isArray(this.props.obj[e][0])\n                    ? '[' +\n                      String(this.props.obj[e].map((lst) => '[' + lst + ']')) +\n                      ']'\n                    : '[' + String(this.props.obj[e]) + ']'\n                  : String(this.props.obj[e])}\n                ,\n              </li>\n            ))}{' '}\n            <span style={{ marginLeft: '35px' }}>{'}'}</span>\n          </ul>\n        ) : (\n          <>\n            <FaChevronRight /> {this.props.objName} ={' '}\n            {'{ ' +\n              Object.keys(this.props.obj).map(\n                (e) =>\n                  ' ' +\n                  e +\n                  ':' +\n                  (Array.isArray(this.props.obj[e])\n                    ? Array.isArray(this.props.obj[e][0])\n                      ? '[' +\n                        String(\n                          this.props.obj[e].map((lst) => '[' + lst + ']')\n                        ) +\n                        ']'\n                      : '[' + String(this.props.obj[e]) + ']'\n                    : String(this.props.obj[e]))\n              ) +\n              ' }'}\n          </>\n        )}\n      </>\n    );\n  }\n}\n\nexport default RenderObjectComponent;\n","import React, { Component } from 'react';\nimport DepthFirstSearch from './algorithms/tree-algorithms/DepthFirstSearch';\nimport BreathFirstSearch from './algorithms/tree-algorithms/BreadthFirstSearch';\nimport createTree from '../graph-builders/tree-builder';\nimport Sidebar from './sidebar/Sidebar';\nimport RenderListComponent from './sidebar/RenderListComponent';\nimport RenderObjectComponent from './sidebar/RenderObjectComponent';\n\nclass TreeTraversals extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pause: false,\n      stop: false,\n      speed: 1,\n      nodePath: [],\n      runningAlg: '',\n      queue: [],\n      stack: [],\n      currentNode: null,\n      visitedMap: {},\n      child: null,\n      clicked: [false, false, false, false],\n    };\n    this.adjList = {\n      a: ['b', 'c', 'd'],\n      b: ['e', 'h', 'i'],\n      c: ['j', 'r'],\n      d: ['s', 'u'],\n      e: ['f'],\n      f: ['g'],\n      g: [],\n      h: ['o'],\n      i: [],\n      j: ['k'],\n      k: ['l', 'q'],\n      l: ['m', 'n', 'p'],\n      m: [],\n      n: [],\n      o: [],\n      p: [],\n      q: [],\n      r: [],\n      s: ['t'],\n      t: [],\n      u: ['v'],\n      v: ['w'],\n      w: ['x'],\n      x: ['y', 'z'],\n      y: [],\n      z: [],\n    };\n  }\n\n  componentDidMount() {\n    createTree(this.adjList);\n    this.tree = document.getElementById('graph-container');\n  }\n\n  componentWillUnmount() {\n    let svg = document.getElementById('tree-svg');\n    if (this.tree.hasChildNodes()) this.tree.removeChild(svg);\n    this.reset();\n  }\n  buildNodePath = (nodePath) => {\n    this.setState({ nodePath });\n  };\n\n  updateQueue = (q) => {\n    this.setState({ queue: q });\n  };\n\n  updateStack = (s) => {\n    this.setState({ stack: s });\n  };\n\n  getPauseStatus = () => this.state.pause;\n  getStopStatus = () => this.state.stop;\n  getSpeedRequest = () => Number(this.state.speed) + 0.1;\n\n  reset = () => {\n    Object.keys(this.adjList).forEach((e) => {\n      let nodeElement = document.getElementById(e);\n      if (nodeElement) {\n        nodeElement.classList.remove('node-complete-tree');\n      }\n      let linkElement = document.getElementById(e + 'link');\n      if (linkElement) {\n        linkElement.classList.remove('link-traversed');\n      }\n    });\n    for (let i = 1; i < 12; i++) {\n      let dfsPseduoElement = document.getElementById('dfs-' + i);\n      if (dfsPseduoElement) dfsPseduoElement.classList = '';\n      let bfsPseduoElement = document.getElementById('bfs-' + i);\n      if (bfsPseduoElement) bfsPseduoElement.classList = '';\n    }\n    this.setState({\n      nodePath: [],\n      visitedMap: {},\n      queue: [],\n      currentNode: null,\n      child: null,\n    });\n    if (this.state.stop) {\n      this.setState({\n        stop: false,\n        pause: false,\n        runningAlg: '',\n      });\n    }\n  };\n\n  setRunningAlg = (alg) => {\n    this.reset();\n    this.setState({ runningAlg: alg });\n  };\n\n  updateStopState = async (val) => {\n    await this.setState({ stop: val });\n  };\n\n  updateCurrentNode = async (node) => {\n    await this.setState({ currentNode: node });\n  };\n\n  updateVisitedMap = async (map) => {\n    await this.setState({ visitedMap: map });\n  };\n  updateChild = async (child) => {\n    await this.setState({ child });\n  };\n\n  toggleClicked = (i) => {\n    let a = this.state.clicked.slice();\n    a[i] = !a[i];\n    this.setState({\n      clicked: a,\n    });\n  };\n\n  renderBfsPseudocode() {\n    const indentation = (num) => {\n      return num * 20;\n    };\n    return (\n      <div>\n        <div id={'bfs-1'}>\n          1<span style={{ marginLeft: indentation(1) }}>BFS(G, root)</span>\n        </div>\n        <div id={'bfs-2'}>\n          2<span style={{ marginLeft: indentation(2) }}>let Q be a queue</span>\n        </div>\n        <div id={'bfs-3'}>\n          3\n          <span style={{ marginLeft: indentation(2) }}>\n            let V be a map with all nodes as keys and values of false\n          </span>\n        </div>\n        <div id={'bfs-4'}>\n          4\n          <span style={{ marginLeft: indentation(2) }}>set V[root] = true</span>\n        </div>\n        <div id={'bfs-5'}>\n          5<span style={{ marginLeft: indentation(2) }}>Q.enqueue(root)</span>\n        </div>\n        <div id={'bfs-6'}>\n          6\n          <span style={{ marginLeft: indentation(2) }}>\n            while Q is not empty\n          </span>\n        </div>\n        <div id={'bfs-7'}>\n          7\n          <span style={{ marginLeft: indentation(3) }}>\n            current := Q.dequeue()\n          </span>\n        </div>\n        <div id={'bfs-8'}>\n          8\n          <span style={{ marginLeft: indentation(3) }}>\n            for child of current\n          </span>\n        </div>\n        <div id={'bfs-9'}>\n          9\n          <span style={{ marginLeft: indentation(4) }}>\n            if child is not labeled as discovered then\n          </span>\n        </div>\n        <div id={'bfs-10'}>\n          10\n          <span style={{ marginLeft: indentation(5) }}>\n            set V[child] = true\n          </span>\n        </div>\n        <div id={'bfs-11'}>\n          11\n          <span style={{ marginLeft: indentation(5) }}> Q.enqueue(child)</span>\n        </div>\n      </div>\n    );\n  }\n\n  renderDfsPseudocode() {\n    const indentation = (num) => {\n      return num * 20;\n    };\n    return (\n      <div>\n        <div id={'dfs-1'}>\n          1<span style={{ marginLeft: indentation(1) }}>DFS(G, root)</span>\n        </div>\n        <div id={'dfs-2'}>\n          2<span style={{ marginLeft: indentation(2) }}>let S be a stack</span>\n        </div>\n        <div id={'dfs-3'}>\n          3\n          <span style={{ marginLeft: indentation(2) }}>\n            let V be a map with all nodes as keys and values of false\n          </span>\n        </div>\n        <div id={'dfs-4'}>\n          4\n          <span style={{ marginLeft: indentation(2) }}>set V[root] = true</span>\n        </div>\n        <div id={'dfs-5'}>\n          5<span style={{ marginLeft: indentation(2) }}>S.push(root)</span>\n        </div>\n        <div id={'dfs-6'}>\n          6\n          <span style={{ marginLeft: indentation(2) }}>\n            while S is not empty\n          </span>\n        </div>\n        <div id={'dfs-7'}>\n          7\n          <span style={{ marginLeft: indentation(3) }}>current := S.pop()</span>\n        </div>\n        <div id={'dfs-8'}>\n          8\n          <span style={{ marginLeft: indentation(3) }}>\n            for child of current\n          </span>\n        </div>\n        <div id={'dfs-9'}>\n          9\n          <span style={{ marginLeft: indentation(4) }}>\n            if child is not labeled as discovered then\n          </span>\n        </div>\n        <div id={'dfs-10'}>\n          10\n          <span style={{ marginLeft: indentation(5) }}>\n            set V[child] = true\n          </span>\n        </div>\n        <div id={'dfs-11'}>\n          11<span style={{ marginLeft: indentation(5) }}> S.push(child)</span>\n        </div>\n        <div></div>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className={'row'}>\n        <div className={'col-4'} id={'graph-container'}>\n          <DepthFirstSearch\n            g={this.adjList}\n            pause={this.state.pause}\n            stop={this.state.stop}\n            speed={this.state.speed}\n            runningAlg={this.state.runningAlg}\n            setRunningAlg={this.setRunningAlg}\n            buildNodePath={this.buildNodePath}\n            updateStack={this.updateStack}\n            updateCurrentNode={this.updateCurrentNode}\n            updateVisitedMap={this.updateVisitedMap}\n            updateChild={this.updateChild}\n          />\n          <div className={'divider'}></div>\n          <BreathFirstSearch\n            g={this.adjList}\n            pause={this.state.pause}\n            stop={this.state.stop}\n            speed={this.state.speed}\n            runningAlg={this.state.runningAlg}\n            setRunningAlg={this.setRunningAlg}\n            buildNodePath={this.buildNodePath}\n            updateQueue={this.updateQueue}\n            updateCurrentNode={this.updateCurrentNode}\n            updateVisitedMap={this.updateVisitedMap}\n            updateChild={this.updateChild}\n          />\n          <div className={'divider'}></div>\n          <button\n            id={'reset-button'}\n            onClick={async () => {\n              await this.setState({ pause: false, stop: true });\n              this.reset();\n            }}\n          >\n            Reset\n          </button>\n          <div className={'divider'}></div>\n          <button\n            onClick={() => {\n              this.setState({ pause: !this.state.pause });\n            }}\n          >\n            {this.state.pause ? 'UnPause' : 'Pause'}\n          </button>\n          <form onSubmit={(event) => event.preventDefault()}>\n            <label>\n              Speed:\n              <input\n                style={{ width: '50px' }}\n                type=\"number\"\n                value={this.state.speed}\n                onChange={(event) =>\n                  this.setState({\n                    speed: event.target.value,\n                  })\n                }\n              />\n            </label>\n          </form>\n        </div>\n\n        <div className={'col-4'}>\n          <div className={'row'}>\n            {this.state.runningAlg === ''\n              ? ''\n              : this.state.runningAlg === 'bfs'\n              ? this.renderBfsPseudocode()\n              : this.renderDfsPseudocode()}\n          </div>\n        </div>\n\n        <div className={'col-4'}>\n          <Sidebar showButton={this.state.runningAlg !== ''}>\n            {this.state.currentNode ? (\n              <li> current = {this.state.currentNode} </li>\n            ) : (\n              ''\n            )}\n            {this.state.child ? <li> child = {this.state.child} </li> : ''}\n\n            <li onClick={() => this.toggleClicked(0)}>\n              <RenderListComponent\n                list={this.state.nodePath}\n                listName={'Node Path'}\n                clicked={this.state.clicked[0]}\n              />\n            </li>\n            <li onClick={() => this.toggleClicked(1)}>\n              {this.state.runningAlg === 'bfs' ? (\n                <RenderListComponent\n                  list={this.state.queue}\n                  listName={'Q'}\n                  clicked={this.state.clicked[1]}\n                />\n              ) : this.state.runningAlg === 'dfs' ? (\n                <RenderListComponent\n                  list={this.state.stack}\n                  listName={'S'}\n                  clicked={this.state.clicked[1]}\n                />\n              ) : (\n                <></>\n              )}\n            </li>\n            <li onClick={() => this.toggleClicked(2)}>\n              {Object.keys(this.state.visitedMap).length > 0 ? (\n                <RenderObjectComponent\n                  obj={this.state.visitedMap}\n                  objName={'V'}\n                  clicked={this.state.clicked[2]}\n                />\n              ) : (\n                ''\n              )}\n            </li>\n            <li onClick={() => this.toggleClicked(3)}>\n              {this.adjList ? (\n                <RenderObjectComponent\n                  obj={this.adjList}\n                  objName={'tree'}\n                  clicked={this.state.clicked[3]}\n                />\n              ) : (\n                ''\n              )}\n            </li>\n          </Sidebar>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TreeTraversals;\n","import * as d3 from 'd3';\n\nfunction createGraph() {\n  let nodes = [\n    { id: 'a', level: 2 },\n    { id: 'b', level: 2 },\n    { id: 'c', level: 2 },\n    { id: 'd', level: 2 },\n    { id: 'e', level: 2 },\n    { id: 'f', level: 2 },\n    { id: 'g', level: 2 },\n    { id: 'h', level: 2 },\n    { id: 'i', level: 2 },\n    { id: 'j', level: 2 },\n    { id: 'k', level: 2 },\n    { id: 'l', level: 2 },\n    { id: 'm', level: 2 },\n    { id: 'n', level: 2 },\n    { id: 'o', level: 2 },\n    { id: 'p', level: 2 },\n    { id: 'q', level: 2 },\n    { id: 's', level: 2 },\n    { id: 'target', level: 1 },\n    { id: 't', level: 2 },\n    { id: 'source', level: 1 },\n  ];\n\n  let strength = 0.001;\n  let links = [\n    { target: 'a', source: 'b', strength: strength, cost: 10 },\n    { target: 'a', source: 'c', strength: strength, cost: 7 },\n    { target: 'a', source: 'd', strength: 20 * strength, cost: 8 },\n    { target: 'b', source: 'd', strength: 20 * strength, cost: 9 },\n    { target: 'b', source: 'e', strength: strength, cost: 11 },\n    { target: 'e', source: 'c', strength: 20 * strength, cost: 9 },\n    { target: 'f', source: 'c', strength: 0.05, cost: 7 },\n    { target: 'f', source: 'b', strength: 0.05, cost: 8 },\n    { target: 'f', source: 'a', strength: 0.05, cost: 6 },\n    { target: 'f', source: 'e', strength: 0.05, cost: 6 },\n    { target: 'a', source: 'g', strength: 0.26, cost: 3 },\n    { target: 'h', source: 'g', strength: 0.26, cost: 3 },\n    { target: 'c', source: 'h', strength: 0.6, cost: 2 },\n    { target: 'i', source: 'g', strength: 0.026, cost: 4 },\n    { target: 'a', source: 'i', strength: strength, cost: 5 },\n    { target: 'd', source: 'i', strength: 20 * strength, cost: 10 },\n    { target: 'j', source: 'b', strength: strength, cost: 8 },\n    { target: 'j', source: 'e', strength: strength, cost: 10 },\n    { target: 'i', source: 'k', strength: 15 * strength, cost: 14 },\n    { target: 'c', source: 'k', strength: 20 * strength, cost: 5 },\n    { target: 'e', source: 'k', strength: 15 * strength, cost: 10 },\n    { target: 'g', source: 'k', strength: 15 * strength, cost: 10 },\n    { target: 'l', source: 'j', strength: 20 * strength, cost: 10 },\n    { target: 'l', source: 'd', strength: 20 * strength, cost: 9 },\n    { target: 'l', source: 'b', strength: 20 * strength, cost: 8 },\n    { target: 'm', source: 'e', strength: 20 * strength, cost: 6 },\n    { target: 'm', source: 'k', strength: 20 * strength, cost: 8 },\n    { target: 'm', source: 'j', strength: 20 * strength, cost: 11 },\n    { target: 'n', source: 'i', strength: 40 * strength, cost: 7 },\n    { target: 'n', source: 'k', strength: 50 * strength, cost: 6 },\n    { target: 'o', source: 'l', strength: 40 * strength, cost: 5 },\n    { target: 'o', source: 'j', strength: 40 * strength, cost: 6 },\n    { target: 'p', source: 'm', strength: 40 * strength, cost: 7 },\n    { target: 'p', source: 'k', strength: 40 * strength, cost: 6 },\n    { target: 'q', source: 'd', strength: 80 * strength, cost: 5 },\n    { target: 'q', source: 'i', strength: 40 * strength, cost: 8 },\n    { target: 's', source: 'b', strength: 100 * strength, cost: 4 },\n    { target: 's', source: 'e', strength: 40 * strength, cost: 9 },\n    { target: 's', source: 'j', strength: 40 * strength, cost: 5 },\n    { target: 'target', source: 'q', strength: 100 * strength, cost: 3 },\n    { target: 'target', source: 'd', strength: 100 * strength, cost: 4 },\n    { target: 'source', source: 'm', strength: strength, cost: 6 },\n    { target: 'source', source: 'j', strength: 20 * strength, cost: 15 },\n    { target: 'source', source: 'p', strength: 20 * strength, cost: 9 },\n    { target: 't', source: 'd', strength: 100 * strength, cost: 6 },\n    { target: 't', source: 'l', strength: 100 * strength, cost: 4 },\n  ];\n  const margin = { top: 20, right: 50, bottom: 200, left: 100 },\n    width = 800 - margin.left - margin.right,\n    height = 800 - margin.top - margin.bottom;\n\n  function getNodeColor(node) {\n    return node.level === 1 ? 'red' : 'gray';\n  }\n\n  var svg = d3\n    .select('#graph-container')\n    .append('svg')\n    .attr('width', width)\n    .attr('height', height)\n    .attr('id', 'graph-svg')\n    .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')')\n    .attr('class', 'graph');\n  // simulation setup with all forces\n  var linkForce = d3\n    .forceLink()\n    .id(function (link) {\n      return link.id;\n    })\n    .strength(function (link) {\n      return link.strength / 0.5;\n    });\n\n  var simulation = d3\n    .forceSimulation()\n    .force('link', linkForce)\n    .force('charge', d3.forceManyBody().strength(-170))\n    .force('center', d3.forceCenter(width / 2, height / 2));\n\n  var linkElements = svg\n    .append('g')\n    .attr('class', 'links')\n    .selectAll('line')\n    .data(links)\n    .enter()\n    .append('line')\n    .attr('stroke-width', 1)\n    .attr('stroke', 'rgba(50, 50, 50, 0.2)')\n    .attr('id', (d) => {\n      if (d.source < d.target) {\n        return d.source + '-' + d.target;\n      }\n      return d.target + '-' + d.source;\n    });\n\n  var linkTextElements = svg\n    .append('g')\n    .attr('class', 'link_texts')\n    .selectAll('text')\n    .data(links)\n    .enter()\n    .append('text')\n    .text(function (link) {\n      return link.cost;\n    })\n    .attr('font-size', 15)\n    .attr('dx', 0)\n    .attr('dy', 0);\n\n  var nodeElements = svg\n    .append('g')\n    .attr('class', 'node')\n    .selectAll('circle')\n    .data(nodes)\n    .enter()\n    .append('circle')\n    .attr('r', 10)\n    .attr('fill', getNodeColor)\n    .attr('id', (d) => d.id);\n\n  var nodeTextElements = svg\n    .append('g')\n    .attr('class', 'texts')\n    .selectAll('text')\n    .data(nodes)\n    .enter()\n    .append('text')\n    .text(function (node) {\n      return node.id;\n    })\n    .attr('font-size', 15)\n    .attr('dx', 13)\n    .attr('dy', 0);\n\n  simulation.nodes(nodes).on('tick', () => {\n    nodeElements\n      .attr('cx', function (node) {\n        return node.x;\n      })\n      .attr('cy', function (node) {\n        return node.y;\n      });\n    nodeTextElements\n      .attr('x', function (node) {\n        return node.x;\n      })\n      .attr('y', function (node) {\n        return node.y;\n      });\n\n    linkElements\n      .attr('x1', function (link) {\n        return link.source.x;\n      })\n      .attr('y1', function (link) {\n        return link.source.y;\n      })\n      .attr('x2', function (link) {\n        return link.target.x;\n      })\n      .attr('y2', function (link) {\n        return link.target.y;\n      });\n\n    linkTextElements\n      .attr('x', function (link) {\n        return (link.source.x + link.target.x) / 2;\n      })\n      .attr('y', function (link) {\n        return (link.source.y + link.target.y) / 2;\n      });\n  });\n\n  simulation.force('link').links(links);\n}\n\nexport default createGraph;\n","import React, { Component } from 'react';\nconst {\n  Heap: PriorityQueue,\n} = require('../../../helpers/data-structures/heap_helper.js');\n// [cost, node]\n\nclass Dijkstra extends Component {\n  constructor(props) {\n    super(props);\n    this.unMounting = false;\n  }\n  componentWillUnmount() {\n    this.unMounting = true;\n  }\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.runningAlg === 'dijkstra' &&\n      this.props.runningAlg !== 'dijkstra'\n    ) {\n      this.unMounting = true;\n    }\n  }\n\n  djikstra = async () => {\n    let root = this.props.root;\n    let target = this.props.target;\n\n    this.highlightLine(1);\n    await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n    await this.checkPauseStatus();\n    if (this.props.stop) {\n      return;\n    }\n    if (this.unMounting) return;\n    this.removeHighlightedLine(1);\n\n    let pq = new PriorityQueue();\n    this.highlightLine(2);\n    await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n    await this.checkPauseStatus();\n    if (this.props.stop) {\n      return;\n    }\n    if (this.unMounting) return;\n    this.removeHighlightedLine(2);\n    this.props.updatePq(pq.getArray());\n\n    this.highlightLine(3);\n    await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n    await this.checkPauseStatus();\n    if (this.props.stop) {\n      return;\n    }\n    if (this.unMounting) return;\n    this.removeHighlightedLine(3);\n\n    let parents = {};\n    let distances = {};\n    Object.keys(this.props.g).forEach((node) => {\n      distances[node] = Infinity;\n      parents[node] = null;\n    });\n\n    this.props.updateParents(parents);\n\n    this.highlightLine(4);\n    await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n    await this.checkPauseStatus();\n    if (this.props.stop) {\n      return;\n    }\n    if (this.unMounting) return;\n    this.removeHighlightedLine(4);\n\n    this.props.updateDistances(distances);\n\n    this.highlightLine(5);\n    await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n    await this.checkPauseStatus();\n    if (this.props.stop) {\n      return;\n    }\n    if (this.unMounting) return;\n    this.removeHighlightedLine(5);\n    distances[root] = 0;\n    this.props.updateDistances(distances);\n\n    this.highlightLine(6);\n    await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n    await this.checkPauseStatus();\n    if (this.props.stop) {\n      return;\n    }\n    if (this.unMounting) return;\n    this.removeHighlightedLine(6);\n    pq.insert([0, root]);\n    this.props.updatePq(pq.getArray());\n    let activeLinks = [];\n\n    while (pq.size > 0) {\n      this.highlightLine(7);\n      await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n      await this.checkPauseStatus();\n      if (this.props.stop) {\n        return;\n      }\n      if (this.unMounting) return;\n      this.removeHighlightedLine(7);\n\n      let currentNode = pq.removeRoot()[1];\n      let currentNodeElement = this.activateCurrentNode(currentNode);\n\n      this.highlightLine(8);\n      await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n      await this.checkPauseStatus();\n      if (this.props.stop) {\n        this.cleanUpActiveLinksAndCurrentNode(activeLinks, null);\n        return;\n      }\n      if (this.unMounting) return;\n      this.removeHighlightedLine(8);\n\n      this.props.updateNode(currentNode);\n      this.props.updatePq(pq.getArray());\n\n      activeLinks = this.removeActiveLinks(activeLinks);\n\n      await new Promise((r) => setTimeout(r, 100 / this.props.speed));\n      await this.checkPauseStatus();\n      if (this.props.stop) {\n        this.cleanUpActiveLinksAndCurrentNode(activeLinks, currentNode);\n        return;\n      }\n      if (this.unMounting) return;\n\n      for (let [neighborNodeWeight, neighborNode] of this.props.g[\n        currentNode\n      ]) {\n        let linkOfInterestElement = this.activateLink(\n          currentNode,\n          neighborNode\n        );\n        activeLinks.push(linkOfInterestElement);\n        this.highlightLine(9);\n        await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n        await this.checkPauseStatus();\n        if (this.props.stop) {\n          this.cleanUpActiveLinksAndCurrentNode(activeLinks, null);\n          return;\n        }\n        if (this.unMounting) return;\n        this.removeHighlightedLine(9);\n\n        this.props.updateNeighbor(neighborNode, neighborNodeWeight);\n\n        let potentialScore = distances[currentNode] + neighborNodeWeight;\n\n        this.highlightLine(10);\n        await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n        await this.checkPauseStatus();\n        if (this.props.stop) {\n          this.cleanUpActiveLinksAndCurrentNode(activeLinks, null);\n          return;\n        }\n        if (this.unMounting) return;\n        this.removeHighlightedLine(10);\n        this.props.updatePotentialScore(potentialScore);\n\n        this.highlightLine(11);\n        await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n        await this.checkPauseStatus();\n        if (this.props.stop) {\n          this.cleanUpActiveLinksAndCurrentNode(activeLinks, null);\n          return;\n        }\n        if (this.unMounting) return;\n        this.removeHighlightedLine(11);\n\n        if (potentialScore < distances[neighborNode]) {\n          //updates\n\n          distances[neighborNode] = potentialScore;\n          this.highlightLine(12);\n          await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n          await this.checkPauseStatus();\n          if (this.props.stop) {\n            this.cleanUpActiveLinksAndCurrentNode(activeLinks, null);\n            return;\n          }\n          if (this.unMounting) return;\n          this.removeHighlightedLine(12);\n          this.props.updateDistances(distances);\n\n          parents[neighborNode] = currentNode;\n          this.highlightLine(13);\n          await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n          await this.checkPauseStatus();\n          if (this.props.stop) {\n            this.cleanUpActiveLinksAndCurrentNode(activeLinks, null);\n            return;\n          }\n          if (this.unMounting) return;\n          this.removeHighlightedLine(13);\n          this.props.updateParents(parents);\n\n          pq.insert([neighborNodeWeight, neighborNode]);\n          this.highlightLine(14);\n          await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n          await this.checkPauseStatus();\n          if (this.props.stop) {\n            this.cleanUpActiveLinksAndCurrentNode(activeLinks, null);\n            return;\n          }\n          if (this.unMounting) return;\n          this.removeHighlightedLine(14);\n\n          this.props.updatePq(pq.getArray());\n        }\n        this.props.updatePotentialScore(null);\n        this.props.updateNeighbor(null, null);\n      }\n      this.props.updateNode(null);\n      this.fadeOutLinks(activeLinks);\n      this.updateCurrentNodeToBeVisited(currentNodeElement);\n    }\n    this.props.updateNode(null);\n\n    let end = target;\n    let stack = [end];\n    while (end != null) {\n      stack.push(parents[end]);\n      end = parents[end];\n    }\n    let shortestPath = stack.reverse().slice(1);\n    this.highlightShortestPath(shortestPath);\n  };\n\n  activateCurrentNode(currentNode) {\n    let currentNodeElement = document.getElementById(currentNode);\n    currentNodeElement.classList.add('current-node-of-interest');\n\n    return currentNodeElement;\n  }\n\n  removeActiveLinks(activeLinks) {\n    activeLinks.forEach((e) => {\n      if (e) {\n        e.classList.remove('fade-out-link', 'link-traversed');\n      }\n    });\n    return [];\n  }\n\n  highlightLine(lineNum) {\n    let el = document.getElementById('dijkstra-' + lineNum);\n    if (el) el.classList.add('active-code-line');\n  }\n  removeHighlightedLine(lineNum) {\n    let el = document.getElementById('dijkstra-' + lineNum);\n    if (el) el.classList.remove('active-code-line');\n  }\n\n  activateLink(currentNode, neighborNode) {\n    let linkString =\n      currentNode < neighborNode\n        ? currentNode + '-' + neighborNode\n        : neighborNode + '-' + currentNode;\n    let linkOfInterestElement = document.getElementById(linkString);\n    if (linkOfInterestElement)\n      linkOfInterestElement.classList.add('link-traversed');\n    return linkOfInterestElement;\n  }\n\n  updateCurrentNodeToBeVisited(currentNodeElement) {\n    currentNodeElement.classList.remove('current-node-of-interest');\n    currentNodeElement.classList.add('node-complete-tree');\n  }\n\n  fadeOutLinks(activeLinks) {\n    activeLinks.forEach((e) => {\n      if (e) {\n        e.classList.add('fade-out-link');\n      }\n    });\n  }\n\n  async checkPauseStatus() {\n    while (this.props.pause) {\n      await new Promise((r) => setTimeout(r, 1000));\n      continue;\n    }\n  }\n  cleanUpActiveLinksAndCurrentNode(activeLinks, currentNode) {\n    let currentNodeElement = document.getElementById(currentNode);\n    if (currentNodeElement) {\n      currentNodeElement.classList.remove('current-node-of-interest');\n    }\n    if (activeLinks.length > 0) {\n      this.removeActiveLinks(activeLinks);\n    }\n  }\n\n  highlightShortestPath(shortestPath) {\n    for (let i = 1; i < shortestPath.length; i++) {\n      let prev = shortestPath[i - 1];\n      let current = shortestPath[i];\n      this.activateLink(prev, current);\n    }\n  }\n\n  render() {\n    return (\n      <button\n        className=\"graph-button\"\n        onClick={async () => {\n          if (this.unMounting) {\n            this.unMounting = false;\n          }\n          await this.props.setRunningAlg('dijkstra');\n          this.djikstra();\n        }}\n      >\n        Dijkstra\n      </button>\n    );\n  }\n}\n\nexport default Dijkstra;\n","import React, { Component } from 'react';\n\nclass Prim extends Component {\n  constructor(props) {\n    super(props);\n    this.unMounting = false;\n  }\n  componentWillUnmount() {\n    this.unMounting = true;\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.runningAlg === 'prim' && this.props.runningAlg !== 'prim') {\n      this.unMounting = true;\n    }\n  }\n  highlightLine(lineNum) {\n    let el = document.getElementById('prim-' + lineNum);\n    if (el) el.classList.add('active-code-line');\n  }\n  removeHighlightedLine(lineNum) {\n    let el = document.getElementById('prim-' + lineNum);\n    if (el) el.classList.remove('active-code-line');\n  }\n  prim = async () => {\n    let root = this.props.root;\n    let costMap = {};\n    let parents = {};\n    let mstSet = {};\n    Object.keys(this.props.g).forEach((k) => {\n      costMap[k] = Infinity;\n      parents[k] = null;\n      mstSet[k] = false;\n    });\n    this.highlightLine(1);\n    await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n    await this.checkPauseStatus();\n    if (this.props.stop) {\n      return;\n    }\n    if (this.unMounting) return;\n    this.removeHighlightedLine(1);\n\n    this.highlightLine(2);\n    await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n    await this.checkPauseStatus();\n    if (this.props.stop) {\n      return;\n    }\n    if (this.unMounting) return;\n    this.removeHighlightedLine(2);\n    this.props.updateDistances(costMap);\n\n    this.highlightLine(3);\n    await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n    await this.checkPauseStatus();\n    if (this.props.stop) {\n      return;\n    }\n    if (this.unMounting) return;\n    this.removeHighlightedLine(3);\n    this.props.updateParents(parents);\n\n    this.highlightLine(4);\n    await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n    await this.checkPauseStatus();\n    if (this.props.stop) {\n      return;\n    }\n    if (this.unMounting) return;\n    this.removeHighlightedLine(4);\n    this.props.updatePrimMstSet(mstSet);\n\n    this.highlightLine(5);\n    await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n    await this.checkPauseStatus();\n    if (this.props.stop) {\n      return;\n    }\n    if (this.unMounting) return;\n    this.removeHighlightedLine(5);\n    parents[root] = -1;\n\n    this.highlightLine(6);\n    await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n    await this.checkPauseStatus();\n    if (this.props.stop) {\n      return;\n    }\n    if (this.unMounting) return;\n    this.removeHighlightedLine(6);\n    costMap[root] = 0;\n\n    let activeLinks = [];\n    for (let i = 0; i < Object.keys(this.props.g).length; i++) {\n      this.highlightLine(7);\n      await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n      await this.checkPauseStatus();\n      if (this.props.stop) {\n        return;\n      }\n      if (this.unMounting) return;\n      this.removeHighlightedLine(7);\n\n      this.highlightLine(8);\n      await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n      await this.checkPauseStatus();\n      if (this.props.stop) {\n        return;\n      }\n      if (this.unMounting) return;\n      this.removeHighlightedLine(8);\n      let minNode = this.findMin(costMap, mstSet);\n      this.props.updatePrimMinNode(minNode);\n\n      this.highlightLine(9);\n      mstSet[minNode] = true;\n      let minNodeEl = this.activateCurrentNode(minNode);\n\n      await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n      await this.checkPauseStatus();\n      if (this.props.stop) {\n        this.cleanUpActiveLinksAndCurrentNode(activeLinks, minNode);\n        return;\n      }\n      if (this.unMounting) return;\n      this.removeHighlightedLine(9);\n      this.props.updatePrimMstSet(mstSet);\n\n      for (let [cost, neighbor] of this.props.g[minNode]) {\n        this.highlightLine(10);\n        await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n        await this.checkPauseStatus();\n        if (this.props.stop) {\n          this.cleanUpActiveLinksAndCurrentNode(activeLinks, minNode);\n          return;\n        }\n        if (this.unMounting) return;\n        this.removeHighlightedLine(10);\n\n        this.props.updateNeighbor(neighbor, cost);\n\n        this.highlightLine(11);\n        await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n        await this.checkPauseStatus();\n        if (this.props.stop) {\n          this.cleanUpActiveLinksAndCurrentNode(activeLinks, minNode);\n          return;\n        }\n        if (this.unMounting) return;\n        this.removeHighlightedLine(11);\n\n        if (mstSet[neighbor] === false) {\n          this.highlightLine(12);\n          await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n          await this.checkPauseStatus();\n          if (this.props.stop) {\n            this.cleanUpActiveLinksAndCurrentNode(activeLinks, minNode);\n            return;\n          }\n          if (this.unMounting) return;\n          this.removeHighlightedLine(12);\n\n          if (costMap[neighbor] > cost) {\n            this.highlightLine(13);\n            let el = this.deActivateOldLink(\n              neighbor,\n              parents[neighbor],\n              this.props.speed\n            );\n            if (el) activeLinks.filter((e) => e !== el);\n\n            this.activateLink(minNode, neighbor, activeLinks);\n            await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n            await this.checkPauseStatus();\n            if (this.props.stop) {\n              this.cleanUpActiveLinksAndCurrentNode(activeLinks, minNode);\n              return;\n            }\n            if (this.unMounting) return;\n            this.removeHighlightedLine(13);\n            costMap[neighbor] = cost;\n            this.props.updateDistances(costMap);\n\n            this.highlightLine(14);\n            await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n            await this.checkPauseStatus();\n            if (this.props.stop) {\n              this.cleanUpActiveLinksAndCurrentNode(activeLinks, minNode);\n              return;\n            }\n            if (this.unMounting) return;\n            this.removeHighlightedLine(14);\n            parents[neighbor] = minNode;\n            this.props.updateParents(parents);\n          }\n        }\n        this.props.updateNeighbor(null, null);\n      }\n      this.props.updatePrimMinNode(null);\n      this.updateCurrentNodeToBeVisited(minNodeEl);\n    }\n    // this.calculateCumulativeDistance(costMap, parents);\n  };\n\n  findMin(key, mstSet) {\n    let min = Infinity;\n    let minNode = null;\n    for (let node of Object.keys(key)) {\n      if (key[node] < min && mstSet[node] === false) {\n        min = key[node];\n        minNode = node;\n      }\n    }\n    return minNode;\n  }\n\n  activateCurrentNode(currentNode) {\n    let currentNodeElement = document.getElementById(currentNode);\n    currentNodeElement.classList.add('current-node-of-interest');\n    return currentNodeElement;\n  }\n\n  activateLink(currentNode, neighborNode, activeLinks) {\n    let linkString =\n      currentNode < neighborNode\n        ? currentNode + '-' + neighborNode\n        : neighborNode + '-' + currentNode;\n\n    let linkOfInterestElement = document.getElementById(linkString);\n    if (linkOfInterestElement) {\n      linkOfInterestElement.classList.add('link-traversed');\n      activeLinks.push(linkOfInterestElement);\n    }\n    return linkOfInterestElement;\n  }\n\n  updateCurrentNodeToBeVisited(currentNodeElement) {\n    currentNodeElement.classList.remove('current-node-of-interest');\n    currentNodeElement.classList.add('node-complete-tree');\n  }\n\n  async deActivateOldLink(node, oldChild, getSpeedRequest, activeLinks) {\n    let linkString =\n      node < oldChild ? node + '-' + oldChild : oldChild + '-' + node;\n    let el = document.getElementById(linkString);\n    if (el) {\n      el.classList.add('fade-out-link');\n      await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n      el.classList.remove('link-traversed', 'fade-out-link');\n      return el;\n    }\n  }\n\n  async checkPauseStatus() {\n    while (this.props.pause) {\n      await new Promise((r) => setTimeout(r, 1000));\n      continue;\n    }\n  }\n\n  cleanUpActiveLinksAndCurrentNode(activeLinks, currentNode) {\n    let currentNodeElement = document.getElementById(currentNode);\n    if (currentNodeElement) {\n      currentNodeElement.classList.remove('current-node-of-interest');\n    }\n    if (activeLinks.length > 0) {\n      this.removeActiveLinks(activeLinks);\n    }\n  }\n\n  removeActiveLinks(activeLinks) {\n    activeLinks.forEach((e) => {\n      if (e) {\n        e.classList.remove('fade-out-link', 'link-traversed');\n      }\n    });\n    return [];\n  }\n\n  // calculateCumulativeDistance(costMap, parents) {\n  //   let cumCostMap = {};\n  //   for (let node of Object.keys(costMap)) {\n  //     if (parents[node] == null) {\n  //       cumCostMap[node] = '';\n  //       continue;\n  //     }\n  //     let currentNode = parents[node];\n  //     let cost = costMap[node];\n  //     while (currentNode !== -1) {\n  //       cost += costMap[currentNode];\n  //       currentNode = parents[currentNode];\n  //     }\n  //     cumCostMap[node] = cost;\n  //   }\n  //   return cumCostMap;\n  // }\n\n  render() {\n    return (\n      <button\n        className=\"graph-button\"\n        onClick={async () => {\n          if (this.unMounting) {\n            this.unMounting = false;\n          }\n          await this.props.setRunningAlg('prim');\n          this.prim();\n        }}\n      >\n        Prim\n      </button>\n    );\n  }\n}\n\nexport default Prim;\n","import React, { Component } from 'react';\nimport createGraph from '../graph-builders/undirected-graph-builder';\nimport Dijkstra from './algorithms/graph-algorithms/Dijkstra';\nimport Prim from './algorithms/graph-algorithms/Prim';\nimport Sidebar from './sidebar/Sidebar';\nimport RenderListComponent from './sidebar/RenderListComponent';\nimport RenderObjectComponent from './sidebar/RenderObjectComponent';\nclass UndirectedGraphAlgorithms extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pause: false,\n      stop: false,\n      speed: 1,\n      distances: {},\n      parents: {},\n      runningAlg: '',\n      priorityQueue: null,\n      mstSet: {},\n      clicked: [false, false, false, false, false, false],\n      node: null,\n      neighbor: null,\n      neighborCost: null,\n      minNode: null,\n      potentialScore: null,\n    };\n    this.adjList = {\n      a: [\n        [3, 'g'],\n        [5, 'i'],\n        [7, 'c'],\n        [6, 'f'],\n        [10, 'b'],\n        [8, 'd'],\n      ],\n      b: [\n        [10, 'a'],\n        [8, 'f'],\n        [11, 'e'],\n        [4, 's'],\n        [8, 'j'],\n        [8, 'l'],\n        [9, 'd'],\n      ],\n      c: [\n        [5, 'k'],\n        [2, 'h'],\n        [9, 'e'],\n        [7, 'f'],\n        [7, 'a'],\n      ],\n      d: [\n        [5, 'q'],\n        [10, 'i'],\n        [8, 'a'],\n        [9, 'b'],\n        [9, 'l'],\n        [6, 't'],\n        [4, 'target'],\n      ],\n      e: [\n        [6, 'm'],\n        [10, 'j'],\n        [9, 's'],\n        [11, 'b'],\n        [6, 'f'],\n        [9, 'c'],\n        [10, 'k'],\n      ],\n      f: [\n        [6, 'a'],\n        [7, 'c'],\n        [6, 'e'],\n        [8, 'b'],\n      ],\n      g: [\n        [3, 'h'],\n        [10, 'k'],\n        [4, 'i'],\n        [3, 'a'],\n      ],\n      h: [\n        [2, 'c'],\n        [3, 'g'],\n      ],\n      i: [\n        [8, 'q'],\n        [10, 'd'],\n        [5, 'a'],\n        [4, 'g'],\n        [14, 'k'],\n        [7, 'n'],\n      ],\n      j: [\n        [6, 'o'],\n        [10, 'l'],\n        [8, 'b'],\n        [5, 's'],\n        [10, 'e'],\n        [11, 'm'],\n        [15, 'source'],\n      ],\n      k: [\n        [6, 'n'],\n        [14, 'i'],\n        [10, 'g'],\n        [5, 'c'],\n        [10, 'e'],\n        [8, 'm'],\n        [6, 'p'],\n      ],\n      l: [\n        [4, 't'],\n        [9, 'd'],\n        [8, 'b'],\n        [10, 'j'],\n        [5, 'o'],\n      ],\n      m: [\n        [8, 'k'],\n        [6, 'e'],\n        [11, 'j'],\n        [6, 'source'],\n        [7, 'p'],\n      ],\n      n: [\n        [6, 'k'],\n        [7, 'i'],\n      ],\n      o: [\n        [5, 'l'],\n        [6, 'j'],\n      ],\n      p: [\n        [6, 'k'],\n        [7, 'm'],\n        [9, 'source'],\n      ],\n      q: [\n        [3, 'target'],\n        [8, 'i'],\n        [5, 'd'],\n      ],\n      s: [\n        [9, 'e'],\n        [4, 'b'],\n        [5, 'j'],\n      ],\n      t: [\n        [6, 'd'],\n        [4, 'l'],\n      ],\n      target: [\n        [3, 'q'],\n        [4, 'd'],\n      ],\n      source: [\n        [9, 'p'],\n        [6, 'm'],\n        [15, 'j'],\n      ],\n    };\n  }\n  componentDidMount() {\n    createGraph();\n    this.graph = document.getElementById('graph-container');\n  }\n\n  componentWillUnmount() {\n    let svg = document.getElementById('graph-svg');\n    if (this.graph.hasChildNodes()) this.graph.removeChild(svg);\n    this.reset();\n  }\n\n  // updateDijkstraData = async (distances, parents) => {\n  //   await this.setState({\n  //     dijkstraDistances: distances,\n  //     parents,\n  //   });\n  // };\n\n  updateDistances = async (distances) => {\n    await this.setState({\n      distances,\n    });\n  };\n\n  updateParents = async (parents) => {\n    await this.setState({\n      parents,\n    });\n  };\n\n  updateNode = async (node) => {\n    await this.setState({ node });\n  };\n  updatePrimMinNode = async (minNode) => {\n    await this.setState({ minNode });\n  };\n  updateNeighbor = async (neighbor, cost) => {\n    await this.setState({ neighbor, neighborCost: cost });\n  };\n  updatePrimMstSet = async (mstSet) => {\n    await this.setState({ mstSet });\n  };\n\n  setRunningAlg = async (alg) => {\n    this.reset();\n    await this.setState({ runningAlg: alg });\n  };\n\n  updatePq = async (a) => {\n    await this.setState({ priorityQueue: a });\n  };\n\n  updatePotentialScore = (s) => {\n    this.setState({ potentialScore: s });\n  };\n\n  getPauseStatus = () => this.state.pause;\n  getStopStatus = () => this.state.stop;\n  getSpeedRequest = () => Number(this.state.speed) + 0.1;\n  toggleClicked = (i) => {\n    let a = this.state.clicked.slice();\n    a[i] = !a[i];\n    this.setState({\n      clicked: a,\n    });\n  };\n  reset = () => {\n    Object.keys(this.adjList).forEach((e) => {\n      let el = document.getElementById(e);\n      if (el) {\n        el.classList.remove('node-complete-tree');\n        el.classList.remove('current-node-of-interest');\n      }\n    });\n\n    for (let i = 1; i < 15; i++) {\n      let dijkstraPseduoElement = document.getElementById('dijkstra-' + i);\n      if (dijkstraPseduoElement) dijkstraPseduoElement.classList = '';\n      let primPseduoElement = document.getElementById('prim-' + i);\n      if (primPseduoElement) primPseduoElement.classList = '';\n    }\n    let lines = document.getElementsByTagName('line');\n    for (let line of lines) {\n      line.classList = '';\n    }\n    this.setState({\n      distances: {},\n      parents: {},\n      runningAlg: '',\n      minNode: null,\n      neighbor: null,\n      neighborCost: null,\n      mstSet: {},\n      clicked: [false, false, false, false, false],\n    });\n    if (this.state.stop) {\n      this.setState({ stop: false, pause: false });\n    }\n  };\n\n  renderDijkstraTableData() {\n    return Object.keys(this.state.distances).map((key, index) => {\n      return (\n        <tr key={index}>\n          <td>{key}</td>\n          <td>{this.state.parents[key]}</td>\n          <td>{this.state.distances[key]}</td>\n          <td style={{ backgroundColor: index === 0 ? 'yellow' : '' }}>\n            {this.state.priorityQueue[index]}\n          </td>\n        </tr>\n      );\n    });\n  }\n\n  renderDijkstraHeading() {\n    return (\n      <tr>\n        <th>Node</th>\n        <th>Parent</th>\n        <th>Distance</th>\n        <th>Priority Queue</th>\n      </tr>\n    );\n  }\n\n  renderPrimTableData() {\n    return Object.keys(this.state.distances).map((key, index) => {\n      return (\n        <tr key={index}>\n          <td>{key}</td>\n          <td>{this.state.parents[key]}</td>\n          <td>{this.state.distances[key]}</td>\n        </tr>\n      );\n    });\n  }\n\n  renderPrimHeading() {\n    return (\n      <tr>\n        <th>Node</th>\n        <th>Parent</th>\n        <th>Cost</th>\n      </tr>\n    );\n  }\n\n  renderPrimPseudocode() {\n    const indentation = (num) => {\n      return num * 20;\n    };\n    return (\n      <div>\n        <div id={'prim-1'}>\n          1<span style={{ marginLeft: indentation(1) }}>Prim(G, root)</span>\n        </div>\n        <div id={'prim-2'}>\n          2\n          <span style={{ marginLeft: indentation(2) }}>\n            let cost be a map with all nodes as keys and values of Infinity\n          </span>\n        </div>\n        <div id={'prim-3'}>\n          3\n          <span style={{ marginLeft: indentation(2) }}>\n            let parents be a map with all nodes as keys and values of null\n          </span>\n        </div>\n        <div id={'prim-4'}>\n          4\n          <span style={{ marginLeft: indentation(2) }}>\n            let mstSet be a map with all nodes as keys and values of false\n          </span>\n        </div>\n        <div id={'prim-5'}>\n          5\n          <span style={{ marginLeft: indentation(2) }}>\n            set parents[root] = -1\n          </span>\n        </div>\n        <div id={'prim-6'}>\n          6\n          <span style={{ marginLeft: indentation(2) }}>\n            set costMap[root] = 0\n          </span>\n        </div>\n        <div id={'prim-7'}>\n          7\n          <span style={{ marginLeft: indentation(2) }}>\n            do n times where n is number of nodes\n          </span>\n        </div>\n        <div id={'prim-8'}>\n          8\n          <span style={{ marginLeft: indentation(3) }}>\n            {' '}\n            minNode = findMin(cost, mstSet)\n          </span>\n        </div>\n        <div id={'prim-9'}>\n          9\n          <span style={{ marginLeft: indentation(3) }}>\n            {' '}\n            set mstSet[minNode] = true\n          </span>\n        </div>\n        <div id={'prim-10'}>\n          10\n          <span style={{ marginLeft: indentation(3) }}>\n            for every neighbor, neighborCost of minNode\n          </span>\n        </div>\n        <div id={'prim-11'}>\n          11\n          <span style={{ marginLeft: indentation(4) }}>\n            if mstSet[neighbor] is false\n          </span>\n        </div>\n        <div id={'prim-12'}>\n          12\n          <span style={{ marginLeft: indentation(5) }}>\n            if cost[neighbor] {'>'} cost\n          </span>\n        </div>\n        <div id={'prim-13'}>\n          13\n          <span style={{ marginLeft: indentation(6) }}>\n            set cost[neighbor] = cost{' '}\n          </span>\n        </div>\n        <div id={'prim-14'}>\n          14\n          <span style={{ marginLeft: indentation(6) }}>\n            set parents[neighbor] = minNode{' '}\n          </span>\n        </div>\n      </div>\n    );\n  }\n  renderDijkstraPseudocode() {\n    const indentation = (num) => {\n      return num * 20;\n    };\n    return (\n      <div>\n        <div id={'dijkstra-1'}>\n          1\n          <span style={{ marginLeft: indentation(1) }}>\n            Dijkstra(G, source, target)\n          </span>\n        </div>\n        <div id={'dijkstra-2'}>\n          2\n          <span style={{ marginLeft: indentation(2) }}>\n            let pq be a Priority Queue (min-heap)\n          </span>\n        </div>\n        <div id={'dijkstra-3'}>\n          3\n          <span style={{ marginLeft: indentation(2) }}>\n            let parents be a map with all nodes as keys and values of null\n          </span>\n        </div>\n        <div id={'dijkstra-4'}>\n          4\n          <span style={{ marginLeft: indentation(2) }}>\n            let distances be a map with all nodes as keys and values of Infinity\n          </span>\n        </div>\n        <div id={'dijkstra-5'}>\n          5\n          <span style={{ marginLeft: indentation(2) }}>\n            set distances[source] = 0\n          </span>\n        </div>\n        <div id={'dijkstra-6'}>\n          6\n          <span style={{ marginLeft: indentation(2) }}>\n            insert root at cost 0 into pq\n          </span>\n        </div>\n        <div id={'dijkstra-7'}>\n          7\n          <span style={{ marginLeft: indentation(2) }}>\n            while pq is not empty\n          </span>\n        </div>\n        <div id={'dijkstra-8'}>\n          8\n          <span style={{ marginLeft: indentation(3) }}>\n            current = pq.removeRoot()\n          </span>\n        </div>\n        <div id={'dijkstra-9'}>\n          9\n          <span style={{ marginLeft: indentation(3) }}>\n            for neighbor of G[current]\n          </span>\n        </div>\n        <div id={'dijkstra-10'}>\n          10\n          <span style={{ marginLeft: indentation(4) }}>\n            set potentialScore = distances[current] + neighborCost\n          </span>\n        </div>\n        <div id={'dijkstra-11'}>\n          11\n          <span style={{ marginLeft: indentation(4) }}>\n            {' '}\n            if potentialScore {'<'} distances[neighbor]\n          </span>\n        </div>\n        <div id={'dijkstra-12'}>\n          12\n          <span style={{ marginLeft: indentation(5) }}>\n            set distances[neighbor] = potentialScore\n          </span>\n        </div>\n        <div id={'dijkstra-13'}>\n          13\n          <span style={{ marginLeft: indentation(5) }}>\n            set parents[neighbor] = current\n          </span>\n        </div>\n        <div id={'dijkstra-14'}>\n          14\n          <span style={{ marginLeft: indentation(5) }}>\n            insert neighbor at cost neighborCost into pq\n          </span>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className={'row'}>\n        <div className={'col-4'} id={'graph-container'}>\n          <Dijkstra\n            g={this.adjList}\n            root={'source'}\n            target={'target'}\n            pause={this.state.pause}\n            stop={this.state.stop}\n            speed={this.state.speed}\n            runningAlg={this.state.runningAlg}\n            setRunningAlg={this.setRunningAlg}\n            updateDistances={this.updateDistances}\n            updateParents={this.updateParents}\n            updatePq={this.updatePq}\n            updatePotentialScore={this.updatePotentialScore}\n            updateNeighbor={this.updateNeighbor}\n            updateNode={this.updateNode}\n          />\n          <div className={'divider'}></div>\n          <Prim\n            g={this.adjList}\n            root={'source'}\n            pause={this.state.pause}\n            stop={this.state.stop}\n            speed={this.state.speed}\n            runningAlg={this.state.runningAlg}\n            setRunningAlg={this.setRunningAlg}\n            updateDistances={this.updateDistances}\n            updateParents={this.updateParents}\n            updateNeighbor={this.updateNeighbor}\n            updatePrimMinNode={this.updatePrimMinNode}\n            updatePrimMstSet={this.updatePrimMstSet}\n          />\n          <div className={'divider'}></div>\n          <button\n            className=\"graph-button\"\n            onClick={() => {\n              this.setState({ pause: false, stop: true });\n              this.reset();\n            }}\n          >\n            Reset\n          </button>\n          <div className={'divider'}></div>\n          <button\n            className=\"graph-button\"\n            onClick={() => {\n              this.setState({ pause: !this.state.pause });\n            }}\n          >\n            {this.state.pause ? 'UnPause' : 'Pause'}\n          </button>\n          <form onSubmit={(event) => event.preventDefault()}>\n            <label>\n              Speed:\n              <input\n                style={{ width: '50px' }}\n                type=\"number\"\n                value={this.state.speed}\n                onChange={(event) => {\n                  event.preventDefault();\n                  this.setState({\n                    speed: event.target.value,\n                  });\n                }}\n              />\n            </label>\n          </form>\n        </div>\n\n        <div className={'col-4'} id={'output-tables'}>\n          <table\n            id={'undirected-graph-table'}\n            className={('undirected-graph-table', 'float-right')}\n            style={{ marginRight: '40px' }}\n          >\n            <tbody>\n              {this.state.runningAlg === 'prim'\n                ? this.renderPrimHeading()\n                : this.state.runningAlg === 'dijkstra'\n                ? this.renderDijkstraHeading()\n                : ''}\n              {this.state.runningAlg === 'prim'\n                ? this.renderPrimTableData()\n                : this.state.runningAlg === 'dijkstra'\n                ? this.renderDijkstraTableData()\n                : ''}\n            </tbody>\n          </table>\n        </div>\n        <div className={'col-4'}>\n          <div className={'row'}>\n            {this.state.runningAlg === ''\n              ? ''\n              : this.state.runningAlg === 'prim'\n              ? this.renderPrimPseudocode()\n              : this.renderDijkstraPseudocode()}\n          </div>\n\n          <div className={'row'}>\n            {this.state.runningAlg === 'prim' ? (\n              <Sidebar showButton={this.state.runningAlg !== ''}>\n                {this.state.minNode ? (\n                  <li> minNode = {this.state.minNode} </li>\n                ) : (\n                  ''\n                )}\n\n                {this.state.node ? <li> current = {this.state.node} </li> : ''}\n                {this.state.neighbor ? (\n                  <li> neighbor = {this.state.neighbor} </li>\n                ) : (\n                  ''\n                )}\n\n                {this.state.neighborCost ? (\n                  <li> neighborCost = {this.state.neighborCost} </li>\n                ) : (\n                  ''\n                )}\n\n                <li onClick={() => this.toggleClicked(0)}>\n                  {Object.keys(this.state.distances).length > 0 ? (\n                    <RenderObjectComponent\n                      obj={this.state.distances}\n                      objName={'cost'}\n                      clicked={this.state.clicked[0]}\n                    />\n                  ) : (\n                    ''\n                  )}\n                </li>\n                <li onClick={() => this.toggleClicked(1)}>\n                  {Object.keys(this.state.parents).length > 0 ? (\n                    <RenderObjectComponent\n                      obj={this.state.parents}\n                      objName={'parents'}\n                      clicked={this.state.clicked[1]}\n                    />\n                  ) : (\n                    ''\n                  )}\n                </li>\n                <li onClick={() => this.toggleClicked(2)}>\n                  {Object.keys(this.state.mstSet).length > 0 ? (\n                    <RenderObjectComponent\n                      obj={this.state.mstSet}\n                      objName={'mstSet'}\n                      clicked={this.state.clicked[2]}\n                    />\n                  ) : (\n                    ''\n                  )}\n                </li>\n                <li onClick={() => this.toggleClicked(3)}>\n                  {this.adjList ? (\n                    <RenderObjectComponent\n                      obj={this.adjList}\n                      objName={'G'}\n                      clicked={this.state.clicked[3]}\n                    />\n                  ) : (\n                    ''\n                  )}\n                </li>\n              </Sidebar>\n            ) : (\n              ''\n            )}\n            {this.state.runningAlg === 'dijkstra' ? (\n              <Sidebar showButton={this.state.runningAlg !== ''}>\n                {this.state.node ? <li> current = {this.state.node} </li> : ''}\n                {this.state.neighbor ? (\n                  <li> neighbor = {this.state.neighbor} </li>\n                ) : (\n                  ''\n                )}\n\n                {this.state.neighborCost ? (\n                  <li> neighborCost = {this.state.neighborCost} </li>\n                ) : (\n                  ''\n                )}\n\n                {this.state.potentialScore ? (\n                  <li> potentialScore = {this.state.potentialScore} </li>\n                ) : (\n                  ''\n                )}\n                <li onClick={() => this.toggleClicked(0)}>\n                  {this.state.priorityQueue ? (\n                    <RenderListComponent\n                      list={this.state.priorityQueue}\n                      listName={'pq'}\n                      clicked={this.state.clicked[0]}\n                    />\n                  ) : (\n                    ''\n                  )}\n                </li>\n                <li onClick={() => this.toggleClicked(1)}>\n                  {Object.keys(this.state.distances).length > 0 ? (\n                    <RenderObjectComponent\n                      obj={this.state.distances}\n                      objName={'distances'}\n                      clicked={this.state.clicked[1]}\n                    />\n                  ) : (\n                    ''\n                  )}\n                </li>\n                <li onClick={() => this.toggleClicked(2)}>\n                  {Object.keys(this.state.parents).length > 0 ? (\n                    <RenderObjectComponent\n                      obj={this.state.parents}\n                      objName={'parents'}\n                      clicked={this.state.clicked[2]}\n                    />\n                  ) : (\n                    ''\n                  )}\n                </li>\n                <li onClick={() => this.toggleClicked(3)}>\n                  {this.adjList ? (\n                    <RenderObjectComponent\n                      obj={this.adjList}\n                      objName={'G'}\n                      clicked={this.state.clicked[3]}\n                    />\n                  ) : (\n                    ''\n                  )}\n                </li>\n              </Sidebar>\n            ) : (\n              <Sidebar>\n                <li onClick={() => this.toggleClicked(4)}>\n                  {this.adjList ? (\n                    <RenderObjectComponent\n                      obj={this.adjList}\n                      objName={'G'}\n                      clicked={this.state.clicked[4]}\n                    />\n                  ) : (\n                    ''\n                  )}\n                </li>\n              </Sidebar>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default UndirectedGraphAlgorithms;\n","import React, { Component } from 'react';\n\nclass Topsort extends Component {\n  constructor(props) {\n    super(props);\n    this.unMounting = false;\n    this.previousNodes = [];\n    this.callStack = [];\n  }\n  componentWillUnmount() {\n    this.unMounting = true;\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.runningAlg === 'topsort' &&\n      this.props.runningAlg !== 'topsort'\n    ) {\n      this.unMounting = true;\n    }\n  }\n\n  highlightLine(classId) {\n    let el = document.getElementById(classId);\n    if (el) el.classList.add('active-code-line');\n  }\n  removeHighlightedLine(classId) {\n    let el = document.getElementById(classId);\n    if (el) el.classList.remove('active-code-line');\n  }\n\n  topSort = async () => {\n    this.highlightLine('topsort-1');\n    await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n    await this.checkPauseStatus();\n    if (this.props.stop) {\n      return;\n    }\n    if (this.unMounting) return;\n    this.removeHighlightedLine('topsort-1');\n\n    this.highlightLine('topsort-2');\n    await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n    await this.checkPauseStatus();\n    if (this.props.stop) {\n      return;\n    }\n    if (this.unMounting) return;\n    this.removeHighlightedLine('topsort-2');\n\n    let stack = [];\n    this.props.updateStack(stack);\n\n    this.highlightLine('topsort-3');\n    await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n    await this.checkPauseStatus();\n    if (this.props.stop) {\n      return;\n    }\n    if (this.unMounting) return;\n    this.removeHighlightedLine('topsort-3');\n\n    let visited = {};\n    Object.keys(this.props.g).map((key) => (visited[key] = null));\n    this.props.updateVisited(visited);\n\n    let activeLinks = {};\n\n    for (let node of Object.keys(this.props.g)) {\n      this.highlightLine('topsort-4');\n      await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n      await this.checkPauseStatus();\n      if (this.props.stop) {\n        this.cleanUpActiveLinksAndCurrentNode(activeLinks);\n        return;\n      }\n      if (this.unMounting) return;\n      this.removeHighlightedLine('topsort-4');\n      this.props.updateNode(node);\n\n      if (visited[node]) {\n        this.highlightLine('topsort-5');\n        await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n        await this.checkPauseStatus();\n        if (this.props.stop) {\n          this.cleanUpActiveLinksAndCurrentNode(activeLinks);\n          return;\n        }\n        if (this.unMounting) return;\n        this.removeHighlightedLine('topsort-5');\n      }\n\n      if (visited[node] === null) {\n        this.highlightLine('topsort-5');\n        await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n        await this.checkPauseStatus();\n        if (this.props.stop) {\n          this.cleanUpActiveLinksAndCurrentNode(activeLinks);\n          return;\n        }\n        if (this.unMounting) return;\n        this.removeHighlightedLine('topsort-5');\n\n        this.highlightLine('topsort-6');\n        await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n        await this.checkPauseStatus();\n        if (this.props.stop) {\n          this.cleanUpActiveLinksAndCurrentNode(activeLinks);\n          return;\n        }\n        if (this.unMounting) return;\n        this.callStack.unshift(`visit(${node}, G, S, V)`);\n        this.props.updateCallStack(this.callStack);\n        if ((await this.visit(node, stack, visited, activeLinks)) === false) {\n          return null;\n        }\n        this.callStack.shift();\n        this.props.updateCallStack(this.callStack);\n\n        await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n        await this.checkPauseStatus();\n        if (this.props.stop) {\n          this.cleanUpActiveLinksAndCurrentNode(activeLinks, this.props.g);\n          return;\n        }\n        if (this.unMounting) return;\n\n        document\n          .getElementById(node)\n          .classList.remove('current-node-of-interest');\n\n        this.removeHighlightedLine('topsort-6');\n      }\n    }\n    this.highlightLine('topsort-8');\n    await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n    await this.checkPauseStatus();\n    if (this.props.stop) {\n      this.cleanUpActiveLinksAndCurrentNode(activeLinks);\n      return;\n    }\n    if (this.unMounting) return;\n    this.removeHighlightedLine('topsort-8');\n    this.props.getOrdering(stack.slice().reverse());\n\n    return stack.reverse();\n  };\n  // 2 = permenant mark, 1 = temp mark (if we encounter 1 again, we have cycle)\n  visit = async (node, stack, visited, activeLinks) => {\n    console.log(this.previousNodes);\n    this.highlightLine('topsort-visit-1');\n    await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n    await this.checkPauseStatus();\n    if (this.props.stop) {\n      this.cleanUpActiveLinksAndCurrentNode(activeLinks);\n      return;\n    }\n    if (this.unMounting) return;\n    this.removeHighlightedLine('topsort-visit-1');\n\n    this.highlightLine('topsort-visit-2');\n    await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n    await this.checkPauseStatus();\n    if (this.props.stop) {\n      this.cleanUpActiveLinksAndCurrentNode(activeLinks);\n      return;\n    }\n    if (this.unMounting) return;\n    this.removeHighlightedLine('topsort-visit-2');\n\n    if (visited[node] === 'Complete') {\n      this.highlightLine('topsort-visit-3');\n      await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n      await this.checkPauseStatus();\n      if (this.props.stop) {\n        this.cleanUpActiveLinksAndCurrentNode(activeLinks);\n        return;\n      }\n      if (this.unMounting) return;\n      this.removeHighlightedLine('topsort-visit-3');\n\n      this.props.updateNode(this.previousNodes.pop());\n      this.callStack.shift();\n      this.props.updateCallStack(this.callStack);\n      return true;\n    }\n    this.highlightLine('topsort-visit-4');\n    await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n    await this.checkPauseStatus();\n    if (this.props.stop) {\n      this.cleanUpActiveLinksAndCurrentNode(activeLinks);\n      return;\n    }\n    if (this.unMounting) return;\n    this.removeHighlightedLine('topsort-visit-4');\n    if (visited[node] === 'In Progress') {\n      this.highlightLine('topsort-visit-5');\n      await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n      await this.checkPauseStatus();\n      if (this.props.stop) {\n        this.cleanUpActiveLinksAndCurrentNode(activeLinks);\n        return;\n      }\n      if (this.unMounting) return;\n      this.removeHighlightedLine('topsort-visit-5');\n      return false;\n    }\n\n    this.activateCurrentNode(node);\n    visited[node] = 'In Progress';\n    this.highlightLine('topsort-visit-6');\n    await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n    await this.checkPauseStatus();\n    if (this.props.stop) {\n      this.cleanUpActiveLinksAndCurrentNode(activeLinks);\n      return;\n    }\n    if (this.unMounting) return;\n    this.removeHighlightedLine('topsort-visit-6');\n    this.props.updateVisited(visited);\n\n    if (this.props.g[node].length < 1) {\n      this.highlightLine('topsort-visit-7');\n      await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n      await this.checkPauseStatus();\n      if (this.props.stop) {\n        this.cleanUpActiveLinksAndCurrentNode(activeLinks);\n        return;\n      }\n      if (this.unMounting) return;\n      this.removeHighlightedLine('topsort-visit-7');\n    }\n\n    for (let neighbor of this.props.g[node]) {\n      this.highlightLine('topsort-visit-7');\n\n      let activeLink = this.activateLink(node, neighbor);\n      activeLinks = this.updateActiveLinks(activeLink, activeLinks, node);\n      this.activateNeighbor(neighbor);\n\n      await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n      await this.checkPauseStatus();\n      if (this.props.stop) {\n        this.cleanUpActiveLinksAndCurrentNode(activeLinks);\n        return;\n      }\n      if (this.unMounting) return;\n      this.removeHighlightedLine('topsort-visit-7');\n      this.props.updateNeighbor(neighbor);\n\n      this.highlightLine('topsort-visit-8');\n      await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n      await this.checkPauseStatus();\n      if (this.props.stop) {\n        this.cleanUpActiveLinksAndCurrentNode(activeLinks);\n        return;\n      }\n      if (this.unMounting) return;\n      this.removeHighlightedLine('topsort-visit-8');\n      this.props.updateNeighbor(null);\n      this.props.updateNode(neighbor);\n      this.previousNodes.push(node);\n      this.callStack.unshift(`visit(${neighbor}, G, S, V)`);\n      this.props.updateCallStack(this.callStack);\n      if ((await this.visit(neighbor, stack, visited, activeLinks)) === false) {\n        return false;\n      }\n    }\n    this.highlightLine('topsort-visit-10');\n    await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n    await this.checkPauseStatus();\n    if (this.props.stop) {\n      this.cleanUpActiveLinksAndCurrentNode(activeLinks);\n      return;\n    }\n    if (this.unMounting) return;\n    this.removeHighlightedLine('topsort-visit-10');\n    stack.push(node);\n    this.props.updateStack(stack);\n\n    this.highlightLine('topsort-visit-11');\n    await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n    await this.checkPauseStatus();\n    if (this.props.stop) {\n      this.cleanUpActiveLinksAndCurrentNode(activeLinks);\n      return;\n    }\n    if (this.unMounting) return;\n    this.removeHighlightedLine('topsort-visit-11');\n    visited[node] = 'Complete';\n    this.props.updateVisited(visited);\n\n    this.markNodeComplete(node);\n    this.removeOutgoingLinks(activeLinks, node);\n\n    this.highlightLine('topsort-visit-12');\n    await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\n    await this.checkPauseStatus();\n    if (this.props.stop) {\n      this.cleanUpActiveLinksAndCurrentNode(activeLinks);\n      return;\n    }\n    if (this.unMounting) return;\n    this.removeHighlightedLine('topsort-visit-12');\n\n    this.props.updateNode(this.previousNodes.pop());\n    this.callStack.shift();\n    this.props.updateCallStack(this.callStack);\n    return true;\n  };\n\n  activateCurrentNode(node) {\n    let currentElement = document.getElementById(node);\n    if (currentElement.classList.contains('current-neighbor-of-interest')) {\n      document\n        .getElementById(node)\n        .classList.remove('current-neighbor-of-interest');\n      document.getElementById(node).classList.add('child-to-current');\n    } else {\n      document.getElementById(node).classList.add('current-node-of-interest');\n    }\n  }\n\n  activateNeighbor(neighbor) {\n    let neighborEl = document.getElementById(neighbor);\n    if (neighborEl) neighborEl.classList.add('current-neighbor-of-interest');\n  }\n\n  activateLink(node, neighbor) {\n    let lineElement = document.getElementById(node + '-' + neighbor);\n    if (lineElement) lineElement.classList.add('link-of-interest-ts');\n    return lineElement;\n  }\n\n  updateActiveLinks(activeLink, activeLinks, node) {\n    if (activeLink) {\n      if (!activeLinks[node]) {\n        activeLinks[node] = [activeLink];\n      } else {\n        activeLinks[node].push(activeLink);\n      }\n    }\n    return activeLinks;\n  }\n\n  removeOutgoingLinks(activeLinks, node) {\n    if (activeLinks[node] && activeLinks[node].length > 0) {\n      activeLinks[node].forEach((e) => {\n        e.classList.remove('link-of-interest-ts');\n      });\n    }\n  }\n\n  markNodeComplete(node) {\n    document\n      .getElementById(node)\n      .classList.remove('current-neighbor-of-interest');\n\n    document.getElementById(node).classList.remove('current-node-of-interest');\n    document.getElementById(node).classList.add('node-complete-directed');\n  }\n\n  cleanUpActiveLinksAndCurrentNode(activeLinks) {\n    for (let val of Object.values(activeLinks)) {\n      val.forEach((link) => link.classList.remove('link-of-interest-ts'));\n    }\n\n    Object.keys(this.props.g).forEach((node) => {\n      let nodeElement = document.getElementById(node);\n      if (nodeElement) nodeElement.classList = '';\n    });\n  }\n\n  async checkPauseStatus() {\n    while (this.props.pause) {\n      await new Promise((r) => setTimeout(r, 1000));\n      continue;\n    }\n  }\n  render() {\n    return (\n      <button\n        className=\"graph-button\"\n        onClick={() => {\n          if (this.unMounting) {\n            this.unMounting = false;\n          }\n          this.props.setRunningAlg('topsort');\n          this.topSort();\n        }}\n      >\n        Topological Sort\n      </button>\n    );\n  }\n}\n\nexport default Topsort;\n","import * as d3 from 'd3';\n\nfunction createDirectedGraph() {\n  let nodes = [\n    { id: 'g', level: 2 },\n    { id: 'f', level: 2 },\n\n    { id: 'd', level: 2 },\n    { id: 'i', level: 2 },\n    { id: 'e', level: 2 },\n    { id: 'a', level: 2 },\n    { id: 'h', level: 2 },\n    { id: 'j', level: 2 },\n\n    { id: 'c', level: 2 },\n    { id: 'b', level: 2 },\n  ];\n\n  let strength = 0.001;\n  let links = [\n    { source: 'g', target: 'i', strength: 100 * strength },\n    { source: 'g', target: 'f', strength: 20 * strength },\n    { source: 'i', target: 'h', strength: 40 * strength },\n    { source: 'd', target: 'g', strength: 10 * strength },\n    { source: 'd', target: 'e', strength: 10 * strength },\n    { source: 'd', target: 'b', strength: 20 * strength },\n    { source: 'a', target: 'g', strength: 10 * strength },\n    { source: 'a', target: 'b', strength: 10 * strength },\n    { source: 'a', target: 'c', strength: 30 * strength },\n    { source: 'j', target: 'e', strength: 50 * strength },\n    { source: 'e', target: 'b', strength: 20 * strength },\n    { source: 'b', target: 'f', strength: 20 * strength },\n  ];\n  const margin = { top: 20, right: 200, bottom: 200, left: -100 },\n    width = 800 - margin.left - margin.right,\n    height = 600 - margin.top - margin.bottom;\n\n  function getNodeColor(node) {\n    return node.level === 1 ? 'red' : 'gray';\n  }\n\n  var svg = d3\n    .select('#graph-container')\n    .append('svg')\n    .attr('width', width)\n    .attr('height', height)\n    .attr('id', 'dir-graph-svg')\n    .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')')\n    .attr('class', 'graph');\n\n  // simulation setup with all forces\n  var linkForce = d3\n    .forceLink()\n    .id(function (link) {\n      return link.id;\n    })\n    .strength(function (link) {\n      return link.strength / 0.9;\n    });\n\n  var simulation = d3\n    .forceSimulation()\n    .force('link', linkForce)\n    .force('charge', d3.forceManyBody().strength(-100))\n    .force('center', d3.forceCenter(width / 2, height / 2));\n\n  svg\n    .append('defs')\n    .append('marker')\n    .attr('id', 'arrow')\n    .attr('viewBox', [-0, -5, 10, 10])\n    .attr('refX', 19)\n    .attr('refY', 0)\n    .attr('markerWidth', 11)\n    .attr('markerHeight', 11)\n    .attr('orient', 'auto-start-reverse')\n    .append('path')\n    .attr('d', 'M 0,-5 L 10 ,0 L 0,5')\n    .attr('fill', 'rgba(50, 50, 50, 0.5)')\n    .attr('stroke', 'rgba(50, 50, 50, 0.2)');\n\n  var linkElements = svg\n    .append('g')\n    .attr('class', 'links')\n    .selectAll('line')\n    .data(links)\n    .enter()\n    .append('line')\n    .attr('stroke-width', 1)\n    .attr('stroke', 'rgba(50, 50, 50, 0.2)')\n    .attr('marker-end', 'url(#arrow)')\n    .attr('id', (d) => d.source + '-' + d.target);\n\n  var linkTextElements = svg\n    .append('g')\n    .attr('class', 'link_texts')\n    .selectAll('text')\n    .data(links)\n    .enter()\n    .append('text')\n    .text(function (link) {\n      return link.cost;\n    })\n    .attr('font-size', 15)\n    .attr('dx', 0)\n    .attr('dy', 0);\n\n  var nodeElements = svg\n    .append('g')\n    .attr('class', 'node')\n    .selectAll('circle')\n    .data(nodes)\n    .enter()\n    .append('circle')\n    .attr('r', 10)\n    .attr('fill', getNodeColor)\n    .attr('id', (d) => d.id);\n\n  var nodeTextElements = svg\n    .append('g')\n    .attr('class', 'texts')\n    .selectAll('text')\n    .data(nodes)\n    .enter()\n    .append('text')\n    .text(function (node) {\n      return node.id;\n    })\n    .attr('font-size', 15)\n    .attr('dx', -25)\n    .attr('dy', 4);\n\n  simulation.nodes(nodes).on('tick', () => {\n    nodeElements\n      .attr('cx', function (node) {\n        return node.x;\n      })\n      .attr('cy', function (node) {\n        return node.y;\n      });\n    nodeTextElements\n      .attr('x', function (node) {\n        return node.x;\n      })\n      .attr('y', function (node) {\n        return node.y;\n      });\n\n    linkElements\n      .attr('x1', function (link) {\n        return link.source.x;\n      })\n      .attr('y1', function (link) {\n        return link.source.y;\n      })\n      .attr('x2', function (link) {\n        return link.target.x;\n      })\n      .attr('y2', function (link) {\n        return link.target.y;\n      });\n\n    linkTextElements\n      .attr('x', function (link) {\n        return (link.source.x + link.target.x) / 2;\n      })\n      .attr('y', function (link) {\n        return (link.source.y + link.target.y) / 2;\n      });\n  });\n\n  simulation.force('link').links(links);\n}\n\nexport default createDirectedGraph;\n","import React, { Component } from 'react';\nimport Topsort from './algorithms/graph-algorithms/Topsort';\nimport createDirectedGraph from '../graph-builders/directed-graph-builder';\nimport Sidebar from './sidebar/Sidebar';\nimport RenderListComponent from './sidebar/RenderListComponent';\nimport RenderObjectComponent from './sidebar/RenderObjectComponent';\nclass DirectedGraphAlgorithms extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pause: false,\n      stop: false,\n      speed: 1,\n      ordering: null,\n      runningAlg: '',\n      neighbor: null,\n      node: null,\n      visited: null,\n      stack: null,\n      clicked: [false, false, false, false, false],\n      callStack: [],\n    };\n    this.adjList = {\n      a: ['g', 'c', 'b'],\n      b: ['f'],\n      c: [],\n      d: ['g', 'e', 'b'],\n      e: ['b'],\n      f: [],\n      g: ['i', 'f'],\n      h: [],\n      i: ['h'],\n      j: ['e'],\n    };\n  }\n  componentDidMount() {\n    createDirectedGraph();\n    this.graph = document.getElementById('graph-container');\n  }\n\n  componentWillUnmount() {\n    let svg = document.getElementById('dir-graph-svg');\n    if (this.graph.hasChildNodes()) this.graph.removeChild(svg);\n    this.reset();\n  }\n  getOrdering = (ord) => {\n    this.setState({ ordering: ord });\n  };\n  setRunningAlg = (alg) => {\n    this.reset();\n    this.setState({ runningAlg: alg });\n  };\n  getPauseStatus = () => this.state.pause;\n  getStopStatus = () => this.state.stop;\n  getSpeedRequest = () => Number(this.state.speed) + 0.1;\n  toggleClicked = (i) => {\n    let a = this.state.clicked.slice();\n    a[i] = !a[i];\n    this.setState({\n      clicked: a,\n    });\n  };\n  updateVisited = (V) => {\n    this.setState({ visited: V });\n  };\n  updateNeighbor = (neighbor) => {\n    this.setState({ neighbor });\n  };\n\n  updateNode = (node) => {\n    this.setState({ node });\n  };\n\n  updateStack = (stack) => {\n    this.setState({ stack });\n  };\n\n  updateCallStack = (callStack) => {\n    this.setState({ callStack });\n  };\n\n  reset = () => {\n    Object.keys(this.adjList).forEach((e) => {\n      let el = document.getElementById(e);\n      if (el) el.classList = '';\n\n      for (let i = 1; i < 9; i++) {\n        let pseduoTopsortElements = document.getElementById('topsort-' + i);\n        if (pseduoTopsortElements) pseduoTopsortElements.classList = '';\n      }\n      for (let i = 1; i < 13; i++) {\n        let pseduoTopsortElements = document.getElementById(\n          'topsort-visit-' + i\n        );\n        if (pseduoTopsortElements) pseduoTopsortElements.classList = '';\n      }\n    });\n\n    this.setState({\n      ordering: null,\n      node: null,\n      neighbor: null,\n      stack: null,\n      visited: null,\n      callStack: [],\n    });\n    if (this.state.stop) {\n      this.setState({ stop: false, pause: false });\n    }\n  };\n\n  renderTopsortPseudocode() {\n    const indentation = (num) => {\n      return num * 20;\n    };\n    return (\n      <div>\n        <div id={'topsort-1'}>\n          1<span style={{ marginLeft: indentation(1) }}>ToplogicalSort(G)</span>\n        </div>\n        <div id={'topsort-2'}>\n          2<span style={{ marginLeft: indentation(2) }}>let S be a stack</span>\n        </div>\n        <div id={'topsort-3'}>\n          3\n          <span style={{ marginLeft: indentation(2) }}>\n            let V be a map with all nodes as keys and values of null\n          </span>\n        </div>\n        <div id={'topsort-4'}>\n          4<span style={{ marginLeft: indentation(2) }}>For node of G</span>\n        </div>\n        <div id={'topsort-5'}>\n          5\n          <span style={{ marginLeft: indentation(3) }}>if V[node] is null</span>\n        </div>\n        <div id={'topsort-6'}>\n          6\n          <span style={{ marginLeft: indentation(4) }}>\n            if visit(node, G, S, V) is false\n          </span>\n        </div>\n        <div id={'topsort-7'}>\n          7<span style={{ marginLeft: indentation(5) }}>return null</span>\n        </div>\n        <div id={'topsort-8'}>\n          8\n          <span style={{ marginLeft: indentation(2) }}>return S.reverse()</span>\n        </div>\n        <br></br>\n        <div id={'topsort-visit-1'}>\n          1\n          <span style={{ marginLeft: indentation(1) }}>\n            visit(node, G, S, V)\n          </span>\n        </div>\n        <div id={'topsort-visit-2'}>\n          2\n          <span style={{ marginLeft: indentation(2) }}>\n            if V[node] == 'Complete'\n          </span>\n        </div>\n        <div id={'topsort-visit-3'}>\n          3<span style={{ marginLeft: indentation(3) }}>return true</span>\n        </div>\n        <div id={'topsort-visit-4'}>\n          4\n          <span style={{ marginLeft: indentation(2) }}>\n            if V[node] == 'In Progress'\n          </span>\n        </div>\n        <div id={'topsort-visit-5'}>\n          5<span style={{ marginLeft: indentation(3) }}>return false</span>\n        </div>\n        <div id={'topsort-visit-6'}>\n          6\n          <span style={{ marginLeft: indentation(2) }}>\n            V[node] = 'In Progress'\n          </span>\n        </div>\n        <div id={'topsort-visit-7'}>\n          7\n          <span style={{ marginLeft: indentation(2) }}>\n            for neighbor of node\n          </span>\n        </div>\n        <div id={'topsort-visit-8'}>\n          8\n          <span style={{ marginLeft: indentation(3) }}>\n            if visit(node, G, S, V) is false\n          </span>\n        </div>\n        <div id={'topsort-visit-9'}>\n          9<span style={{ marginLeft: indentation(4) }}>return false</span>\n        </div>\n        <div id={'topsort-visit-10'}>\n          10\n          <span style={{ marginLeft: indentation(2) }}>S.push(node)</span>\n        </div>\n        <div id={'topsort-visit-11'}>\n          11\n          <span style={{ marginLeft: indentation(2) }}>\n            V[node] = 'Complete'\n          </span>\n        </div>\n        <div id={'topsort-visit-12'}>\n          12\n          <span style={{ marginLeft: indentation(2) }}>return true</span>\n        </div>\n      </div>\n    );\n  }\n\n  renderTopsortTableData() {\n    return this.state.ordering.map((node) => {\n      return (\n        <tr key={node}>\n          <td>{node}</td>\n        </tr>\n      );\n    });\n  }\n\n  renderTopsortHeading() {\n    return (\n      <tr>\n        <th>Potential Ordering</th>\n      </tr>\n    );\n  }\n\n  render() {\n    return (\n      <div className={'row'}>\n        <div className={'col-4'} id={'graph-container'}>\n          <Topsort\n            g={this.adjList}\n            pause={this.state.pause}\n            stop={this.state.stop}\n            speed={this.state.speed}\n            runningAlg={this.state.runningAlg}\n            setRunningAlg={this.setRunningAlg}\n            getOrdering={this.getOrdering}\n            updateVisited={this.updateVisited}\n            updateNeighbor={this.updateNeighbor}\n            updateNode={this.updateNode}\n            updateStack={this.updateStack}\n            updateCallStack={this.updateCallStack}\n          />\n          <div className={'divider'}></div>\n          <button\n            className=\"graph-button\"\n            onClick={() => {\n              this.setState({ pause: false, stop: true });\n              this.reset();\n            }}\n          >\n            Reset\n          </button>\n          <div className={'divider'}></div>\n          <button\n            className=\"graph-button\"\n            onClick={() => {\n              this.setState({ pause: !this.state.pause });\n            }}\n          >\n            {this.state.pause ? 'UnPause' : 'Pause'}\n          </button>\n\n          <form onSubmit={(event) => event.preventDefault()}>\n            <label>\n              Speed:\n              <input\n                style={{ width: '50px' }}\n                type=\"number\"\n                value={this.state.speed}\n                onChange={(event) => {\n                  event.preventDefault();\n                  this.setState({\n                    speed: event.target.value,\n                  });\n                }}\n              />\n            </label>\n          </form>\n        </div>\n        {/* <div className={'col-6'} id={'output-tables'}> */}\n        <div className={'col-4'}>{this.renderTopsortPseudocode()}</div>\n        <div className={'col-4'}>\n          <Sidebar showButton={true}>\n            <li onClick={() => this.toggleClicked(0)}>\n              {this.state.ordering ? (\n                <RenderListComponent\n                  list={this.state.ordering}\n                  listName={'Return Value'}\n                  clicked={this.state.clicked[0]}\n                />\n              ) : (\n                ''\n              )}\n            </li>\n            {this.state.node ? <li> node = {this.state.node} </li> : ''}\n            {this.state.neighbor ? (\n              <li> neighbor = {this.state.neighbor} </li>\n            ) : (\n              ''\n            )}\n\n            <li onClick={() => this.toggleClicked(1)}>\n              {this.state.stack ? (\n                <RenderListComponent\n                  list={this.state.stack}\n                  listName={'S'}\n                  clicked={this.state.clicked[1]}\n                />\n              ) : (\n                ''\n              )}\n            </li>\n            <li onClick={() => this.toggleClicked(2)}>\n              {this.state.visited ? (\n                <RenderObjectComponent\n                  obj={this.state.visited}\n                  objName={'V'}\n                  clicked={this.state.clicked[2]}\n                />\n              ) : (\n                ''\n              )}\n            </li>\n            <li onClick={() => this.toggleClicked(3)}>\n              {this.adjList ? (\n                <RenderObjectComponent\n                  obj={this.adjList}\n                  objName={'G'}\n                  clicked={this.state.clicked[3]}\n                />\n              ) : (\n                ''\n              )}\n            </li>\n\n            <li onClick={() => this.toggleClicked(4)}>\n              {this.state.callStack.length > 0 ? (\n                <RenderListComponent\n                  list={this.state.callStack}\n                  listName={'Call Stack'}\n                  clicked={this.state.clicked[4]}\n                />\n              ) : (\n                ''\n              )}\n            </li>\n\n            {/* {this.state.currentIndex ? (\n              <li> currentIndex = {this.state.currentIndex} </li>\n            ) : (\n              ''\n            )}\n\n            {this.state.parentIndex ? (\n              <li> parentIndex = {this.state.parentIndex} </li>\n            ) : (\n              ''\n            )}\n            {this.state.childIndex ? (\n              <li> childIndex = {this.state.childIndex} </li>\n            ) : (\n              ''\n            )}\n\n            {this.state.leftChild ? (\n              <li> leftChild = {this.state.leftChild} </li>\n            ) : (\n              ''\n            )}\n            {this.state.rightChild ? (\n              <li> rightChild = {this.state.rightChild} </li>\n            ) : (\n              ''\n            )} */}\n\n            {/* <li onClick={() => this.toggleClicked(1)}>\n              <RenderListComponent\n                list={this.state.inputList}\n                listName={'inputList'}\n                clicked={this.state.clicked[1]}\n              />\n            </li> */}\n          </Sidebar>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DirectedGraphAlgorithms;\n\n//  <table id={'topsort-table'} className={'float-right'}>\n//           <tbody>\n//             {this.renderTopsortHeading()}\n//             {this.renderTopsortTableData()}\n//           </tbody>\n//         </table>\n","import * as d3 from 'd3';\n\n\nasync function createScatterplot(data) {\n  //modified from http://www.d3-graph-gallery.com, by Yan Holtz\n  // set the dimensions and margins of the graph\n  let margin = {top: 10, right: 30, bottom: 30, left: 60},\n  width = 600 - margin.left - margin.right,\n  height = 500 - margin.top - margin.bottom;\n\n  // append the svg object to the body of the page\n  let svg = d3.select(\"#graph-container\")\n    .append(\"svg\")\n    .attr(\"id\", \"scatter-svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n      .append(\"g\")\n      .attr(\"id\", \"scatter-no-margin\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n\n  // Add X axis - animation start: 0 opacity\n  let x = d3.scaleLinear()\n    .domain([0, 0])\n    .range([0, width]);\n  \n  svg.append(\"g\")\n    .attr(\"class\", \"x-axis\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(d3.axisBottom(x))\n    .attr(\"opacity\", \"0\");\n\n  // Add Y axis\n  let y = d3.scaleLinear()\n    .domain([0, 7])\n    .range([height, 0]);\n  \n  svg.append(\"g\")\n    .call(d3.axisLeft(y));\n\n  // Add points\n  svg.append('g')\n    .selectAll(\"circle\")\n    .data(data)\n    .enter()\n    .append(\"circle\")\n      .attr(\"cx\", d => x(d.x))\n      .attr(\"cy\", d => y(d.y))\n      .attr(\"r\", 3)\n      .attr(\"stroke\", \"black\")\n      .attr(\"stroke-width\", 3)\n      //add an id to each point so we can grab it later and modify it\n      .attr(\"id\", d => `x:${parseFloat(d.x).toFixed(1)}-y:${parseFloat(d.y).toFixed(1)}`) //id: x:0.0-y:0.0\n      //initialize all clusters to black\n      .classed(\"cluster-unassigned\",true); \n\n  // Add new X axis - animation end: full opacity, transitioning to correct domain\n  x.domain([4, 8])\n  svg.select(\".x-axis\")\n    .transition()\n    .duration(2000)\n    .attr(\"opacity\", \"1\")\n    .call(d3.axisBottom(x));\n\n  //Animate each of the data points to their correct position using different delay\n  svg.selectAll(\"circle\")\n    .transition()\n    .delay((d,id) => id*3)\n    .duration(2000)\n    .attr(\"cx\", d => x(d.x))\n    .attr(\"cy\", d => y(d.y))\n\n\n}\n\n\nexport default createScatterplot;\n","//import { cloneElement } from 'react';\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\n\nclass KMeans extends Component {\n  constructor(props) {\n    super(props);\n    this.unMounting = false;\n  }\n\n  componentWillUnmount() {\n    this.unMounting = true;\n  }\n\n  componentDidUpdate(prevProps) {}\n\n  //Perform K-Means clustering on points, plot, and animate\n  kmeans = async () => {\n    const k = this.props.k;\n    //Randomly initialize cluster centroids\n    const randomPoints = this.getRandomElements(this.props.points, k);\n    //create a shallow copy of centroids (to make sure the assigned points don't change)\n    let centroids = [...randomPoints];\n    \n    //Set the classes of the initialized centroid elements\n    \n    let centGroup = d3.select(\"#scatter-no-margin\")\n        .append(\"g\")\n        .attr(\"id\", \"centroid-group\")\n        .classed(\"centroid\", true);\n  \n    // centroids.forEach((centroid, index) => {\n    d3.select(\"#centroid-group\")\n      .selectAll(\"circle\")  \n      .data(centroids)\n      .enter()\n      .append(\"circle\")\n      .attr(\"cx\", (centroid) => this.scaleX(centroid.x))\n      .attr(\"cy\", (centroid) => this.scaleY(centroid.y))\n      .attr(\"r\", 10)\n      .attr(\"id\", (centroid,i) => `centroid${i}`)\n      .attr(\"class\", (centroid,i) => `cluster${i} centroid`);\n    \n\n    await new Promise((r) => setTimeout(r, 2000 / this.props.speed));\n    await this.checkPauseStatus();\n    if (this.props.stop) return;\n    if (this.unMounting) return;\n\n\n    // Main K-Means loop\n    let hasConverged = false;\n    let iter = 0;\n    do {\n      console.log('Iteration ', iter);\n\n      this.assignToClusters(this.props.points, centroids);\n\n      await new Promise((r) => setTimeout(r, 2000 / this.props.speed));\n      await this.checkPauseStatus();\n      if (this.props.stop) return;\n      if (this.unMounting) return;\n\n      console.log('Clusters have been assigned.');\n\n      let prevCentroids = [...centroids];\n      this.updateCentroids(this.props.points, k, centroids);\n\n      await new Promise((r) => setTimeout(r, 2000 / this.props.speed));\n      await this.checkPauseStatus();\n      if (this.props.stop) return;\n      if (this.unMounting) return;\n      \n      console.log('Centroids have been updated:');\n      console.log(JSON.stringify(centroids, null, 2));\n      \n      hasConverged = prevCentroids.reduce(\n        (bool, currentCentroid, i) => (currentCentroid.x === centroids[i].x) && (currentCentroid.y === centroids[i].y),\n        true\n      );\n      \n      iter++;\n    } while (!hasConverged && iter < 100);\n    console.log(\"Converged.\");\n\n  };\n\n  //Compute distance of each point from each centroid,\n  // and assign points to closest centroid\n  assignToClusters(points, centroids) {\n    points.forEach((point) => {\n      let distances = [];\n      centroids.forEach((centroid) => {\n        distances.push(\n          //calculate the Euclidean distance from each point to each centroid\n          Math.sqrt(\n            Math.pow(point.x - centroid.x, 2) +\n              Math.pow(point.y - centroid.y, 2)\n          )\n        );\n      });\n      //Assign the point to its closest centroid using the minimum of all distances\n      point.closestCentroid = distances.indexOf(Math.min(...distances));\n\n      //Color the point on the D3.js scatterplot\n      this.colorPoint(point);\n    });\n  }\n\n  //Calculate new cluster centroids, which will be the mean of all points in that cluster\n  updateCentroids(points, k, centroids) {\n    for (let i = 0; i < k; i++) {\n      //clusterArray = [{x: \"1.2\", y: \"2\", closestCentroid: \"i\"}, ...]\n      const clusterArray = points.filter(\n        (point) => point.closestCentroid === i\n      );\n\n      //calculate the mean in x and y directions\n      let mean = clusterArray.reduce(\n        (sum, currentPoint) => {\n          sum.x = Number(sum.x) + Number(currentPoint.x);\n          sum.y = Number(sum.y) + Number(currentPoint.y);\n          // console.log('current sum:', sum)\n          return sum;\n        },\n        { x: Number(0), y: Number(0) }\n      );\n      mean.x = mean.x / clusterArray.length;\n      mean.y = mean.y / clusterArray.length;\n\n      //update the centroid at index i\n      centroids[i] = { x: mean.x, y: mean.y };\n\n      this.moveIthCentroid(i, centroids[i]);\n    }\n  }\n\n  // ------------------\n  // Helper functions\n  // -------------------\n  getRandomElements(arr, n) {\n    let result = new Array(n),\n      len = arr.length,\n      taken = new Array(len);\n    if (n > len)\n      throw new RangeError('getRandom: more elements taken than available');\n    while (n--) {\n      let x = Math.floor(Math.random() * len);\n      result[n] = arr[x in taken ? taken[x] : x];\n      taken[x] = --len in taken ? taken[len] : len;\n    }\n    return result;\n  }\n\n  colorPoint(point) {\n    let pointElement = document.getElementById(\n      `x:${parseFloat(point.x).toFixed(1)}-y:${parseFloat(point.y).toFixed(1)}`\n    );\n    let pointClasses = pointElement.classList;\n    if (pointElement) {\n      //if it's the first iteration, remove 'unassigned' style\n      if (pointClasses.contains('cluster-unassigned')) {\n        pointClasses.remove('cluster-unassigned');\n      }\n      //otherwise, remove the current cluster styles\n      else {\n        pointClasses.remove(pointClasses[0]);\n      }\n      //finally, add the color associated with the closest centroid\n      pointClasses.add(`cluster${point.closestCentroid}`);\n    }\n  }\n\n  moveIthCentroid(i, centroid) {\n     d3.select(`#centroid${i}`)\n      .attr('cx', this.scaleX(centroid.x))\n      .attr('cy', this.scaleY(centroid.y));\n  }\n\n  //Scale point coordinates to fit on the scatter plot\n  scaleX = d3.scaleLinear()\n      .domain([4, 8])\n      .range([0, 510]);\n      \n  scaleY = d3.scaleLinear()\n      .domain([0, 7])\n      .range([460, 0]);\n  \n\n  async checkPauseStatus() {\n    while (this.props.pause) {\n      await new Promise((r) => setTimeout(r, 1000));\n      continue;\n    }\n  }\n\n  render() {\n    return (\n      <button\n        onClick={() => {\n          if (this.unMounting) {\n            this.unMounting = false;\n          }\n          this.kmeans();\n        }}\n      >\n        K-Means Clustering\n      </button>\n    );\n  }\n} //End of KMeans Component\n\nexport default KMeans;\n","import React, { Component } from 'react';\nimport createScatterplot from '../graph-builders/scatterplot-builder';\nimport * as d3 from 'd3';\nimport KMeans from './algorithms/clustering-algorithms/KMeans';\nimport fs from 'fs';\n\nclass ScatterPlotAlgorithms extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pause: false,\n      stop: false,\n      speed: 2,\n      k: 5,\n      points: [],\n    };\n  }\n\n  async componentDidMount() {\n    //Load in the csv data points (2D) as an object\n    let x = await d3.csv('https://raw.githubusercontent.com/luaywadie/AmAlgorithms/master/visualizations-app/src/data/cluster_data.csv');\n    this.setState({points: x});\n      //imported from scatterplot-builder\n    createScatterplot(this.state.points);\n\n    this.scatter = document.getElementById('graph-container');\n  }\n\n  componentWillUnmount() {\n    let svg = document.getElementById('scatter-svg');\n    if (this.scatter.hasChildNodes()) this.scatter.removeChild(svg);\n  }\n\n  setPoints = (ps) => this.setState({points: ps});\n\n  getPauseStatus = () => this.state.pause;\n  getStopStatus = () => this.state.stop;\n  getSpeedRequest = () => Number(this.state.speed) + 0.1;\n\n  reset = () => {\n\n    //Remove all centroids from the DOM\n    const centroidGroup = document.getElementById(\"centroid-group\");\n    centroidGroup.parentNode.removeChild(centroidGroup);\n\n    //Clear the class list of each circle on scatterplot (reset) and restore to 'unassigned' state\n    let circleElements = document.getElementsByTagName('circle');\n    for (let i = 0; i < circleElements.length; i++) {\n        //Remove the classes and reset the point to 'unassigned'\n        circleElements[i].setAttribute('class', '');\n        circleElements[i].classList.add('cluster-unassigned');\n      }\n    //Set state\n    if(this.state.stop) {\n      this.setState({ stop: false, pause: false });\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <div className={'row'}>\n          <div className={'col-6'} id={'graph-container'}>\n            <KMeans\n              points={this.state.points}\n              pause={this.state.pause}\n              stop={this.state.stop}\n              speed={this.state.speed}\n              k={this.state.k}\n              setPoints={this.setPoints}\n            />\n            <div className={'divider'}></div>\n            <button\n              className=\"graph-button\"\n              onClick={ async () => {\n                // this.setState( (state, props) =>\n                //   ({...this.state, pause: false, stop: true }) );\n                await this.setState({pause: false, stop:true});\n                this.reset();\n              }\n              }\n            >\n            Reset\n            </button>\n            <div className={'divider'}></div>\n            <button\n            onClick={() => {\n              this.setState({ pause: !this.state.pause });\n            }}\n          >\n            {this.state.pause ? 'UnPause' : 'Pause'}\n          </button>\n            <form onSubmit={(event) => event.preventDefault()}>\n            <label>\n              Number of Clusters (K):\n              <input\n                style={{ width: '50px' }}\n                type=\"number\"\n                value={this.state.k}\n                onChange={(event) =>\n                  this.setState({\n                    k: event.target.value,\n                  })\n                }\n              />\n            </label>\n          </form>\n          <form onSubmit={(event) => event.preventDefault()}>\n          <label>\n            Speed:\n            <input\n              style={{ width: '50px' }}\n              type=\"number\"\n              value={this.state.speed}\n              onChange={(event) =>\n                this.setState({\n                  speed: event.target.value,\n                })\n              }\n            />\n          </label>\n        </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ScatterPlotAlgorithms;\n","import * as d3 from 'd3';\n// const { bfs } = require('../helpers/data-structures/bfs_helper.js');\n\nconst margin = { top: 40, right: 90, bottom: 30, left: 0 };\nlet width = 900 - margin.left - margin.right;\nlet height = 900 - margin.top - margin.bottom;\nexport function buildTreeDataFromAdjList(adjList) {\n  let treeData = {};\n  let root = true;\n  for (let [node, children] of Object.entries(adjList)) {\n    if (root === true) {\n      treeData[node] = {\n        name: node,\n        value: 10,\n        type: 'black',\n        level: '',\n        children: [],\n      };\n      root = false;\n    }\n    for (let child of children) {\n      if (!treeData[child]) {\n        treeData[child] = {\n          name: child,\n          value: 10,\n          type: 'black',\n          level: '',\n          children: [],\n        };\n      }\n      if (!treeData[node]) {\n        treeData[node] = {\n          name: node,\n          value: 10,\n          type: 'black',\n          level: '',\n          children: [],\n        };\n      }\n      treeData[node].children.push(treeData[child]);\n    }\n  }\n\n  return treeData;\n}\nfunction getMin(adjList) {\n  let min = Infinity;\n  Object.keys(adjList).forEach((key) => {\n    if (Number(key) < min) {\n      min = Number(key);\n    }\n  });\n  return min;\n}\nexport function createDynamicTree(adjList) {\n  let min = getMin(adjList);\n  let treeData = buildTreeDataFromAdjList(adjList)[min];\n  let myScale = 1.5;\n\n  let treemap = d3.tree().size([height, width]);\n\n  let nodes = d3.hierarchy(treeData, (d) => d.children);\n\n  nodes = treemap(nodes);\n\n  const svg = d3\n      .select('#graph-container')\n      .append('svg')\n      .attr('id', 'heap-tree-svg')\n      .attr('width', width + margin.left + margin.right)\n      .attr('height', height + margin.top + margin.bottom)\n      .attr('class', 'graph'),\n    g = svg\n      .append('g')\n      .attr('class', 'circle-target-g')\n      .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n  const node = g\n    .selectAll('.node')\n    .data(nodes.descendants())\n    .enter()\n    .append('g')\n    .attr(\n      'class',\n      (d) =>\n        'node ' +\n        (d.children ? ' node--internal ' : ' node--leaf ') +\n        ' g-node-' +\n        d.data.name\n    )\n    .attr(\n      'transform',\n      (d) => 'translate(' + d.x / myScale + ',' + d.y / myScale + ')'\n    );\n  node\n    .append('circle')\n    .attr('r', (d) => 10)\n    .attr('class', (d) => 'node-' + d.data.name)\n    .attr('id', (d) => d.data.name);\n\n  // adds the text to the node\n  node\n    .append('text')\n    .attr('class', (d) => 'node-' + d.data.name + '-text')\n    .attr('dy', '.35em')\n    .attr('x', (d) => (d.children ? (d.data.value + 5) * -1 : d.data.value + 5))\n    .attr('y', (d) =>\n      d.children && d.depth !== 0 ? -(d.data.value + 5) : d.data.value\n    )\n    .style('text-anchor', (d) => (d.children ? 'end' : 'start'))\n    .text((d) => d.data.name);\n}\nexport function clearTree() {\n  let dataStructure = document.getElementById('graph-container');\n  let svg = document.getElementById('heap-tree-svg');\n  if (dataStructure && svg && dataStructure.hasChildNodes())\n    dataStructure.removeChild(svg);\n}\nexport function removeRootOfDynamicTree(parent, adjList) {\n  clearTree();\n\n  let treeData = buildTreeDataFromAdjList(adjList)[parent];\n  let myScale = 1.5;\n\n  // declares a tree layout and assigns the size\n  let treemap = d3.tree().size([height, width]);\n  let nodes = d3.hierarchy(treeData, (d) => d.children);\n  nodes = treemap(nodes);\n\n  const svg = d3\n      .select('#graph-container')\n      .append('svg')\n      .attr('id', 'heap-tree-svg')\n      .attr('width', width + margin.left + margin.right)\n      .attr('height', height + margin.top + margin.bottom)\n      .attr('class', 'graph'),\n    g = svg\n      .append('g')\n      .attr('class', 'circle-target-g')\n      .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n  g.selectAll('.link')\n    .data(nodes.descendants().slice(1))\n    .enter()\n    .append('path')\n    .attr(\n      'class',\n      (d) => `heap-link ${d.data.name}link heap-link-${d.data.name}`\n    )\n    .attr('id', (d) => d.data.name + 'link') // d.parent.data.name + '-' + d.data.name\n    .style('stroke', '#ccc')\n    .style('stroke-width', 2)\n    .attr('d', (d) => {\n      return (\n        'M' +\n        d.x / myScale +\n        ',' +\n        d.y / myScale +\n        'C' +\n        (d.x + d.parent.x) / myScale / 2 +\n        ',' +\n        d.y / myScale +\n        ' ' +\n        (d.x + d.parent.x) / myScale / 2 +\n        ',' +\n        d.parent.y / myScale +\n        ' ' +\n        d.parent.x / myScale +\n        ',' +\n        d.parent.y / myScale\n      );\n    });\n  const node = g\n    .selectAll('.node')\n    .data(nodes.descendants())\n    .enter()\n    .append('g')\n    .attr(\n      'class',\n      (d) =>\n        'node ' +\n        (d.children ? ' node--internal ' : ' node--leaf ') +\n        ' g-node-' +\n        d.data.name\n    )\n    .attr(\n      'transform',\n      (d) => 'translate(' + d.x / myScale + ',' + d.y / myScale + ')'\n    );\n  node\n    .append('circle')\n    .attr('r', (d) => 10)\n    .attr('class', (d) => 'node-' + d.data.name)\n    .attr('id', (d) => d.data.name);\n  node\n    .append('text')\n    .attr('class', (d) => 'node-' + d.data.name + '-text')\n    .attr('dy', '.35em')\n    .attr('x', (d) => (d.children ? (d.data.value + 5) * -1 : d.data.value + 5))\n    .attr('y', (d) =>\n      d.children && d.depth !== 0 ? -(d.data.value + 5) : d.data.value\n    )\n    .style('text-anchor', (d) => (d.children ? 'end' : 'start'))\n    .text((d) => d.data.name);\n  return;\n}\n\nexport function insertIntoDynamicTree(parent, adjList) {\n  clearTree();\n\n  let treeData = buildTreeDataFromAdjList(adjList)[parent];\n  let myScale = 1.5;\n\n  // declares a tree layout and assigns the size\n  let treemap = d3.tree().size([height, width]);\n  let nodes = d3.hierarchy(treeData, (d) => d.children);\n  nodes = treemap(nodes);\n\n  const svg = d3\n      .select('#graph-container')\n      .append('svg')\n      .attr('id', 'heap-tree-svg')\n      .attr('width', width + margin.left + margin.right)\n      .attr('height', height + margin.top + margin.bottom)\n      .attr('class', 'graph'),\n    g = svg\n      .append('g')\n      .attr('class', 'circle-target-g')\n      .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n  g.selectAll('.link')\n    .data(nodes.descendants().slice(1))\n    .enter()\n    .append('path')\n    .attr(\n      'class',\n      (d) => `heap-link ${d.data.name}link heap-link-${d.data.name}`\n    )\n    .attr('id', (d) => d.data.name + 'link') // d.parent.data.name + '-' + d.data.name\n    .style('stroke', '#ccc')\n    .style('stroke-width', 2)\n    .attr('d', (d) => {\n      return (\n        'M' +\n        d.x / myScale +\n        ',' +\n        d.y / myScale +\n        'C' +\n        (d.x + d.parent.x) / myScale / 2 +\n        ',' +\n        d.y / myScale +\n        ' ' +\n        (d.x + d.parent.x) / myScale / 2 +\n        ',' +\n        d.parent.y / myScale +\n        ' ' +\n        d.parent.x / myScale +\n        ',' +\n        d.parent.y / myScale\n      );\n    });\n  const node = g\n    .selectAll('.node')\n    .data(nodes.descendants())\n    .enter()\n    .append('g')\n    .attr(\n      'class',\n      (d) =>\n        'node ' +\n        (d.children ? ' node--internal ' : ' node--leaf ') +\n        ' g-node-' +\n        d.data.name\n    )\n    .attr(\n      'transform',\n      (d) => 'translate(' + d.x / myScale + ',' + d.y / myScale + ')'\n    );\n  node\n    .append('circle')\n    .attr('r', (d) => 10)\n    .attr('class', (d) => 'node-' + d.data.name)\n    .attr('id', (d) => d.data.name);\n  node\n    .append('text')\n    .attr('class', (d) => 'node-' + d.data.name + '-text')\n    .attr('dy', '.35em')\n    .attr('x', (d) => (d.children ? (d.data.value + 5) * -1 : d.data.value + 5))\n    .attr('y', (d) =>\n      d.children && d.depth !== 0 ? -(d.data.value + 5) : d.data.value\n    )\n    .style('text-anchor', (d) => (d.children ? 'end' : 'start'))\n    .text((d) => d.data.name);\n}\n\nexport function swap(p, c) {\n  let parentText = d3.select('.node-' + p + '-text');\n  let childText = d3.select('.node-' + c + '-text');\n  parentText.attr('class', 'node-' + c + '-text');\n  childText.attr('class', 'node-' + p + '-text');\n  parentText.text(c);\n  childText.text(p);\n\n  let parentCircle = d3.select('.node-' + p);\n  let childCircle = d3.select('.node-' + c);\n  parentCircle.attr('class', 'node-' + c);\n  childCircle.attr('class', 'node-' + p);\n  parentCircle.attr('id', c);\n  childCircle.attr('id', p);\n\n  let parentG = d3.select('.g-node-' + p);\n  let childG = d3.select('.g-node-' + c);\n  parentG.attr('class', 'node  node--internal  g-node-' + c);\n  childG.attr('class', 'node  node--internal  g-node-' + p);\n\n  let childLink = d3.select('.heap-link-' + c);\n  childLink.attr('class', `heap-link ${p}link heap-link- + ${p}`);\n  childLink.attr('id', p + 'link');\n\n  let parentLink = d3.select('.heap-link-' + p);\n  parentLink.attr('class', `heap-link ${c}link heap-link-${c}`);\n  parentLink.attr('id', c + 'link');\n}\n\n// Animations\n\n// let bfsA = bfs(adjList, min);\n// let totalDelay = 0;\n// bfsA.forEach((key, i) => {\n//   let prevDelay = totalDelay;\n//   d3.select('.heap-link-' + key)\n//     .transition()\n//     .duration(100)\n//     .delay(() => {\n//       totalDelay += 1000;\n//       return totalDelay;\n//     })\n//     .attr('stroke', '#ccc');\n//   d3.select('.node-' + key)\n//     .transition()\n//     .duration(100)\n//     .delay(() => prevDelay + 1000)\n//     .attr('r', () => 10);\n\n//   d3.select('.g-node-' + key)\n//     .append('text')\n//     .transition()\n//     .duration(100)\n//     .delay(() => prevDelay + 1000)\n//     .attr('dy', '.35em')\n//     .attr('x', (d) =>\n//       d.children ? (d.data.value + 5) * -1 : d.data.value + 5\n//     )\n//     .attr('y', (d) =>\n//       d.children && d.depth !== 0 ? -(d.data.value + 5) : d.data.value\n//     )\n//     .style('text-anchor', (d) => (d.children ? 'end' : 'start'))\n//     .text((d) => d.data.name);\n// });\n","import React, { Component } from 'react';\nimport {\n  insertIntoDynamicTree,\n  swap,\n  createDynamicTree,\n  removeRootOfDynamicTree,\n  clearTree,\n} from '../../graph-builders/dynamic-tree-builder';\n\nimport Sidebar from '../sidebar/Sidebar';\n\nimport RenderListComponent from '../sidebar/RenderListComponent';\n\nclass Heap extends Component {\n  constructor(props) {\n    super(props);\n    this.sample = [9, 11, 24, 13, 35, 25, 61, 17, 48, 91];\n    this.h = [0];\n    this.state = {\n      inputList: [],\n      heapA: [0],\n      inputNum: '',\n      executing: false,\n      pause: false,\n      size: 0,\n      parentIndex: null,\n      currentIndex: null,\n      clicked: [false, false, false],\n      newElement: null,\n      removedRoot: null,\n      inserting: false,\n      removingRoot: false,\n      childIndex: null,\n      leftChild: null,\n      rightChild: null,\n    };\n    this.unMounting = false;\n    this.adjList = {};\n  }\n\n  componentDidMount = () => {\n    if (this.state.inputList.length === 0) {\n      this.buildSampleHeap();\n    }\n    this.dataStructure = document.getElementById('graph-container');\n  };\n\n  componentWillUnmount() {\n    this.unMounting = true;\n    let svg = document.getElementById('heap-tree-svg');\n    if (this.dataStructure.hasChildNodes() && svg)\n      this.dataStructure.removeChild(svg);\n  }\n\n  async buildSampleHeap() {\n    clearTree();\n    this.h = this.sample;\n    await this.setState({\n      inputList: this.sample,\n      heapA: this.h,\n    });\n    this.setState({ size: this.sample[0] });\n    this.convertHeapArrayToAdjList(this.h);\n    insertIntoDynamicTree(this.h[1], this.adjList);\n  }\n\n  async clearHeap() {\n    await this.setState({ inputList: [], heapA: [0] });\n    this.h = [0];\n    this.setState({ size: 0 });\n    this.adjList = {};\n    clearTree();\n  }\n\n  handleInsertButton = async () => {\n    let newNode = this.state.inputNum;\n    await this.setState({\n      inputList: [...this.state.inputList, Number(this.state.inputNum)],\n      inputNum: '',\n      executing: true,\n    });\n    await this.insert(newNode);\n    if (this.state.inputList.length === 1) {\n      this.convertHeapArrayToAdjList(this.h);\n      createDynamicTree(this.adjList);\n    }\n    this.setState({ executing: false });\n  };\n\n  async insert(e) {\n    this.setState({ newElement: e });\n    this.highlightLine('Heap-insert-1');\n    await new Promise((r) => setTimeout(r, 1000));\n    await this.checkPauseStatus();\n    if (this.unMounting) return;\n    this.removeHighlightedLine('Heap-insert-1');\n\n    this.highlightLine('Heap-insert-2');\n    await new Promise((r) => setTimeout(r, 1000));\n    await this.checkPauseStatus();\n    if (this.unMounting) return;\n    this.removeHighlightedLine('Heap-insert-2');\n\n    this.setState({ size: this.state.size + 1 });\n    this.h[0] = this.state.size;\n\n    this.highlightLine('Heap-insert-3');\n    await new Promise((r) => setTimeout(r, 1000));\n    await this.checkPauseStatus();\n    if (this.unMounting) return;\n    this.removeHighlightedLine('Heap-insert-3');\n    this.h[this.state.size] = e;\n    await this.setState({ heapA: this.h });\n\n    this.convertHeapArrayToAdjList(this.h);\n    if (this.state.size !== 1) {\n      insertIntoDynamicTree(this.h[1], this.adjList);\n    }\n\n    this.highlightLine('Heap-insert-4');\n    await new Promise((r) => setTimeout(r, 1000));\n    await this.checkPauseStatus();\n    if (this.unMounting) return;\n    await this.fixUp();\n    this.removeHighlightedLine('Heap-insert-4');\n    this.setState({ newElement: null });\n  }\n  async fixUp() {\n    this.highlightLine('Heap-fixup-1');\n    await new Promise((r) => setTimeout(r, 1000));\n    await this.checkPauseStatus();\n    if (this.unMounting) return;\n    this.removeHighlightedLine('Heap-fixup-1');\n\n    this.highlightLine('Heap-fixup-2');\n    await new Promise((r) => setTimeout(r, 1000));\n    await this.checkPauseStatus();\n    if (this.unMounting) return;\n    this.removeHighlightedLine('Heap-fixup-2');\n    let pos = this.state.size;\n    this.setState({ currentIndex: pos });\n    if (pos <= 1) {\n      this.highlightLine('Heap-fixup-3');\n      await new Promise((r) => setTimeout(r, 1000));\n      await this.checkPauseStatus();\n      if (this.unMounting) return;\n      this.removeHighlightedLine('Heap-fixup-3');\n    }\n    while (pos > 1) {\n      // Check when inserting into an empty boy\n      this.highlightLine('Heap-fixup-3');\n      await new Promise((r) => setTimeout(r, 1000));\n      await this.checkPauseStatus();\n      if (this.unMounting) return;\n      this.removeHighlightedLine('Heap-fixup-3');\n\n      let parent = Math.floor(pos / 2);\n      this.highlightLine('Heap-fixup-4');\n      await new Promise((r) => setTimeout(r, 1000));\n      await this.checkPauseStatus();\n      if (this.unMounting) return;\n      this.removeHighlightedLine('Heap-fixup-4');\n      this.setState({ parentIndex: parent });\n\n      this.highlightLine('Heap-fixup-5');\n      this.activateChildAndParent(this.h[pos], this.h[parent]);\n      await new Promise((r) => setTimeout(r, 1000));\n      await this.checkPauseStatus();\n      if (this.unMounting) return;\n\n      this.removeHighlightedLine('Heap-fixup-5');\n      this.removeActiveChildParent(this.h[pos], this.h[parent]);\n\n      if (this.h[parent] > this.h[pos]) {\n        this.activateLink(this.h[pos]);\n\n        this.highlightLine('Heap-fixup-6');\n        await new Promise((r) => setTimeout(r, 1000));\n        await this.checkPauseStatus();\n        if (this.unMounting) return;\n        this.removeHighlightedLine('Heap-fixup-6');\n\n        swap(this.h[parent], this.h[pos]);\n        let temp = this.h[parent];\n        this.h[parent] = this.h[pos];\n        this.h[pos] = temp;\n        await this.setState({ heapA: this.h });\n\n        this.highlightLine('Heap-fixup-7');\n        await new Promise((r) => setTimeout(r, 1000));\n        await this.checkPauseStatus();\n        if (this.unMounting) return;\n        this.removeHighlightedLine('Heap-fixup-7');\n\n        this.deActivateLink(this.h[pos]);\n\n        pos = parent;\n        this.setState({ currentIndex: pos });\n      } else {\n        this.highlightLine('Heap-fixup-8');\n        await new Promise((r) => setTimeout(r, 1000));\n        await this.checkPauseStatus();\n        if (this.unMounting) return;\n        this.removeHighlightedLine('Heap-fixup-8');\n        break;\n      }\n      this.setState({ parentIndex: null });\n    }\n    this.setState({ currentIndex: null, parentIndex: null });\n  }\n\n  async removeRoot() {\n    await this.setState({ executing: true });\n\n    this.highlightLine('Heap-removeRoot-1');\n    await new Promise((r) => setTimeout(r, 1000));\n    await this.checkPauseStatus();\n    if (this.unMounting) return;\n    this.removeHighlightedLine('Heap-removeRoot-1');\n\n    this.highlightLine('Heap-removeRoot-2');\n    await new Promise((r) => setTimeout(r, 1000));\n    await this.checkPauseStatus();\n    if (this.unMounting) return;\n    this.removeHighlightedLine('Heap-removeRoot-2');\n    let smallest = this.h[1];\n    this.setState({ removedRoot: smallest });\n\n    this.highlightLine('Heap-removeRoot-3');\n    await new Promise((r) => setTimeout(r, 1000));\n    await this.checkPauseStatus();\n    if (this.unMounting) return;\n    this.removeHighlightedLine('Heap-removeRoot-3');\n    this.h[1] = this.h.pop();\n    this.setState({ heapA: this.h });\n\n    this.highlightLine('Heap-removeRoot-4');\n    await new Promise((r) => setTimeout(r, 1000));\n    await this.checkPauseStatus();\n    if (this.unMounting) return;\n    this.removeHighlightedLine('Heap-removeRoot-4');\n    this.setState({ size: this.state.size - 1 });\n    this.h[0] = this.state.size;\n\n    let updatedList = this.state.inputList.filter((e) => e !== smallest);\n    if (this.state.size === 0) {\n      this.h = this.h.slice(0, 1);\n    }\n    await this.setState({ heapA: this.h, inputList: updatedList });\n\n    this.highlightLine('Heap-removeRoot-5');\n    await new Promise((r) => setTimeout(r, 1000));\n    await this.checkPauseStatus();\n    if (this.unMounting) return;\n    if (this.state.size === 0) {\n      clearTree();\n    } else {\n      this.convertHeapArrayToAdjList(this.h);\n      removeRootOfDynamicTree(this.h[1], this.adjList);\n      await this.fixDown();\n    }\n\n    this.removeHighlightedLine('Heap-removeRoot-5');\n    this.highlightLine('Heap-removeRoot-6');\n    await new Promise((r) => setTimeout(r, 1000));\n    await this.checkPauseStatus();\n    if (this.unMounting) return;\n    this.removeHighlightedLine('Heap-removeRoot-6');\n    await this.setState({ executing: false, removedRoot: null });\n    return smallest;\n  }\n  async fixDown() {\n    this.highlightLine('Heap-fixdown-1');\n    await new Promise((r) => setTimeout(r, 1000));\n    await this.checkPauseStatus();\n    if (this.unMounting) return;\n    this.removeHighlightedLine('Heap-fixdown-1');\n\n    this.highlightLine('Heap-fixdown-2');\n    await new Promise((r) => setTimeout(r, 1000));\n    await this.checkPauseStatus();\n    if (this.unMounting) return;\n    this.removeHighlightedLine('Heap-fixdown-2');\n\n    let pos = 1;\n    this.setState({ currentIndex: pos });\n\n    if (pos * 2 > this.state.size) {\n      this.highlightLine('Heap-fixdown-3');\n      await new Promise((r) => setTimeout(r, 1000));\n      await this.checkPauseStatus();\n      if (this.unMounting) return;\n      this.removeHighlightedLine('Heap-fixdown-3');\n    }\n    while (pos * 2 <= this.state.size) {\n      this.highlightLine('Heap-fixdown-3');\n      await new Promise((r) => setTimeout(r, 1000));\n      await this.checkPauseStatus();\n      if (this.unMounting) return;\n      this.removeHighlightedLine('Heap-fixdown-3');\n\n      this.highlightLine('Heap-fixdown-4');\n      await new Promise((r) => setTimeout(r, 1000));\n      await this.checkPauseStatus();\n      if (this.unMounting) return;\n      this.removeHighlightedLine('Heap-fixdown-4');\n\n      let child = pos * 2;\n      this.setState({ childIndex: child });\n\n      this.activateParent(this.h[pos]);\n\n      this.highlightLine('Heap-fixdown-5');\n      this.highlightLine('Heap-fixdown-6');\n      this.activateLeftAndRightChildren(this.h[child], this.h[child + 1]);\n      await new Promise((r) => setTimeout(r, 2000));\n      await this.checkPauseStatus();\n      if (this.unMounting) return;\n      this.removeHighlightedLine('Heap-fixdown-5');\n      this.removeHighlightedLine('Heap-fixdown-6');\n\n      this.setState({\n        leftChild: this.h[child],\n        rightChild: this.h[child + 1],\n      });\n\n      this.deActivateParent(this.h[pos]);\n      this.deActivateLeftAndRightChildren(this.h[child], this.h[child + 1]);\n\n      this.highlightLine('Heap-fixdown-7');\n      await new Promise((r) => setTimeout(r, 1000));\n      await this.checkPauseStatus();\n      if (this.unMounting) return;\n      this.removeHighlightedLine('Heap-fixdown-7');\n\n      if (this.h[child] > this.h[child + 1]) {\n        this.highlightLine('Heap-fixdown-8');\n        await new Promise((r) => setTimeout(r, 1000));\n        await this.checkPauseStatus();\n        if (this.unMounting) return;\n        this.removeHighlightedLine('Heap-fixdown-8');\n        child += 1;\n      }\n\n      this.activateChildAndParent(this.h[child], this.h[pos]);\n\n      this.highlightLine('Heap-fixdown-9');\n      await new Promise((r) => setTimeout(r, 2000));\n      await this.checkPauseStatus();\n      if (this.unMounting) return;\n      this.removeHighlightedLine('Heap-fixdown-9');\n\n      this.removeActiveChildParent(this.h[child], this.h[pos]);\n\n      if (this.h[pos] > this.h[child]) {\n        this.activateLink(this.h[child]);\n        this.highlightLine('Heap-fixdown-10');\n        await new Promise((r) => setTimeout(r, 2000));\n        await this.checkPauseStatus();\n        if (this.unMounting) return;\n\n        this.removeHighlightedLine('Heap-fixdown-10');\n\n        this.deActivateLink(this.h[child]);\n\n        swap(this.h[pos], this.h[child]);\n        let temp = this.h[child];\n        this.h[child] = this.h[pos];\n        this.h[pos] = temp;\n        await this.setState({ heapA: this.h });\n\n        this.highlightLine('Heap-fixdown-11');\n        await new Promise((r) => setTimeout(r, 1000));\n        await this.checkPauseStatus();\n        if (this.unMounting) return;\n        this.removeHighlightedLine('Heap-fixdown-11');\n        pos = child;\n        this.setState({ currentIndex: pos });\n      } else {\n        this.highlightLine('Heap-fixdown-12');\n        await new Promise((r) => setTimeout(r, 1000));\n        await this.checkPauseStatus();\n        if (this.unMounting) return;\n        this.removeHighlightedLine('Heap-fixdown-12');\n        break;\n      }\n      this.setState({ childIndex: null, leftChild: null, rightChild: null });\n    }\n    this.setState({ currentIndex: null });\n  }\n\n  convertHeapArrayToAdjList = (a) => {\n    let adjList = {};\n\n    for (let i = 1; i <= a[0]; i++) {\n      let parent = a[i];\n      if (adjList[parent]) {\n        continue;\n      }\n      let leftChild = a[i * 2];\n      let rightChild = a[i * 2 + 1];\n      let children = [];\n      if (leftChild) {\n        children.push(leftChild);\n      }\n      if (rightChild) {\n        children.push(rightChild);\n      }\n      adjList[parent] = children;\n    }\n    this.adjList = adjList;\n    return this.adjList;\n  };\n  toggleClicked = (i) => {\n    let a = this.state.clicked.slice();\n    a[i] = !a[i];\n    this.setState({\n      clicked: a,\n    });\n  };\n  activateLeftAndRightChildren(leftChild, rightChild) {\n    let leftChildElement = document.getElementsByClassName(\n      'node-' + leftChild\n    )[0];\n    if (leftChildElement) {\n      leftChildElement.classList.add('left-right-child-node');\n    }\n\n    let rightChildElement = document.getElementsByClassName(\n      'node-' + rightChild\n    )[0];\n    if (rightChildElement) {\n      rightChildElement.classList.add('left-right-child-node');\n    }\n  }\n\n  deActivateLeftAndRightChildren(leftChild, rightChild) {\n    let leftChildElement = document.getElementsByClassName(\n      'node-' + leftChild\n    )[0];\n    if (leftChildElement) {\n      leftChildElement.classList.remove('left-right-child-node');\n    }\n\n    let rightChildElement = document.getElementsByClassName(\n      'node-' + rightChild\n    )[0];\n    if (rightChildElement) {\n      rightChildElement.classList.remove('left-right-child-node');\n    }\n  }\n\n  activateParent(parent) {\n    let parentElement = document.getElementsByClassName('node-' + parent)[0];\n    parentElement.classList.add('parent-node');\n  }\n\n  deActivateParent(parent) {\n    let parentElement = document.getElementsByClassName('node-' + parent)[0];\n    parentElement.classList.remove('parent-node');\n  }\n\n  activateChildAndParent(child, parent) {\n    let childElement = document.getElementsByClassName('node-' + child)[0];\n    childElement.classList.add('child-node');\n    let parentElement = document.getElementsByClassName('node-' + parent)[0];\n    parentElement.classList.add('parent-node');\n  }\n\n  removeActiveChildParent(child, parent) {\n    let childElement = document.getElementsByClassName('node-' + child)[0];\n    let parentElement = document.getElementsByClassName('node-' + parent)[0];\n    let childLinkElement = document.getElementById(child + 'link');\n\n    childElement.classList.remove('child-node');\n    parentElement.classList.remove('parent-node');\n    childLinkElement.classList.remove('fade-in-out-link');\n  }\n\n  activateLink(child) {\n    let childLinkElement = document.getElementById(child + 'link');\n    childLinkElement.classList.add('fade-in-out-link');\n  }\n  deActivateLink(child) {\n    let childLinkElement = document.getElementById(child + 'link');\n    childLinkElement.classList.remove('fade-in-out-link');\n  }\n  async checkPauseStatus() {\n    while (this.state.pause) {\n      await new Promise((r) => setTimeout(r, 1000));\n      continue;\n    }\n  }\n\n  formatInsertButtonText() {\n    let linkText = '';\n    if (this.state.inputList.includes(this.state.inputNum)) {\n      linkText = 'No Duplicates';\n    } else if (this.state.executing) {\n      linkText = 'Executing...';\n    } else {\n      linkText = 'Insert';\n    }\n    return linkText;\n  }\n\n  renderHeapClassPseudocode() {\n    const indentation = (num) => {\n      return num * 20;\n    };\n    return (\n      <div>\n        <div id={'Heap-class-1'}>\n          1<span style={{ marginLeft: indentation(1) }}>Class Heap</span>\n        </div>\n        <div id={'Heap-class-2'}>\n          2<span style={{ marginLeft: indentation(2) }}>let h be an array</span>\n        </div>\n        <div id={'Heap-class-3'}>\n          3<span style={{ marginLeft: indentation(2) }}>let size be 0</span>\n        </div>\n        <div id={'Heap-class-4'}>\n          4\n          <span style={{ marginLeft: indentation(2) }}>\n            let the first element of h always be size\n          </span>\n        </div>\n        <br></br>\n      </div>\n    );\n  }\n\n  renderInsertPseudocode() {\n    const indentation = (num) => {\n      return num * 20;\n    };\n    return (\n      <div>\n        <div id={'Heap-insert-1'}>\n          1<span style={{ marginLeft: indentation(1) }}>Insert(element)</span>\n        </div>\n        <div id={'Heap-insert-2'}>\n          2\n          <span style={{ marginLeft: indentation(2) }}>\n            let h[0] be size + 1\n          </span>\n        </div>\n        <div id={'Heap-insert-3'}>\n          3\n          <span style={{ marginLeft: indentation(2) }}>\n            insert element at end of h\n          </span>\n        </div>\n        <div id={'Heap-insert-4'}>\n          4<span style={{ marginLeft: indentation(2) }}>call fixUp()</span>\n        </div>\n        <br></br>\n        <div id={'Heap-fixup-1'}>\n          1<span style={{ marginLeft: indentation(2) }}>fixUp()</span>\n        </div>\n        <div id={'Heap-fixup-2'}>\n          2\n          <span style={{ marginLeft: indentation(2) }}>\n            let currentIndex be size\n          </span>\n        </div>\n        <div id={'Heap-fixup-3'}>\n          3\n          <span style={{ marginLeft: indentation(2) }}>\n            while currentIndex {'>'} 0\n          </span>\n        </div>\n        <div id={'Heap-fixup-4'}>\n          4\n          <span style={{ marginLeft: indentation(3) }}>\n            let parentIndex be (currentIndex // 2)\n          </span>\n        </div>\n        <div id={'Heap-fixup-5'}>\n          5\n          <span style={{ marginLeft: indentation(3) }}>\n            if h[parentIndex] {'>'} h[currentIndex]\n          </span>\n        </div>\n        <div id={'Heap-fixup-6'}>\n          6\n          <span style={{ marginLeft: indentation(4) }}>\n            swap h[parentIndex] with h[currentIndex]\n          </span>\n        </div>\n        <div id={'Heap-fixup-7'}>\n          7\n          <span style={{ marginLeft: indentation(4) }}>\n            let currentIndex be parentIndex\n          </span>\n        </div>\n        <div id={'Heap-fixup-8'}>\n          8\n          <span style={{ marginLeft: indentation(3) }}>\n            else break out of loop\n          </span>\n        </div>\n      </div>\n    );\n  }\n\n  renderRemoveRootPseudocode() {\n    const indentation = (num) => {\n      return num * 20;\n    };\n    return (\n      <div>\n        <div id={'Heap-removeRoot-1'}>\n          1<span style={{ marginLeft: indentation(1) }}>removeRoot()</span>\n        </div>\n        <div id={'Heap-removeRoot-2'}>\n          2<span style={{ marginLeft: indentation(2) }}>let min be h[1]</span>\n        </div>\n        <div id={'Heap-removeRoot-3'}>\n          3\n          <span style={{ marginLeft: indentation(2) }}>\n            h[1] = largest node (removed from end of h)\n          </span>\n        </div>\n        <div id={'Heap-removeRoot-4'}>\n          4<span style={{ marginLeft: indentation(2) }}>h[0] = size - 1</span>\n        </div>\n        <div id={'Heap-removeRoot-5'}>\n          5<span style={{ marginLeft: indentation(2) }}>fixDown()</span>\n        </div>\n        <div id={'Heap-removeRoot-6'}>\n          6<span style={{ marginLeft: indentation(2) }}>return min</span>\n        </div>\n        <br></br>\n        <div id={'Heap-fixdown-1'}>\n          1<span style={{ marginLeft: indentation(1) }}>fixDown()</span>\n        </div>\n        <div id={'Heap-fixdown-2'}>\n          2\n          <span style={{ marginLeft: indentation(2) }}>\n            let currentIndex be 1\n          </span>\n        </div>\n        <div id={'Heap-fixdown-3'}>\n          3\n          <span style={{ marginLeft: indentation(2) }}>\n            while (currentIndex * 2) {'<'} size\n          </span>\n        </div>\n        <div id={'Heap-fixdown-4'}>\n          4\n          <span style={{ marginLeft: indentation(3) }}>\n            let childIndex be currentIndex * 2\n          </span>\n        </div>\n        <div id={'Heap-fixdown-5'}>\n          5\n          <span style={{ marginLeft: indentation(3) }}>\n            let leftChild be h[currentIndex]\n          </span>\n        </div>\n        <div id={'Heap-fixdown-6'}>\n          6\n          <span style={{ marginLeft: indentation(3) }}>\n            let rightChild be h[currentIndex+1]\n          </span>\n        </div>\n        <div id={'Heap-fixdown-7'}>\n          7\n          <span style={{ marginLeft: indentation(3) }}>\n            if leftChild {'>'} rightChild\n          </span>\n        </div>\n        <div id={'Heap-fixdown-8'}>\n          8\n          <span style={{ marginLeft: indentation(4) }}>\n            let childIndex = childIndex + 1\n          </span>\n        </div>\n        <div id={'Heap-fixdown-9'}>\n          9\n          <span style={{ marginLeft: indentation(3) }}>\n            if h[currentIndex] {'>'} h[childIndex]\n          </span>\n        </div>\n        <div id={'Heap-fixdown-10'}>\n          10\n          <span style={{ marginLeft: indentation(4) }}>\n            swap h[currentIndex] with h[childIndex]\n          </span>\n        </div>\n        <div id={'Heap-fixdown-11'}>\n          11\n          <span style={{ marginLeft: indentation(4) }}>\n            {' '}\n            currentIndex = childIndex\n          </span>\n        </div>\n        <div id={'Heap-fixdown-12'}>\n          12\n          <span style={{ marginLeft: indentation(3) }}>\n            else break out of loop\n          </span>\n        </div>\n      </div>\n    );\n  }\n  highlightLine(classId) {\n    let el = document.getElementById(classId);\n    if (el) el.classList.add('active-code-line');\n  }\n  removeHighlightedLine(classId) {\n    let el = document.getElementById(classId);\n    if (el) el.classList.remove('active-code-line');\n  }\n  render() {\n    return (\n      <div className={'row'}>\n        <div className={'col-4'} id={'graph-container'}>\n          <form\n            onSubmit={(event) => {\n              event.preventDefault();\n            }}\n          >\n            <label>Add a node:</label>\n\n            <input\n              style={{ width: '50px' }}\n              type=\"text\"\n              value={this.state.inputNum}\n              onChange={async (event) => {\n                await this.setState({\n                  inputNum: Number(event.target.value),\n                });\n              }}\n            />\n            <button\n              type=\"submit\"\n              disabled={\n                this.state.inputList.includes(Number(this.state.inputNum)) ||\n                this.state.executing\n              }\n              onClick={() => {\n                this.setState({\n                  removingRoot: false,\n                  inserting: true,\n                  pause: false,\n                });\n                this.handleInsertButton();\n              }}\n            >\n              {this.formatInsertButtonText()}\n            </button>\n            <button\n              disabled={this.state.heapA.length <= 1 || this.state.executing}\n              onClick={() => {\n                this.setState({\n                  removingRoot: true,\n                  inserting: false,\n                  pause: false,\n                });\n                this.removeRoot();\n              }}\n            >\n              {this.state.executing ? 'Executing...' : 'Remove Root'}\n            </button>\n            <button\n              disabled={this.state.executing}\n              onClick={() => {\n                this.buildSampleHeap();\n              }}\n            >\n              {this.state.executing ? 'Executing...' : 'Sample Heap'}\n            </button>\n            <button\n              className=\"graph-button\"\n              onClick={() => {\n                this.setState({ pause: !this.state.pause });\n              }}\n            >\n              {this.state.pause ? 'UnPause' : 'Pause'}\n            </button>\n            <button\n              disabled={this.state.executing}\n              onClick={() => {\n                this.clearHeap();\n              }}\n            >\n              {this.state.executing ? 'Executing...' : 'Clear'}\n            </button>\n          </form>\n        </div>\n        <div className={'col-4'}>\n          <div className={'row'}>\n            {this.renderHeapClassPseudocode()}\n            {this.state.inserting ? this.renderInsertPseudocode() : ''}\n            {this.state.removingRoot ? this.renderRemoveRootPseudocode() : ''}\n          </div>\n        </div>\n        <div className={'col-4'}>\n          <div className={'row'}>\n            <Sidebar showButton={true}>\n              <li> size = {this.state.size} </li>\n              {this.state.newElement ? (\n                <li> element = {this.state.newElement} </li>\n              ) : (\n                ''\n              )}\n              {this.state.removedRoot ? (\n                <li> min = {this.state.removedRoot} </li>\n              ) : (\n                ''\n              )}\n\n              {this.state.currentIndex ? (\n                <li> currentIndex = {this.state.currentIndex} </li>\n              ) : (\n                ''\n              )}\n\n              {this.state.parentIndex ? (\n                <li> parentIndex = {this.state.parentIndex} </li>\n              ) : (\n                ''\n              )}\n              {this.state.childIndex ? (\n                <li> childIndex = {this.state.childIndex} </li>\n              ) : (\n                ''\n              )}\n\n              {this.state.leftChild ? (\n                <li> leftChild = {this.state.leftChild} </li>\n              ) : (\n                ''\n              )}\n              {this.state.rightChild ? (\n                <li> rightChild = {this.state.rightChild} </li>\n              ) : (\n                ''\n              )}\n\n              <li onClick={() => this.toggleClicked(0)}>\n                <RenderListComponent\n                  list={this.state.heapA}\n                  listName={'h'}\n                  clicked={this.state.clicked[0]}\n                />\n              </li>\n              <li onClick={() => this.toggleClicked(1)}>\n                <RenderListComponent\n                  list={this.state.inputList}\n                  listName={'inputList'}\n                  clicked={this.state.clicked[1]}\n                />\n              </li>\n            </Sidebar>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Heap;\n\n// renderHeapTableData() {\n//   return this.state.heapA.map((node, i) => {\n//     return (\n//       <td key={i} style={{ backgroundColor: i === 1 ? 'yellow' : '' }}>\n//         {node}\n//       </td>\n//     );\n//   });\n// }\n\n// renderHeapHeading() {\n//   return (\n//     <tr>\n//       <th>size</th>\n//     </tr>\n//   );\n// }\n\n// renderInputListTableData() {\n//   return this.state.inputList.map((node) => {\n//     return <td key={node}>{node}</td>;\n//   });\n// }\n\n/* <div className={'row'}>\n            <h4>Heap Array</h4>\n          </div>\n          <div className={'row'}>\n            <table id={'heap-table'} className={'float-left'}>\n              <tbody>\n                {this.renderHeapHeading()}\n                <tr>{this.renderHeapTableData()}</tr>\n              </tbody>\n            </table>\n          </div>\n          <div className={'row'}>\n            <h5 id={'root-extracted'}> </h5>\n          </div>\n          <div className={'row'}>\n            <h4>Input List</h4>\n          </div>\n          <div className={'row'}>\n            <table id={'input-list-table'} className={'float-left'}>\n              <tbody>\n                <tr>{this.renderInputListTableData()}</tr>\n              </tbody>\n            </table>\n          </div> */\n","import React, { Component } from 'react';\nimport * as d3 from 'd3';\n\nclass InsertionSort extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n\n  }\n  componentDidMount() {\n    let data = [1,2,3,4,5,6]\n\n  // const div = d3.select(\"#sort-container\").append(\"div\")\n  //   .style(\"font\", \"10px sans-serif\")\n  //   .style(\"text-align\", \"right\")\n  //   .style(\"color\", \"white\");\n  //\n  // div.selectAll(\"div\")\n  //   .data(data)\n  //   .join(\"div\")\n  //     .style(\"background\", \"steelblue\")\n  //     .style(\"padding\", \"3px\")\n  //     .style(\"margin\", \"1px\")\n  //     .style(\"width\", d => `${d * 10}px`)\n  //     .text(d => d);\n  // set the dimensions and margins of the graph\n  var margin = {top: 10, right: 30, bottom: 90, left: 40},\n      width = 460 - margin.left - margin.right,\n      height = 450 - margin.top - margin.bottom;\n\n  // append the svg object to the body of the page\n  var svg = d3.select(\"#sort-container\")\n    .append(\"svg\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n      .attr(\"transform\",\n            \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n  // X axis\n  var x = d3.scaleBand()\n    .range([ 0, width ])\n    .domain(data)\n    .padding(0.2);\n\n  svg.append(\"g\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(d3.axisBottom(x))\n\n  // Add Y axis\n  var y = d3.scaleLinear()\n    .domain([0, 10])\n    .range([ height, 0]);\n\n  // Bars\n  svg.selectAll(\"mybar\")\n    .data(data)\n    .enter()\n    .append(\"rect\")\n      .attr(\"x\", function(d) { return x(d); })\n      .attr(\"width\", x.bandwidth())\n      .attr(\"fill\", \"#39a4ff\")\n      // no bar at the beginning thus:\n      .attr(\"height\", function(d) { return height - y(0); }) // always equal to 0\n      .attr(\"y\", function(d) { return y(0); })\n\n  // Animation\n  svg.selectAll(\"rect\")\n    .transition()\n    .duration(800)\n    .attr(\"y\", function(d) { return y(d); })\n    .attr(\"height\", function(d) { return height - y(d); })\n\n    svg.selectAll(\"rect\").transition().duration(100)\n      .attr(\"y\", function(d) { return y(d); })\n      .attr(\"height\", function(d) { return height - y(d) - 10; })\n      .delay(1000)\n  }\n\n\n\n  componentWillUnmount() {\n\n  }\n\n  render() {\n    return (\n      <div id=\"sort-container\"></div>\n    );\n  }\n}\n\nexport default InsertionSort;\n","import React from 'react';\nimport '../styles/MainPage.scss';\n\nconst MainPage = (props) => {\n  return (\n    <div>\n      <h1 className=\"heading\">\n        Welcome to\n        <span style={{ color: '#51a6fc' }}> Am</span>\n        <span style={{ color: '#8787fe' }}>Algorithm</span>\n      </h1>\n      <div className=\"background\">\n        <img\n          src={\n            process.env.PUBLIC_URL + '/assets/imgs/home_page_background1.png'\n          }\n          alt={'bg1'}\n        />\n        <img\n          src={\n            process.env.PUBLIC_URL + '/assets/imgs/home_page_background2.png'\n          }\n          alt={'bg2'}\n        />\n        <img\n          src={\n            process.env.PUBLIC_URL + '/assets/imgs/home_page_background3.png'\n          }\n          alt={'bg3'}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default MainPage;\n","import React from 'react';\nimport {BrowserRouter as Router, Route, Link} from 'react-router-dom';\nimport {Container, Navbar, Nav, NavDropdown} from 'react-bootstrap';\n\nimport TreeTraversals from '../Components/TreeTraversals';\nimport UndirectedGraphAlgorithms from '../Components/UndirectedGraphAlgorithms';\nimport DirectedGraphAlgorithms from '../Components/DirectedGraphAlgorithms';\nimport ScatterPlotAlgorithms from '../Components/ScatterPlotAlgorithms';\nimport Heap from '../Components/data-structures/Heap';\nimport InsertionSort from '../Components/algorithms/sorts/InsertionSort';\n\nimport '../styles/Navigation-bar.scss';\nimport MainPage from './MainPage';\n\nconst NavigationBar = () => {\n  return (<Router>\n    <Navbar>\n      <Navbar.Brand as={Link} to=\"/\">\n        <img alt={'logo'} className={'header-logo'} src={process.env.PUBLIC_URL + '/assets/imgs/logo.png'}/>\n      </Navbar.Brand>\n\n      <Nav className=\"ml-auto\">\n        <NavDropdown title=\"Data Structures\">\n          <NavDropdown.Item eventKey=\"1\" as={Link} to=\"/heap\">\n            Heap\n          </NavDropdown.Item>\n        </NavDropdown>\n\n        <NavDropdown title=\"Sorting\">\n          <NavDropdown.Item eventKey=\"1\" as={Link} to=\"/insertion_sort\">\n            Insertion Sort\n          </NavDropdown.Item>\n        </NavDropdown>\n\n        <NavDropdown title=\"Tree\">\n          <NavDropdown.Item as={Link} to=\"/tree_traversals\">\n            Tree Traversals\n          </NavDropdown.Item>\n        </NavDropdown>\n\n        <NavDropdown title=\"Graph\">\n          <NavDropdown.Item eventKey=\"1\" as={Link} to=\"/directed_graph_algorithms\">\n            Directed Graph Algorithms\n          </NavDropdown.Item>\n          <NavDropdown.Item eventKey=\"2\" as={Link} to=\"/undirected_graph_algorithms\">\n            Undirected Graph Algorithms\n          </NavDropdown.Item>\n        </NavDropdown>\n\n        <NavDropdown title=\"Machine Learning\">\n          <NavDropdown.Item eventKey=\"3\" as={Link} to=\"/ScatterPlotAlgorithms\">\n            K-Means\n          </NavDropdown.Item>\n        </NavDropdown>\n\n        <div className=\"burgerContainer\">\n          <div className=\"burgerIcon\"></div>\n          <div className=\"burgerIcon\"></div>\n          <div className=\"burgerIcon\"></div>\n        </div>\n      </Nav>\n    </Navbar>\n    <br/>\n    <Route path=\"/tree_traversals\" component={TreeTraversals}/>\n    <Route path=\"/undirected_graph_algorithms\" component={UndirectedGraphAlgorithms}/>\n    <Route path=\"/directed_graph_algorithms\" component={DirectedGraphAlgorithms}/>\n    <Route path=\"/heap\" component={Heap}/>\n    <Route path=\"/insertion_sort\" component={InsertionSort}/>\n    <Route path=\"/ScatterPlotAlgorithms\" component={ScatterPlotAlgorithms}/>\n\n    <Route exact=\"exact\" path=\"/\" component={MainPage}/>\n  </Router>);\n};\n\nexport default NavigationBar;\n","import React from 'react';\nimport './styles/App.scss';\nimport NavigationBar from './Components/NavigationBar';\nimport './styles/Node.scss';\nimport './styles/Link.scss';\nimport './styles/Graph.scss';\nimport './styles/OutputTable.scss';\nimport './styles/Clusters.scss';\nimport './styles/Pseudocode.scss';\nimport './styles/Sidebar.scss';\n\nfunction App() {\n  return (\n    <div className={'container-fluid'}>\n      <NavigationBar />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}