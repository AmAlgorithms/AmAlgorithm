{"version":3,"sources":["Components/algorithms/tree-algorithms/DepthFirstSearch.js","Components/algorithms/tree-algorithms/BreadthFirstSearch.js","graph-builders/tree-builder.js","Components/sidebar/Sidebar.js","Components/sidebar/RenderListComponent.js","Components/sidebar/RenderObjectComponent.js","Components/TreeTraversals.js","graph-builders/undirected-graph-builder.js","Components/algorithms/graph-algorithms/Prim.js","Components/UndirectedGraphAlgorithms.js","Components/algorithms/graph-algorithms/Topsort.js","graph-builders/directed-graph-builder.js","Components/DirectedGraphAlgorithms.js","graph-builders/scatterplot-builder.js","Components/algorithms/clustering-algorithms/KMeans.js","Components/ScatterPlotAlgorithms.js","graph-builders/dynamic-tree-builder.js","Components/data-structures/Heap.js","Components/algorithms/sorts/InsertionSort.js","Components/MainPage.js","Components/NavigationBar.js","App.js","index.js"],"names":["DepthFirstSearch","props","dfs","a","linkList","highlightLine","Promise","r","setTimeout","speed","checkPauseStatus","stop","unMounting","removeHighlightedLine","root","visited","Object","keys","g","map","node","updateVisitedMap","stack","nodePath","length","currentNode","pop","updateStack","activateLink","activateVisitedNode","updateCurrentNode","push","buildNodePath","child","updateChild","forEach","el","classList","remove","this","prevProps","runningAlg","lineNum","document","getElementById","add","linkElement","nodeElement","pause","onClick","setRunningAlg","Component","BreadthFirstSearch","bfs","queue","updateQueue","shift","createTree","adjList","treeData","entries","children","name","value","type","level","buildTreeDataFromAdjList","margin","width","height","treemap","d3","size","nodes","d","append","attr","selectAll","data","descendants","slice","enter","style","x","y","parent","depth","text","Sidebar","toggleSidebar","setState","sidebar","state","className","visibility","showButton","id","RenderListComponent","clicked","paddingLeft","listStyle","listName","list","e","i","key","marginLeft","RenderObjectComponent","objName","obj","Array","isArray","String","lst","TreeTraversals","q","s","getPauseStatus","getStopStatus","getSpeedRequest","Number","reset","dfsPseduoElement","bfsPseduoElement","visitedMap","alg","updateStopState","val","toggleClicked","b","c","f","h","j","k","l","m","n","o","p","t","u","v","w","z","tree","svg","hasChildNodes","removeChild","indentation","num","onSubmit","event","preventDefault","onChange","target","renderBfsPseudocode","renderDfsPseudocode","createGraph","links","source","strength","cost","linkForce","link","simulation","force","linkElements","linkTextElements","nodeElements","nodeTextElements","on","Prim","prim","costMap","parents","mstSet","Infinity","updateDistances","updateParents","updatePrimMstSet","activeLinks","minNode","findMin","updatePrimMinNode","minNodeEl","activateCurrentNode","cleanUpActiveLinksAndCurrentNode","neighbor","updateNeighbor","deActivateOldLink","filter","updateCurrentNodeToBeVisited","min","currentNodeElement","neighborNode","linkString","linkOfInterestElement","oldChild","removeActiveLinks","UndirectedGraphAlgorithms","distances","updateNode","neighborCost","updatePq","priorityQueue","updatePotentialScore","potentialScore","dijkstraPseduoElement","primPseduoElement","lines","getElementsByTagName","graph","index","backgroundColor","marginRight","renderPrimHeading","renderDijkstraHeading","renderPrimTableData","renderDijkstraTableData","renderPrimPseudocode","renderDijkstraPseudocode","Topsort","topSort","updateVisited","callStack","unshift","updateCallStack","visit","getOrdering","reverse","console","log","previousNodes","activeLink","updateActiveLinks","activateNeighbor","markNodeComplete","removeOutgoingLinks","classId","contains","neighborEl","lineElement","values","createDirectedGraph","DirectedGraphAlgorithms","ord","ordering","V","pseduoTopsortElements","renderTopsortPseudocode","top","right","bottom","left","domain","range","call","parseFloat","toFixed","classed","select","transition","duration","delay","createScatterplot","KMeans","kmeans","randomPoints","getRandomElements","points","centroids","centroid","scaleX","scaleY","hasConverged","iter","assignToClusters","prevCentroids","updateCentroids","JSON","stringify","reduce","bool","currentCentroid","point","Math","sqrt","pow","closestCentroid","indexOf","colorPoint","clusterArray","mean","sum","currentPoint","moveIthCentroid","arr","result","len","taken","RangeError","floor","random","pointElement","pointClasses","ScatterPlotAlgorithms","setPoints","ps","centroidGroup","parentNode","circleElements","setAttribute","scatter","createDynamicTree","getMin","clearTree","dataStructure","removeRootOfDynamicTree","insertIntoDynamicTree","swap","parentText","childText","parentCircle","childCircle","parentG","childG","childLink","parentLink","Heap","componentDidMount","inputList","buildSampleHeap","handleInsertButton","newNode","inputNum","executing","insert","convertHeapArrayToAdjList","leftChild","rightChild","sample","heapA","parentIndex","currentIndex","newElement","removedRoot","inserting","removingRoot","childIndex","fixUp","pos","activateChildAndParent","removeActiveChildParent","temp","deActivateLink","smallest","updatedList","fixDown","activateParent","activateLeftAndRightChildren","deActivateParent","deActivateLeftAndRightChildren","leftChildElement","getElementsByClassName","rightChildElement","childElement","parentElement","childLinkElement","includes","disabled","formatInsertButtonText","removeRoot","clearHeap","renderHeapClassPseudocode","renderInsertPseudocode","renderRemoveRootPseudocode","InsertionSort","insertionSort","animation_queue","padding","bandwidth","interval","setInterval","swapBars","clearInterval","barFromIndex","barToIndex","fromObj","toObj","fromObjTxt","toObjTxt","MainPage","color","src","process","alt","NavigationBar","Navbar","Brand","as","Link","to","Nav","NavDropdown","title","Item","eventKey","path","component","exact","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.8d2bddb9.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass DepthFirstSearch extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.unMounting = false;\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unMounting = true;\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.runningAlg === 'dfs' && this.props.runningAlg !== 'dfs') {\r\n      this.unMounting = true;\r\n    }\r\n  }\r\n\r\n  highlightLine(lineNum) {\r\n    let el = document.getElementById('dfs-' + lineNum);\r\n    if (el) el.classList.add('active-code-line');\r\n  }\r\n  removeHighlightedLine(lineNum) {\r\n    let el = document.getElementById('dfs-' + lineNum);\r\n    if (el) el.classList.remove('active-code-line');\r\n  }\r\n\r\n  dfs = async () => {\r\n    let linkList = [];\r\n\r\n    this.highlightLine(1);\r\n    await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\r\n    await this.checkPauseStatus();\r\n    if (this.props.stop) return;\r\n    if (this.unMounting) return;\r\n    this.removeHighlightedLine(1);\r\n\r\n    this.highlightLine(2);\r\n    await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\r\n    await this.checkPauseStatus();\r\n    if (this.props.stop) return;\r\n    if (this.unMounting) return;\r\n    this.removeHighlightedLine(2);\r\n\r\n    let root = 'a';\r\n    let visited = {};\r\n    Object.keys(this.props.g).map((node) => (visited[node] = false));\r\n\r\n    this.highlightLine(3);\r\n    this.props.updateVisitedMap(visited);\r\n    await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\r\n    await this.checkPauseStatus();\r\n    if (this.props.stop) return;\r\n    if (this.unMounting) return;\r\n    this.removeHighlightedLine(3);\r\n\r\n    this.highlightLine(4);\r\n    visited[root] = true;\r\n    this.props.updateVisitedMap(visited);\r\n\r\n    await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\r\n    await this.checkPauseStatus();\r\n    if (this.props.stop) return;\r\n    if (this.unMounting) return;\r\n    this.removeHighlightedLine(4);\r\n\r\n    this.highlightLine(5);\r\n    let stack = [root];\r\n    await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\r\n    await this.checkPauseStatus();\r\n    if (this.props.stop) return;\r\n    if (this.unMounting) return;\r\n    this.removeHighlightedLine(5);\r\n\r\n    let nodePath = [];\r\n    while (stack.length > 0) {\r\n      this.highlightLine(6);\r\n      await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\r\n      await this.checkPauseStatus();\r\n      if (this.props.stop) return;\r\n      if (this.unMounting) return;\r\n      this.removeHighlightedLine(6);\r\n\r\n      let currentNode = stack.pop();\r\n      this.props.updateStack(stack);\r\n\r\n      this.highlightLine(7);\r\n      await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\r\n      await this.checkPauseStatus();\r\n      if (this.props.stop) return;\r\n      if (this.unMounting) return;\r\n\r\n      this.activateLink(currentNode, linkList);\r\n      await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\r\n      await this.checkPauseStatus();\r\n      if (this.props.stop) return;\r\n      if (this.unMounting) return;\r\n\r\n      this.activateVisitedNode(currentNode);\r\n      this.props.updateCurrentNode(currentNode);\r\n\r\n      nodePath.push(currentNode);\r\n      this.props.buildNodePath(nodePath);\r\n\r\n      await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\r\n      await this.checkPauseStatus();\r\n      if (this.props.stop) return;\r\n      if (this.unMounting) return;\r\n      this.removeHighlightedLine(7);\r\n\r\n      this.highlightLine(8);\r\n      await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\r\n      await this.checkPauseStatus();\r\n      if (this.props.stop) return;\r\n      if (this.unMounting) return;\r\n      this.removeHighlightedLine(8);\r\n\r\n      for (let child of this.props.g[currentNode]) {\r\n        this.props.updateChild(child);\r\n\r\n        this.highlightLine(9);\r\n        await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\r\n        await this.checkPauseStatus();\r\n        if (this.props.stop) return;\r\n        if (this.unMounting) return;\r\n        this.removeHighlightedLine(9);\r\n\r\n        if (visited[child] === false) {\r\n          this.highlightLine(10);\r\n          await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\r\n          await this.checkPauseStatus();\r\n          if (this.props.stop) return;\r\n          if (this.unMounting) return;\r\n          this.removeHighlightedLine(10);\r\n          visited[child] = true;\r\n          this.props.updateVisitedMap(visited);\r\n\r\n          this.highlightLine(11);\r\n          await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\r\n          await this.checkPauseStatus();\r\n          if (this.props.stop) return;\r\n          if (this.unMounting) return;\r\n          this.removeHighlightedLine(11);\r\n          stack.push(child);\r\n          this.props.updateStack(stack);\r\n        }\r\n      }\r\n      this.props.updateChild(null);\r\n      this.props.updateCurrentNode(null);\r\n    }\r\n    this.props.updateChild(null);\r\n    this.props.updateCurrentNode(null);\r\n    linkList.forEach((el) => el.classList.remove('link-traversed'));\r\n  };\r\n\r\n  activateLink(currentNode, linkList) {\r\n    let linkElement = document.getElementById(currentNode + 'link');\r\n    if (linkElement) {\r\n      linkElement.classList.add('link-traversed');\r\n      linkList.push(linkElement);\r\n    }\r\n  }\r\n\r\n  activateVisitedNode(currentNode) {\r\n    let nodeElement = document.getElementById(currentNode);\r\n    if (nodeElement) nodeElement.classList.add('node-complete-tree');\r\n  }\r\n\r\n  async checkPauseStatus() {\r\n    while (this.props.pause) {\r\n      await new Promise((r) => setTimeout(r, 1000));\r\n      continue;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <button\r\n        onClick={async () => {\r\n          if (this.unMounting) {\r\n            this.unMounting = false;\r\n          }\r\n          await this.props.setRunningAlg('dfs');\r\n          this.dfs();\r\n        }}\r\n      >\r\n        DFS traverse\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DepthFirstSearch;\r\n","import React, { Component } from 'react';\r\n\r\nclass BreadthFirstSearch extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.unMounting = false;\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unMounting = true;\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.runningAlg === 'bfs' && this.props.runningAlg !== 'bfs') {\r\n      this.unMounting = true;\r\n    }\r\n  }\r\n\r\n  highlightLine(lineNum) {\r\n    let el = document.getElementById('bfs-' + lineNum);\r\n    if (el) el.classList.add('active-code-line');\r\n  }\r\n  removeHighlightedLine(lineNum) {\r\n    let el = document.getElementById('bfs-' + lineNum);\r\n    if (el) el.classList.remove('active-code-line');\r\n  }\r\n\r\n  bfs = async () => {\r\n    let linkList = [];\r\n    let root = 'a';\r\n\r\n    this.highlightLine(1);\r\n    await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\r\n    await this.checkPauseStatus();\r\n    if (this.props.stop) return;\r\n    if (this.unMounting) return;\r\n    this.removeHighlightedLine(1);\r\n\r\n    this.highlightLine(2);\r\n    await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\r\n    await this.checkPauseStatus();\r\n    if (this.props.stop) return;\r\n    if (this.unMounting) return;\r\n    this.removeHighlightedLine(2);\r\n\r\n    let visited = {};\r\n    Object.keys(this.props.g).map((node) => (visited[node] = false));\r\n\r\n    this.highlightLine(3);\r\n    await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\r\n    await this.checkPauseStatus();\r\n    if (this.props.stop) return;\r\n    if (this.unMounting) return;\r\n    this.props.updateVisitedMap(visited);\r\n    this.removeHighlightedLine(3);\r\n\r\n    this.highlightLine(4);\r\n    visited[root] = true;\r\n    await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\r\n    await this.checkPauseStatus();\r\n    if (this.props.stop) return;\r\n    if (this.unMounting) return;\r\n    this.removeHighlightedLine(4);\r\n\r\n    this.highlightLine(5);\r\n    await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\r\n    await this.checkPauseStatus();\r\n    if (this.props.stop) return;\r\n    if (this.unMounting) return;\r\n    this.removeHighlightedLine(5);\r\n\r\n    visited[root] = true;\r\n    this.props.updateVisitedMap(visited);\r\n    let queue = [root];\r\n    this.props.updateQueue(queue);\r\n    let nodePath = [];\r\n    while (queue.length > 0) {\r\n      this.highlightLine(6);\r\n      await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\r\n      await this.checkPauseStatus();\r\n      if (this.props.stop) return;\r\n      if (this.unMounting) return;\r\n      this.removeHighlightedLine(6);\r\n\r\n      let currentNode = queue[0];\r\n      queue.shift();\r\n      this.props.updateQueue(queue);\r\n\r\n      this.highlightLine(7);\r\n      this.activateLink(currentNode, linkList);\r\n      await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\r\n      await this.checkPauseStatus();\r\n      if (this.props.stop) return;\r\n      if (this.unMounting) return;\r\n\r\n      this.activateVisitedNode(currentNode);\r\n      this.props.updateCurrentNode(currentNode);\r\n\r\n      nodePath.push(currentNode);\r\n      this.props.buildNodePath(nodePath);\r\n\r\n      await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\r\n      await this.checkPauseStatus();\r\n      if (this.props.stop) return;\r\n      if (this.unMounting) return;\r\n      this.removeHighlightedLine(7);\r\n\r\n      this.highlightLine(8);\r\n      await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\r\n      await this.checkPauseStatus();\r\n      if (this.props.stop) return;\r\n      if (this.unMounting) return;\r\n\r\n      this.removeHighlightedLine(8);\r\n      for (let child of this.props.g[currentNode]) {\r\n        this.props.updateChild(child);\r\n        this.highlightLine(9);\r\n\r\n        await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\r\n        await this.checkPauseStatus();\r\n        if (this.props.stop) return;\r\n        if (this.unMounting) return;\r\n\r\n        this.removeHighlightedLine(9);\r\n        if (visited[child] === false) {\r\n          this.highlightLine(10);\r\n          await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\r\n          await this.checkPauseStatus();\r\n          if (this.props.stop) return;\r\n          if (this.unMounting) return;\r\n          this.removeHighlightedLine(10);\r\n          visited[child] = true;\r\n          this.props.updateVisitedMap(visited);\r\n          this.highlightLine(11);\r\n          await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\r\n          await this.checkPauseStatus();\r\n          if (this.props.stop) return;\r\n          if (this.unMounting) return;\r\n          this.removeHighlightedLine(11);\r\n          queue.push(child);\r\n          this.props.updateQueue(queue);\r\n        }\r\n      }\r\n      this.props.updateChild(null);\r\n      this.props.updateCurrentNode(null);\r\n    }\r\n    this.props.updateChild(null);\r\n    this.props.updateCurrentNode(null);\r\n    linkList.forEach((el) => el.classList.remove('link-traversed'));\r\n  };\r\n\r\n  activateLink(currentNode, linkList) {\r\n    let linkElement = document.getElementById(currentNode + 'link');\r\n    if (linkElement) {\r\n      linkElement.classList.add('link-traversed');\r\n      linkList.push(linkElement);\r\n    }\r\n  }\r\n\r\n  activateVisitedNode(currentNode) {\r\n    let nodeElement = document.getElementById(currentNode);\r\n    if (nodeElement) nodeElement.classList.add('node-complete-tree');\r\n  }\r\n\r\n  async checkPauseStatus() {\r\n    while (this.props.pause) {\r\n      await new Promise((r) => setTimeout(r, 1000));\r\n      continue;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <button\r\n        onClick={async () => {\r\n          if (this.unMounting) {\r\n            this.unMounting = false;\r\n          }\r\n          await this.props.setRunningAlg('bfs');\r\n          this.bfs();\r\n        }}\r\n      >\r\n        BFS traverse\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BreadthFirstSearch;\r\n","import * as d3 from 'd3';\r\n\r\nfunction buildTreeDataFromAdjList(adjList) {\r\n  let treeData = {};\r\n  let root = true;\r\n  for (let [node, children] of Object.entries(adjList)) {\r\n    if (root === true) {\r\n      treeData[node] = {\r\n        name: node,\r\n        value: 10,\r\n        type: 'black',\r\n        level: '',\r\n        children: [],\r\n      };\r\n      root = false;\r\n    }\r\n    for (let child of children) {\r\n      if (!treeData[child]) {\r\n        treeData[child] = {\r\n          name: child,\r\n          value: 10,\r\n          type: 'black',\r\n          level: '',\r\n          children: [],\r\n        };\r\n      }\r\n      treeData[node].children.push(treeData[child]);\r\n    }\r\n  }\r\n  return treeData;\r\n}\r\n\r\nfunction createTree(adjList) {\r\n  let treeData = buildTreeDataFromAdjList(adjList)['a'];\r\n  let myScale = 1.5;\r\n  // set the dimensions and margins of the diagram\r\n  const margin = { top: 20, right: 50, bottom: 50, left: 20 },\r\n    width = 900 - margin.left - margin.right,\r\n    height = 900 - margin.top - margin.bottom;\r\n\r\n  // declares a tree layout and assigns the size\r\n  const treemap = d3.tree().size([height, width]);\r\n\r\n  //  assigns the data to a hierarchy using parent-child relationships\r\n  let nodes = d3.hierarchy(treeData, (d) => d.children);\r\n\r\n  // maps the node data to the tree layout\r\n  nodes = treemap(nodes);\r\n\r\n  // append the svg object to the body of the page\r\n  // appends a 'group' element to 'svg'\r\n  // moves the 'group' element to the top left margin\r\n  const svg = d3\r\n      .select('#graph-container')\r\n      .append('svg')\r\n      .attr('id', 'tree-svg')\r\n      .attr('width', width + margin.left + margin.right)\r\n      .attr('height', height + margin.top + margin.bottom)\r\n      .attr('class', 'graph'),\r\n    g = svg\r\n      .append('g')\r\n      .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\r\n\r\n  // adds the links between the nodes\r\n  g.selectAll('.link')\r\n    .data(nodes.descendants().slice(1))\r\n    .enter()\r\n    .append('path')\r\n    .attr('class', (d) => 'link' + d.data.name, 'link')\r\n    .attr('class', 'link')\r\n    .attr('id', (d) => d.data.name + 'link') // d.parent.data.name + '-' + d.data.name\r\n    .style('stroke', (d) => d.data.level)\r\n    .attr('d', (d) => {\r\n      return (\r\n        'M' +\r\n        d.x / myScale +\r\n        ',' +\r\n        d.y / myScale +\r\n        'C' +\r\n        (d.x + d.parent.x) / myScale / 2 +\r\n        ',' +\r\n        d.y / myScale +\r\n        ' ' +\r\n        (d.x + d.parent.x) / myScale / 2 +\r\n        ',' +\r\n        d.parent.y / myScale +\r\n        ' ' +\r\n        d.parent.x / myScale +\r\n        ',' +\r\n        d.parent.y / myScale\r\n      );\r\n    });\r\n\r\n  // adds each node as a group\r\n  const node = g\r\n    .selectAll('.node')\r\n    .data(nodes.descendants())\r\n    .enter()\r\n    .append('g')\r\n    .attr(\r\n      'class',\r\n      (d) => 'node' + (d.children ? ' node--internal' : ' node--leaf')\r\n    )\r\n    .attr(\r\n      'transform',\r\n      (d) => 'translate(' + d.x / myScale + ',' + d.y / myScale + ')'\r\n    );\r\n\r\n  // adds the circle to the node\r\n  node\r\n    .append('circle')\r\n    .attr('r', (d) => d.data.value)\r\n    .attr('id', (d) => d.data.name);\r\n  // adds the text to the node\r\n  node\r\n    .append('text')\r\n    .attr('dy', '.35em')\r\n    .attr('x', (d) => (d.children ? (d.data.value + 5) * -1 : d.data.value + 5))\r\n    .attr('y', (d) =>\r\n      d.children && d.depth !== 0 ? -(d.data.value + 5) : d.data.value\r\n    )\r\n    .style('text-anchor', (d) => (d.children ? 'end' : 'start'))\r\n    .text((d) => d.data.name);\r\n}\r\n\r\nexport default createTree;\r\n","import React, { Component } from 'react';\r\n\r\nclass Sidebar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      sidebar: false,\r\n    };\r\n  }\r\n\r\n  toggleSidebar = () => {\r\n    this.setState({ sidebar: !this.state.sidebar });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <div\r\n          className={'sidebar'}\r\n          style={{ visibility: this.props.showButton ? 'visible' : 'hidden' }}\r\n        >\r\n          <button\r\n            id={'sidebar-button'}\r\n            className={'menu-bars'}\r\n            onClick={() => this.toggleSidebar()}\r\n          >\r\n            {this.state.sidebar ? 'Hide Variables' : 'Show Variables'}\r\n          </button>\r\n        </div>\r\n        <nav\r\n          className={\r\n            this.state.sidebar && this.props.showButton\r\n              ? 'side-menu active'\r\n              : 'side-menu'\r\n          }\r\n        >\r\n          <ul className={'side-menu-items'}>{this.props.children}</ul>\r\n        </nav>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sidebar;\r\n","import React, {Component} from 'react';\r\nimport { FaChevronDown, FaChevronRight } from 'react-icons/fa';\r\n\r\nclass RenderListComponent extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n      { this.props.clicked ? \r\n        <ul style={{paddingLeft: '0px', listStyle:'none'}}>\r\n          <FaChevronDown /> {this.props.listName} =  [ {  this.props.list.map( (e, i) => <li key={i} style={{marginLeft: '55px'}}>{e}, </li>)} <span style={{marginLeft:'35px'}}>]</span>\r\n        </ul> \r\n        :  \r\n        \r\n        <> <FaChevronRight /> {this.props.listName}  = {'['+this.props.list.map(e => ' '+e) + ' ]'} </>\r\n        \r\n      }\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RenderListComponent;\r\n","import React, { Component } from 'react';\r\nimport { FaChevronDown, FaChevronRight } from 'react-icons/fa';\r\n\r\nclass RenderObjectComponent extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.clicked ? (\r\n          <ul style={{ paddingLeft: '0px', listStyle: 'none' }}>\r\n            <FaChevronDown /> {this.props.objName} = {'{'}{' '}\r\n            {Object.keys(this.props.obj).map((e, i) => (\r\n              <li key={i} style={{ marginLeft: '55px' }}>\r\n                {e} :\r\n                {Array.isArray(this.props.obj[e])\r\n                  ? Array.isArray(this.props.obj[e][0])\r\n                    ? '[' +\r\n                      String(this.props.obj[e].map((lst) => '[' + lst + ']')) +\r\n                      ']'\r\n                    : '[' + String(this.props.obj[e]) + ']'\r\n                  : String(this.props.obj[e])}\r\n                ,\r\n              </li>\r\n            ))}{' '}\r\n            <span style={{ marginLeft: '35px' }}>{'}'}</span>\r\n          </ul>\r\n        ) : (\r\n          <>\r\n            <FaChevronRight /> {this.props.objName} ={' '}\r\n            {'{ ' +\r\n              Object.keys(this.props.obj).map(\r\n                (e) =>\r\n                  ' ' +\r\n                  e +\r\n                  ':' +\r\n                  (Array.isArray(this.props.obj[e])\r\n                    ? Array.isArray(this.props.obj[e][0])\r\n                      ? '[' +\r\n                        String(\r\n                          this.props.obj[e].map((lst) => '[' + lst + ']')\r\n                        ) +\r\n                        ']'\r\n                      : '[' + String(this.props.obj[e]) + ']'\r\n                    : String(this.props.obj[e]))\r\n              ) +\r\n              ' }'}\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RenderObjectComponent;\r\n","import React, { Component } from 'react';\r\nimport DepthFirstSearch from './algorithms/tree-algorithms/DepthFirstSearch';\r\nimport BreathFirstSearch from './algorithms/tree-algorithms/BreadthFirstSearch';\r\nimport createTree from '../graph-builders/tree-builder';\r\nimport Sidebar from './sidebar/Sidebar';\r\nimport RenderListComponent from './sidebar/RenderListComponent';\r\nimport RenderObjectComponent from './sidebar/RenderObjectComponent';\r\n\r\nclass TreeTraversals extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pause: false,\r\n      stop: false,\r\n      speed: 1,\r\n      nodePath: [],\r\n      runningAlg: '',\r\n      queue: [],\r\n      stack: [],\r\n      currentNode: null,\r\n      visitedMap: {},\r\n      child: null,\r\n      clicked: [false, false, false, false],\r\n    };\r\n    this.adjList = {\r\n      a: ['b', 'c', 'd'],\r\n      b: ['e', 'h', 'i'],\r\n      c: ['j', 'r'],\r\n      d: ['s', 'u'],\r\n      e: ['f'],\r\n      f: ['g'],\r\n      g: [],\r\n      h: ['o'],\r\n      i: [],\r\n      j: ['k'],\r\n      k: ['l', 'q'],\r\n      l: ['m', 'n', 'p'],\r\n      m: [],\r\n      n: [],\r\n      o: [],\r\n      p: [],\r\n      q: [],\r\n      r: [],\r\n      s: ['t'],\r\n      t: [],\r\n      u: ['v'],\r\n      v: ['w'],\r\n      w: ['x'],\r\n      x: ['y', 'z'],\r\n      y: [],\r\n      z: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    createTree(this.adjList);\r\n    this.tree = document.getElementById('graph-container');\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    let svg = document.getElementById('tree-svg');\r\n    if (this.tree.hasChildNodes()) this.tree.removeChild(svg);\r\n    this.reset();\r\n  }\r\n  buildNodePath = (nodePath) => {\r\n    this.setState({ nodePath });\r\n  };\r\n\r\n  updateQueue = (q) => {\r\n    this.setState({ queue: q });\r\n  };\r\n\r\n  updateStack = (s) => {\r\n    this.setState({ stack: s });\r\n  };\r\n\r\n  getPauseStatus = () => this.state.pause;\r\n  getStopStatus = () => this.state.stop;\r\n  getSpeedRequest = () => Number(this.state.speed) + 0.1;\r\n\r\n  reset = () => {\r\n    Object.keys(this.adjList).forEach((e) => {\r\n      let nodeElement = document.getElementById(e);\r\n      if (nodeElement) {\r\n        nodeElement.classList.remove('node-complete-tree');\r\n      }\r\n      let linkElement = document.getElementById(e + 'link');\r\n      if (linkElement) {\r\n        linkElement.classList.remove('link-traversed');\r\n      }\r\n    });\r\n    for (let i = 1; i < 12; i++) {\r\n      let dfsPseduoElement = document.getElementById('dfs-' + i);\r\n      if (dfsPseduoElement) dfsPseduoElement.classList = '';\r\n      let bfsPseduoElement = document.getElementById('bfs-' + i);\r\n      if (bfsPseduoElement) bfsPseduoElement.classList = '';\r\n    }\r\n    this.setState({\r\n      nodePath: [],\r\n      visitedMap: {},\r\n      queue: [],\r\n      currentNode: null,\r\n      child: null,\r\n    });\r\n    if (this.state.stop) {\r\n      this.setState({\r\n        stop: false,\r\n        pause: false,\r\n        runningAlg: '',\r\n      });\r\n    }\r\n  };\r\n\r\n  setRunningAlg = (alg) => {\r\n    this.reset();\r\n    this.setState({ runningAlg: alg });\r\n  };\r\n\r\n  updateStopState = async (val) => {\r\n    await this.setState({ stop: val });\r\n  };\r\n\r\n  updateCurrentNode = async (node) => {\r\n    await this.setState({ currentNode: node });\r\n  };\r\n\r\n  updateVisitedMap = async (map) => {\r\n    await this.setState({ visitedMap: map });\r\n  };\r\n  updateChild = async (child) => {\r\n    await this.setState({ child });\r\n  };\r\n\r\n  toggleClicked = (i) => {\r\n    let a = this.state.clicked.slice();\r\n    a[i] = !a[i];\r\n    this.setState({\r\n      clicked: a,\r\n    });\r\n  };\r\n\r\n  renderBfsPseudocode() {\r\n    const indentation = (num) => {\r\n      return num * 20;\r\n    };\r\n    return (\r\n      <div>\r\n        <div id={'bfs-1'}>\r\n          1<span style={{ marginLeft: indentation(1) }}>BFS(G, root)</span>\r\n        </div>\r\n        <div id={'bfs-2'}>\r\n          2<span style={{ marginLeft: indentation(2) }}>let Q be a queue</span>\r\n        </div>\r\n        <div id={'bfs-3'}>\r\n          3\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            let V be a map with all nodes as keys and values of false\r\n          </span>\r\n        </div>\r\n        <div id={'bfs-4'}>\r\n          4\r\n          <span style={{ marginLeft: indentation(2) }}>set V[root] = true</span>\r\n        </div>\r\n        <div id={'bfs-5'}>\r\n          5<span style={{ marginLeft: indentation(2) }}>Q.enqueue(root)</span>\r\n        </div>\r\n        <div id={'bfs-6'}>\r\n          6\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            while Q is not empty\r\n          </span>\r\n        </div>\r\n        <div id={'bfs-7'}>\r\n          7\r\n          <span style={{ marginLeft: indentation(3) }}>\r\n            current := Q.dequeue()\r\n          </span>\r\n        </div>\r\n        <div id={'bfs-8'}>\r\n          8\r\n          <span style={{ marginLeft: indentation(3) }}>\r\n            for child of current\r\n          </span>\r\n        </div>\r\n        <div id={'bfs-9'}>\r\n          9\r\n          <span style={{ marginLeft: indentation(4) }}>\r\n            if child is not labeled as discovered then\r\n          </span>\r\n        </div>\r\n        <div id={'bfs-10'}>\r\n          10\r\n          <span style={{ marginLeft: indentation(5) }}>\r\n            set V[child] = true\r\n          </span>\r\n        </div>\r\n        <div id={'bfs-11'}>\r\n          11\r\n          <span style={{ marginLeft: indentation(5) }}> Q.enqueue(child)</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderDfsPseudocode() {\r\n    const indentation = (num) => {\r\n      return num * 20;\r\n    };\r\n    return (\r\n      <div>\r\n        <div id={'dfs-1'}>\r\n          1<span style={{ marginLeft: indentation(1) }}>DFS(G, root)</span>\r\n        </div>\r\n        <div id={'dfs-2'}>\r\n          2<span style={{ marginLeft: indentation(2) }}>let S be a stack</span>\r\n        </div>\r\n        <div id={'dfs-3'}>\r\n          3\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            let V be a map with all nodes as keys and values of false\r\n          </span>\r\n        </div>\r\n        <div id={'dfs-4'}>\r\n          4\r\n          <span style={{ marginLeft: indentation(2) }}>set V[root] = true</span>\r\n        </div>\r\n        <div id={'dfs-5'}>\r\n          5<span style={{ marginLeft: indentation(2) }}>S.push(root)</span>\r\n        </div>\r\n        <div id={'dfs-6'}>\r\n          6\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            while S is not empty\r\n          </span>\r\n        </div>\r\n        <div id={'dfs-7'}>\r\n          7\r\n          <span style={{ marginLeft: indentation(3) }}>current := S.pop()</span>\r\n        </div>\r\n        <div id={'dfs-8'}>\r\n          8\r\n          <span style={{ marginLeft: indentation(3) }}>\r\n            for child of current\r\n          </span>\r\n        </div>\r\n        <div id={'dfs-9'}>\r\n          9\r\n          <span style={{ marginLeft: indentation(4) }}>\r\n            if child is not labeled as discovered then\r\n          </span>\r\n        </div>\r\n        <div id={'dfs-10'}>\r\n          10\r\n          <span style={{ marginLeft: indentation(5) }}>\r\n            set V[child] = true\r\n          </span>\r\n        </div>\r\n        <div id={'dfs-11'}>\r\n          11<span style={{ marginLeft: indentation(5) }}> S.push(child)</span>\r\n        </div>\r\n        <div></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={'row'}>\r\n        <div className={'col-4'} id={'graph-container'}>\r\n          <DepthFirstSearch\r\n            g={this.adjList}\r\n            pause={this.state.pause}\r\n            stop={this.state.stop}\r\n            speed={this.state.speed}\r\n            runningAlg={this.state.runningAlg}\r\n            setRunningAlg={this.setRunningAlg}\r\n            buildNodePath={this.buildNodePath}\r\n            updateStack={this.updateStack}\r\n            updateCurrentNode={this.updateCurrentNode}\r\n            updateVisitedMap={this.updateVisitedMap}\r\n            updateChild={this.updateChild}\r\n          />\r\n          <div className={'divider'}></div>\r\n          <BreathFirstSearch\r\n            g={this.adjList}\r\n            pause={this.state.pause}\r\n            stop={this.state.stop}\r\n            speed={this.state.speed}\r\n            runningAlg={this.state.runningAlg}\r\n            setRunningAlg={this.setRunningAlg}\r\n            buildNodePath={this.buildNodePath}\r\n            updateQueue={this.updateQueue}\r\n            updateCurrentNode={this.updateCurrentNode}\r\n            updateVisitedMap={this.updateVisitedMap}\r\n            updateChild={this.updateChild}\r\n          />\r\n          <div className={'divider'}></div>\r\n          <button\r\n            id={'reset-button'}\r\n            onClick={async () => {\r\n              await this.setState({ pause: false, stop: true });\r\n              this.reset();\r\n            }}\r\n          >\r\n            Reset\r\n          </button>\r\n          <div className={'divider'}></div>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({ pause: !this.state.pause });\r\n            }}\r\n          >\r\n            {this.state.pause ? 'UnPause' : 'Pause'}\r\n          </button>\r\n          <form onSubmit={(event) => event.preventDefault()}>\r\n            <label>\r\n              Speed:\r\n              <input\r\n                style={{ width: '50px' }}\r\n                type=\"number\"\r\n                value={this.state.speed}\r\n                onChange={(event) =>\r\n                  this.setState({\r\n                    speed: event.target.value,\r\n                  })\r\n                }\r\n              />\r\n            </label>\r\n          </form>\r\n        </div>\r\n\r\n        <div className={'col-4'}>\r\n          <div className={'row'}>\r\n            {this.state.runningAlg === ''\r\n              ? ''\r\n              : this.state.runningAlg === 'bfs'\r\n              ? this.renderBfsPseudocode()\r\n              : this.renderDfsPseudocode()}\r\n          </div>\r\n        </div>\r\n\r\n        <div className={'col-4'}>\r\n          <Sidebar showButton={this.state.runningAlg !== ''}>\r\n            {this.state.currentNode ? (\r\n              <li> current = {this.state.currentNode} </li>\r\n            ) : (\r\n              ''\r\n            )}\r\n            {this.state.child ? <li> child = {this.state.child} </li> : ''}\r\n\r\n            <li onClick={() => this.toggleClicked(0)}>\r\n              <RenderListComponent\r\n                list={this.state.nodePath}\r\n                listName={'Node Path'}\r\n                clicked={this.state.clicked[0]}\r\n              />\r\n            </li>\r\n            <li onClick={() => this.toggleClicked(1)}>\r\n              {this.state.runningAlg === 'bfs' ? (\r\n                <RenderListComponent\r\n                  list={this.state.queue}\r\n                  listName={'Q'}\r\n                  clicked={this.state.clicked[1]}\r\n                />\r\n              ) : this.state.runningAlg === 'dfs' ? (\r\n                <RenderListComponent\r\n                  list={this.state.stack}\r\n                  listName={'S'}\r\n                  clicked={this.state.clicked[1]}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </li>\r\n            <li onClick={() => this.toggleClicked(2)}>\r\n              {Object.keys(this.state.visitedMap).length > 0 ? (\r\n                <RenderObjectComponent\r\n                  obj={this.state.visitedMap}\r\n                  objName={'V'}\r\n                  clicked={this.state.clicked[2]}\r\n                />\r\n              ) : (\r\n                ''\r\n              )}\r\n            </li>\r\n            <li onClick={() => this.toggleClicked(3)}>\r\n              {this.adjList ? (\r\n                <RenderObjectComponent\r\n                  obj={this.adjList}\r\n                  objName={'tree'}\r\n                  clicked={this.state.clicked[3]}\r\n                />\r\n              ) : (\r\n                ''\r\n              )}\r\n            </li>\r\n          </Sidebar>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TreeTraversals;\r\n","import * as d3 from 'd3';\r\n\r\nfunction createGraph() {\r\n  let nodes = [\r\n    { id: 'a', level: 2 },\r\n    { id: 'b', level: 2 },\r\n    { id: 'c', level: 2 },\r\n    { id: 'd', level: 2 },\r\n    { id: 'e', level: 2 },\r\n    { id: 'f', level: 2 },\r\n    { id: 'g', level: 2 },\r\n    { id: 'h', level: 2 },\r\n    { id: 'i', level: 2 },\r\n    { id: 'j', level: 2 },\r\n    { id: 'k', level: 2 },\r\n    { id: 'l', level: 2 },\r\n    { id: 'm', level: 2 },\r\n    { id: 'n', level: 2 },\r\n    { id: 'o', level: 2 },\r\n    { id: 'p', level: 2 },\r\n    { id: 'q', level: 2 },\r\n    { id: 's', level: 2 },\r\n    { id: 'target', level: 1 },\r\n    { id: 't', level: 2 },\r\n    { id: 'source', level: 1 },\r\n  ];\r\n\r\n  let strength = 0.001;\r\n  let links = [\r\n    { target: 'a', source: 'b', strength: strength, cost: 10 },\r\n    { target: 'a', source: 'c', strength: strength, cost: 7 },\r\n    { target: 'a', source: 'd', strength: 20 * strength, cost: 8 },\r\n    { target: 'b', source: 'd', strength: 20 * strength, cost: 9 },\r\n    { target: 'b', source: 'e', strength: strength, cost: 11 },\r\n    { target: 'e', source: 'c', strength: 20 * strength, cost: 9 },\r\n    { target: 'f', source: 'c', strength: 0.05, cost: 7 },\r\n    { target: 'f', source: 'b', strength: 0.05, cost: 8 },\r\n    { target: 'f', source: 'a', strength: 0.05, cost: 6 },\r\n    { target: 'f', source: 'e', strength: 0.05, cost: 6 },\r\n    { target: 'a', source: 'g', strength: 0.26, cost: 3 },\r\n    { target: 'h', source: 'g', strength: 0.26, cost: 3 },\r\n    { target: 'c', source: 'h', strength: 0.6, cost: 2 },\r\n    { target: 'i', source: 'g', strength: 0.026, cost: 4 },\r\n    { target: 'a', source: 'i', strength: strength, cost: 5 },\r\n    { target: 'd', source: 'i', strength: 20 * strength, cost: 10 },\r\n    { target: 'j', source: 'b', strength: strength, cost: 8 },\r\n    { target: 'j', source: 'e', strength: strength, cost: 10 },\r\n    { target: 'i', source: 'k', strength: 15 * strength, cost: 14 },\r\n    { target: 'c', source: 'k', strength: 20 * strength, cost: 5 },\r\n    { target: 'e', source: 'k', strength: 15 * strength, cost: 10 },\r\n    { target: 'g', source: 'k', strength: 15 * strength, cost: 10 },\r\n    { target: 'l', source: 'j', strength: 20 * strength, cost: 10 },\r\n    { target: 'l', source: 'd', strength: 20 * strength, cost: 9 },\r\n    { target: 'l', source: 'b', strength: 20 * strength, cost: 8 },\r\n    { target: 'm', source: 'e', strength: 20 * strength, cost: 6 },\r\n    { target: 'm', source: 'k', strength: 20 * strength, cost: 8 },\r\n    { target: 'm', source: 'j', strength: 20 * strength, cost: 11 },\r\n    { target: 'n', source: 'i', strength: 40 * strength, cost: 7 },\r\n    { target: 'n', source: 'k', strength: 50 * strength, cost: 6 },\r\n    { target: 'o', source: 'l', strength: 40 * strength, cost: 5 },\r\n    { target: 'o', source: 'j', strength: 40 * strength, cost: 6 },\r\n    { target: 'p', source: 'm', strength: 40 * strength, cost: 7 },\r\n    { target: 'p', source: 'k', strength: 40 * strength, cost: 6 },\r\n    { target: 'q', source: 'd', strength: 80 * strength, cost: 5 },\r\n    { target: 'q', source: 'i', strength: 40 * strength, cost: 8 },\r\n    { target: 's', source: 'b', strength: 100 * strength, cost: 4 },\r\n    { target: 's', source: 'e', strength: 40 * strength, cost: 9 },\r\n    { target: 's', source: 'j', strength: 40 * strength, cost: 5 },\r\n    { target: 'target', source: 'q', strength: 100 * strength, cost: 3 },\r\n    { target: 'target', source: 'd', strength: 100 * strength, cost: 4 },\r\n    { target: 'source', source: 'm', strength: strength, cost: 6 },\r\n    { target: 'source', source: 'j', strength: 20 * strength, cost: 15 },\r\n    { target: 'source', source: 'p', strength: 20 * strength, cost: 9 },\r\n    { target: 't', source: 'd', strength: 100 * strength, cost: 6 },\r\n    { target: 't', source: 'l', strength: 100 * strength, cost: 4 },\r\n  ];\r\n  const margin = { top: 20, right: 50, bottom: 200, left: 100 },\r\n    width = 800 - margin.left - margin.right,\r\n    height = 800 - margin.top - margin.bottom;\r\n\r\n  function getNodeColor(node) {\r\n    return node.level === 1 ? 'red' : 'gray';\r\n  }\r\n\r\n  var svg = d3\r\n    .select('#graph-container')\r\n    .append('svg')\r\n    .attr('width', width)\r\n    .attr('height', height)\r\n    .attr('id', 'graph-svg')\r\n    .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')')\r\n    .attr('class', 'graph');\r\n  // simulation setup with all forces\r\n  var linkForce = d3\r\n    .forceLink()\r\n    .id(function (link) {\r\n      return link.id;\r\n    })\r\n    .strength(function (link) {\r\n      return link.strength / 0.5;\r\n    });\r\n\r\n  var simulation = d3\r\n    .forceSimulation()\r\n    .force('link', linkForce)\r\n    .force('charge', d3.forceManyBody().strength(-170))\r\n    .force('center', d3.forceCenter(width / 2, height / 2));\r\n\r\n  var linkElements = svg\r\n    .append('g')\r\n    .attr('class', 'links')\r\n    .selectAll('line')\r\n    .data(links)\r\n    .enter()\r\n    .append('line')\r\n    .attr('stroke-width', 1)\r\n    .attr('stroke', 'rgba(50, 50, 50, 0.2)')\r\n    .attr('id', (d) => {\r\n      if (d.source < d.target) {\r\n        return d.source + '-' + d.target;\r\n      }\r\n      return d.target + '-' + d.source;\r\n    });\r\n\r\n  var linkTextElements = svg\r\n    .append('g')\r\n    .attr('class', 'link_texts')\r\n    .selectAll('text')\r\n    .data(links)\r\n    .enter()\r\n    .append('text')\r\n    .text(function (link) {\r\n      return link.cost;\r\n    })\r\n    .attr('font-size', 15)\r\n    .attr('dx', 0)\r\n    .attr('dy', 0);\r\n\r\n  var nodeElements = svg\r\n    .append('g')\r\n    .attr('class', 'node')\r\n    .selectAll('circle')\r\n    .data(nodes)\r\n    .enter()\r\n    .append('circle')\r\n    .attr('r', 10)\r\n    .attr('fill', getNodeColor)\r\n    .attr('id', (d) => d.id);\r\n\r\n  var nodeTextElements = svg\r\n    .append('g')\r\n    .attr('class', 'texts')\r\n    .selectAll('text')\r\n    .data(nodes)\r\n    .enter()\r\n    .append('text')\r\n    .text(function (node) {\r\n      return node.id;\r\n    })\r\n    .attr('font-size', 15)\r\n    .attr('dx', 13)\r\n    .attr('dy', 0);\r\n\r\n  simulation.nodes(nodes).on('tick', () => {\r\n    nodeElements\r\n      .attr('cx', function (node) {\r\n        return node.x;\r\n      })\r\n      .attr('cy', function (node) {\r\n        return node.y;\r\n      });\r\n    nodeTextElements\r\n      .attr('x', function (node) {\r\n        return node.x;\r\n      })\r\n      .attr('y', function (node) {\r\n        return node.y;\r\n      });\r\n\r\n    linkElements\r\n      .attr('x1', function (link) {\r\n        return link.source.x;\r\n      })\r\n      .attr('y1', function (link) {\r\n        return link.source.y;\r\n      })\r\n      .attr('x2', function (link) {\r\n        return link.target.x;\r\n      })\r\n      .attr('y2', function (link) {\r\n        return link.target.y;\r\n      });\r\n\r\n    linkTextElements\r\n      .attr('x', function (link) {\r\n        return (link.source.x + link.target.x) / 2;\r\n      })\r\n      .attr('y', function (link) {\r\n        return (link.source.y + link.target.y) / 2;\r\n      });\r\n  });\r\n\r\n  simulation.force('link').links(links);\r\n}\r\n\r\nexport default createGraph;\r\n","import React, { Component } from 'react';\r\n\r\nclass Prim extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.unMounting = false;\r\n  }\r\n  componentWillUnmount() {\r\n    this.unMounting = true;\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.runningAlg === 'prim' && this.props.runningAlg !== 'prim') {\r\n      this.unMounting = true;\r\n    }\r\n  }\r\n  highlightLine(lineNum) {\r\n    let el = document.getElementById('prim-' + lineNum);\r\n    if (el) el.classList.add('active-code-line');\r\n  }\r\n  removeHighlightedLine(lineNum) {\r\n    let el = document.getElementById('prim-' + lineNum);\r\n    if (el) el.classList.remove('active-code-line');\r\n  }\r\n  prim = async () => {\r\n    let root = this.props.root;\r\n    let costMap = {};\r\n    let parents = {};\r\n    let mstSet = {};\r\n    Object.keys(this.props.g).forEach((k) => {\r\n      costMap[k] = Infinity;\r\n      parents[k] = null;\r\n      mstSet[k] = false;\r\n    });\r\n    this.highlightLine(1);\r\n    await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\r\n    await this.checkPauseStatus();\r\n    if (this.props.stop) {\r\n      return;\r\n    }\r\n    if (this.unMounting) return;\r\n    this.removeHighlightedLine(1);\r\n\r\n    this.highlightLine(2);\r\n    await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\r\n    await this.checkPauseStatus();\r\n    if (this.props.stop) {\r\n      return;\r\n    }\r\n    if (this.unMounting) return;\r\n    this.removeHighlightedLine(2);\r\n    this.props.updateDistances(costMap);\r\n\r\n    this.highlightLine(3);\r\n    await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\r\n    await this.checkPauseStatus();\r\n    if (this.props.stop) {\r\n      return;\r\n    }\r\n    if (this.unMounting) return;\r\n    this.removeHighlightedLine(3);\r\n    this.props.updateParents(parents);\r\n\r\n    this.highlightLine(4);\r\n    await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\r\n    await this.checkPauseStatus();\r\n    if (this.props.stop) {\r\n      return;\r\n    }\r\n    if (this.unMounting) return;\r\n    this.removeHighlightedLine(4);\r\n    this.props.updatePrimMstSet(mstSet);\r\n\r\n    this.highlightLine(5);\r\n    await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\r\n    await this.checkPauseStatus();\r\n    if (this.props.stop) {\r\n      return;\r\n    }\r\n    if (this.unMounting) return;\r\n    this.removeHighlightedLine(5);\r\n    parents[root] = -1;\r\n\r\n    this.highlightLine(6);\r\n    await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\r\n    await this.checkPauseStatus();\r\n    if (this.props.stop) {\r\n      return;\r\n    }\r\n    if (this.unMounting) return;\r\n    this.removeHighlightedLine(6);\r\n    costMap[root] = 0;\r\n\r\n    let activeLinks = [];\r\n    for (let i = 0; i < Object.keys(this.props.g).length; i++) {\r\n      this.highlightLine(7);\r\n      await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\r\n      await this.checkPauseStatus();\r\n      if (this.props.stop) {\r\n        return;\r\n      }\r\n      if (this.unMounting) return;\r\n      this.removeHighlightedLine(7);\r\n\r\n      this.highlightLine(8);\r\n      await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\r\n      await this.checkPauseStatus();\r\n      if (this.props.stop) {\r\n        return;\r\n      }\r\n      if (this.unMounting) return;\r\n      this.removeHighlightedLine(8);\r\n      let minNode = this.findMin(costMap, mstSet);\r\n      this.props.updatePrimMinNode(minNode);\r\n\r\n      this.highlightLine(9);\r\n      mstSet[minNode] = true;\r\n      let minNodeEl = this.activateCurrentNode(minNode);\r\n\r\n      await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\r\n      await this.checkPauseStatus();\r\n      if (this.props.stop) {\r\n        this.cleanUpActiveLinksAndCurrentNode(activeLinks, minNode);\r\n        return;\r\n      }\r\n      if (this.unMounting) return;\r\n      this.removeHighlightedLine(9);\r\n      this.props.updatePrimMstSet(mstSet);\r\n\r\n      for (let [cost, neighbor] of this.props.g[minNode]) {\r\n        this.highlightLine(10);\r\n        await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\r\n        await this.checkPauseStatus();\r\n        if (this.props.stop) {\r\n          this.cleanUpActiveLinksAndCurrentNode(activeLinks, minNode);\r\n          return;\r\n        }\r\n        if (this.unMounting) return;\r\n        this.removeHighlightedLine(10);\r\n\r\n        this.props.updateNeighbor(neighbor, cost);\r\n\r\n        this.highlightLine(11);\r\n        await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\r\n        await this.checkPauseStatus();\r\n        if (this.props.stop) {\r\n          this.cleanUpActiveLinksAndCurrentNode(activeLinks, minNode);\r\n          return;\r\n        }\r\n        if (this.unMounting) return;\r\n        this.removeHighlightedLine(11);\r\n\r\n        if (mstSet[neighbor] === false) {\r\n          this.highlightLine(12);\r\n          await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\r\n          await this.checkPauseStatus();\r\n          if (this.props.stop) {\r\n            this.cleanUpActiveLinksAndCurrentNode(activeLinks, minNode);\r\n            return;\r\n          }\r\n          if (this.unMounting) return;\r\n          this.removeHighlightedLine(12);\r\n\r\n          if (costMap[neighbor] > cost) {\r\n            this.highlightLine(13);\r\n            let el = this.deActivateOldLink(\r\n              neighbor,\r\n              parents[neighbor],\r\n              this.props.speed\r\n            );\r\n            if (el) activeLinks.filter((e) => e !== el);\r\n\r\n            this.activateLink(minNode, neighbor, activeLinks);\r\n            await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\r\n            await this.checkPauseStatus();\r\n            if (this.props.stop) {\r\n              this.cleanUpActiveLinksAndCurrentNode(activeLinks, minNode);\r\n              return;\r\n            }\r\n            if (this.unMounting) return;\r\n            this.removeHighlightedLine(13);\r\n            costMap[neighbor] = cost;\r\n            this.props.updateDistances(costMap);\r\n\r\n            this.highlightLine(14);\r\n            await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\r\n            await this.checkPauseStatus();\r\n            if (this.props.stop) {\r\n              this.cleanUpActiveLinksAndCurrentNode(activeLinks, minNode);\r\n              return;\r\n            }\r\n            if (this.unMounting) return;\r\n            this.removeHighlightedLine(14);\r\n            parents[neighbor] = minNode;\r\n            this.props.updateParents(parents);\r\n          }\r\n        }\r\n        this.props.updateNeighbor(null, null);\r\n      }\r\n      this.props.updatePrimMinNode(null);\r\n      this.updateCurrentNodeToBeVisited(minNodeEl);\r\n    }\r\n    // this.calculateCumulativeDistance(costMap, parents);\r\n  };\r\n\r\n  findMin(key, mstSet) {\r\n    let min = Infinity;\r\n    let minNode = null;\r\n    for (let node of Object.keys(key)) {\r\n      if (key[node] < min && mstSet[node] === false) {\r\n        min = key[node];\r\n        minNode = node;\r\n      }\r\n    }\r\n    return minNode;\r\n  }\r\n\r\n  activateCurrentNode(currentNode) {\r\n    let currentNodeElement = document.getElementById(currentNode);\r\n    currentNodeElement.classList.add('current-node-of-interest');\r\n    return currentNodeElement;\r\n  }\r\n\r\n  activateLink(currentNode, neighborNode, activeLinks) {\r\n    let linkString =\r\n      currentNode < neighborNode\r\n        ? currentNode + '-' + neighborNode\r\n        : neighborNode + '-' + currentNode;\r\n\r\n    let linkOfInterestElement = document.getElementById(linkString);\r\n    if (linkOfInterestElement) {\r\n      linkOfInterestElement.classList.add('link-traversed');\r\n      activeLinks.push(linkOfInterestElement);\r\n    }\r\n    return linkOfInterestElement;\r\n  }\r\n\r\n  updateCurrentNodeToBeVisited(currentNodeElement) {\r\n    currentNodeElement.classList.remove('current-node-of-interest');\r\n    currentNodeElement.classList.add('node-complete-tree');\r\n  }\r\n\r\n  async deActivateOldLink(node, oldChild, getSpeedRequest, activeLinks) {\r\n    let linkString =\r\n      node < oldChild ? node + '-' + oldChild : oldChild + '-' + node;\r\n    let el = document.getElementById(linkString);\r\n    if (el) {\r\n      el.classList.add('fade-out-link');\r\n      await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\r\n      el.classList.remove('link-traversed', 'fade-out-link');\r\n      return el;\r\n    }\r\n  }\r\n\r\n  async checkPauseStatus() {\r\n    while (this.props.pause) {\r\n      await new Promise((r) => setTimeout(r, 1000));\r\n      continue;\r\n    }\r\n  }\r\n\r\n  cleanUpActiveLinksAndCurrentNode(activeLinks, currentNode) {\r\n    let currentNodeElement = document.getElementById(currentNode);\r\n    if (currentNodeElement) {\r\n      currentNodeElement.classList.remove('current-node-of-interest');\r\n    }\r\n    if (activeLinks.length > 0) {\r\n      this.removeActiveLinks(activeLinks);\r\n    }\r\n  }\r\n\r\n  removeActiveLinks(activeLinks) {\r\n    activeLinks.forEach((e) => {\r\n      if (e) {\r\n        e.classList.remove('fade-out-link', 'link-traversed');\r\n      }\r\n    });\r\n    return [];\r\n  }\r\n\r\n  // calculateCumulativeDistance(costMap, parents) {\r\n  //   let cumCostMap = {};\r\n  //   for (let node of Object.keys(costMap)) {\r\n  //     if (parents[node] == null) {\r\n  //       cumCostMap[node] = '';\r\n  //       continue;\r\n  //     }\r\n  //     let currentNode = parents[node];\r\n  //     let cost = costMap[node];\r\n  //     while (currentNode !== -1) {\r\n  //       cost += costMap[currentNode];\r\n  //       currentNode = parents[currentNode];\r\n  //     }\r\n  //     cumCostMap[node] = cost;\r\n  //   }\r\n  //   return cumCostMap;\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      <button\r\n        className=\"graph-button\"\r\n        onClick={async () => {\r\n          if (this.unMounting) {\r\n            this.unMounting = false;\r\n          }\r\n          await this.props.setRunningAlg('prim');\r\n          this.prim();\r\n        }}\r\n      >\r\n        Prim\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Prim;\r\n","import React, { Component } from 'react';\r\nimport createGraph from '../graph-builders/undirected-graph-builder';\r\nimport Dijkstra from './algorithms/graph-algorithms/Dijkstra';\r\nimport Prim from './algorithms/graph-algorithms/Prim';\r\nimport Sidebar from './sidebar/Sidebar';\r\nimport RenderListComponent from './sidebar/RenderListComponent';\r\nimport RenderObjectComponent from './sidebar/RenderObjectComponent';\r\nclass UndirectedGraphAlgorithms extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pause: false,\r\n      stop: false,\r\n      speed: 1,\r\n      distances: {},\r\n      parents: {},\r\n      runningAlg: '',\r\n      priorityQueue: null,\r\n      mstSet: {},\r\n      clicked: [false, false, false, false, false, false],\r\n      node: null,\r\n      neighbor: null,\r\n      neighborCost: null,\r\n      minNode: null,\r\n      potentialScore: null,\r\n    };\r\n    this.adjList = {\r\n      a: [\r\n        [3, 'g'],\r\n        [5, 'i'],\r\n        [7, 'c'],\r\n        [6, 'f'],\r\n        [10, 'b'],\r\n        [8, 'd'],\r\n      ],\r\n      b: [\r\n        [10, 'a'],\r\n        [8, 'f'],\r\n        [11, 'e'],\r\n        [4, 's'],\r\n        [8, 'j'],\r\n        [8, 'l'],\r\n        [9, 'd'],\r\n      ],\r\n      c: [\r\n        [5, 'k'],\r\n        [2, 'h'],\r\n        [9, 'e'],\r\n        [7, 'f'],\r\n        [7, 'a'],\r\n      ],\r\n      d: [\r\n        [5, 'q'],\r\n        [10, 'i'],\r\n        [8, 'a'],\r\n        [9, 'b'],\r\n        [9, 'l'],\r\n        [6, 't'],\r\n        [4, 'target'],\r\n      ],\r\n      e: [\r\n        [6, 'm'],\r\n        [10, 'j'],\r\n        [9, 's'],\r\n        [11, 'b'],\r\n        [6, 'f'],\r\n        [9, 'c'],\r\n        [10, 'k'],\r\n      ],\r\n      f: [\r\n        [6, 'a'],\r\n        [7, 'c'],\r\n        [6, 'e'],\r\n        [8, 'b'],\r\n      ],\r\n      g: [\r\n        [3, 'h'],\r\n        [10, 'k'],\r\n        [4, 'i'],\r\n        [3, 'a'],\r\n      ],\r\n      h: [\r\n        [2, 'c'],\r\n        [3, 'g'],\r\n      ],\r\n      i: [\r\n        [8, 'q'],\r\n        [10, 'd'],\r\n        [5, 'a'],\r\n        [4, 'g'],\r\n        [14, 'k'],\r\n        [7, 'n'],\r\n      ],\r\n      j: [\r\n        [6, 'o'],\r\n        [10, 'l'],\r\n        [8, 'b'],\r\n        [5, 's'],\r\n        [10, 'e'],\r\n        [11, 'm'],\r\n        [15, 'source'],\r\n      ],\r\n      k: [\r\n        [6, 'n'],\r\n        [14, 'i'],\r\n        [10, 'g'],\r\n        [5, 'c'],\r\n        [10, 'e'],\r\n        [8, 'm'],\r\n        [6, 'p'],\r\n      ],\r\n      l: [\r\n        [4, 't'],\r\n        [9, 'd'],\r\n        [8, 'b'],\r\n        [10, 'j'],\r\n        [5, 'o'],\r\n      ],\r\n      m: [\r\n        [8, 'k'],\r\n        [6, 'e'],\r\n        [11, 'j'],\r\n        [6, 'source'],\r\n        [7, 'p'],\r\n      ],\r\n      n: [\r\n        [6, 'k'],\r\n        [7, 'i'],\r\n      ],\r\n      o: [\r\n        [5, 'l'],\r\n        [6, 'j'],\r\n      ],\r\n      p: [\r\n        [6, 'k'],\r\n        [7, 'm'],\r\n        [9, 'source'],\r\n      ],\r\n      q: [\r\n        [3, 'target'],\r\n        [8, 'i'],\r\n        [5, 'd'],\r\n      ],\r\n      s: [\r\n        [9, 'e'],\r\n        [4, 'b'],\r\n        [5, 'j'],\r\n      ],\r\n      t: [\r\n        [6, 'd'],\r\n        [4, 'l'],\r\n      ],\r\n      target: [\r\n        [3, 'q'],\r\n        [4, 'd'],\r\n      ],\r\n      source: [\r\n        [9, 'p'],\r\n        [6, 'm'],\r\n        [15, 'j'],\r\n      ],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    createGraph();\r\n    this.graph = document.getElementById('graph-container');\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    let svg = document.getElementById('graph-svg');\r\n    if (this.graph.hasChildNodes()) this.graph.removeChild(svg);\r\n    this.reset();\r\n  }\r\n\r\n  // updateDijkstraData = async (distances, parents) => {\r\n  //   await this.setState({\r\n  //     dijkstraDistances: distances,\r\n  //     parents,\r\n  //   });\r\n  // };\r\n\r\n  updateDistances = async (distances) => {\r\n    await this.setState({\r\n      distances,\r\n    });\r\n  };\r\n\r\n  updateParents = async (parents) => {\r\n    await this.setState({\r\n      parents,\r\n    });\r\n  };\r\n\r\n  updateNode = async (node) => {\r\n    await this.setState({ node });\r\n  };\r\n  updatePrimMinNode = async (minNode) => {\r\n    await this.setState({ minNode });\r\n  };\r\n  updateNeighbor = async (neighbor, cost) => {\r\n    await this.setState({ neighbor, neighborCost: cost });\r\n  };\r\n  updatePrimMstSet = async (mstSet) => {\r\n    await this.setState({ mstSet });\r\n  };\r\n\r\n  setRunningAlg = async (alg) => {\r\n    this.reset();\r\n    await this.setState({ runningAlg: alg });\r\n  };\r\n\r\n  updatePq = async (a) => {\r\n    await this.setState({ priorityQueue: a });\r\n  };\r\n\r\n  updatePotentialScore = (s) => {\r\n    this.setState({ potentialScore: s });\r\n  };\r\n\r\n  getPauseStatus = () => this.state.pause;\r\n  getStopStatus = () => this.state.stop;\r\n  getSpeedRequest = () => Number(this.state.speed) + 0.1;\r\n  toggleClicked = (i) => {\r\n    let a = this.state.clicked.slice();\r\n    a[i] = !a[i];\r\n    this.setState({\r\n      clicked: a,\r\n    });\r\n  };\r\n  reset = () => {\r\n    Object.keys(this.adjList).forEach((e) => {\r\n      let el = document.getElementById(e);\r\n      if (el) {\r\n        el.classList.remove('node-complete-tree');\r\n        el.classList.remove('current-node-of-interest');\r\n      }\r\n    });\r\n\r\n    for (let i = 1; i < 15; i++) {\r\n      let dijkstraPseduoElement = document.getElementById('dijkstra-' + i);\r\n      if (dijkstraPseduoElement) dijkstraPseduoElement.classList = '';\r\n      let primPseduoElement = document.getElementById('prim-' + i);\r\n      if (primPseduoElement) primPseduoElement.classList = '';\r\n    }\r\n    let lines = document.getElementsByTagName('line');\r\n    for (let line of lines) {\r\n      line.classList = '';\r\n    }\r\n    this.setState({\r\n      distances: {},\r\n      parents: {},\r\n      runningAlg: '',\r\n      minNode: null,\r\n      neighbor: null,\r\n      neighborCost: null,\r\n      mstSet: {},\r\n      clicked: [false, false, false, false, false],\r\n    });\r\n    if (this.state.stop) {\r\n      this.setState({ stop: false, pause: false });\r\n    }\r\n  };\r\n\r\n  renderDijkstraTableData() {\r\n    return Object.keys(this.state.distances).map((key, index) => {\r\n      return (\r\n        <tr key={index}>\r\n          <td>{key}</td>\r\n          <td>{this.state.parents[key]}</td>\r\n          <td>{this.state.distances[key]}</td>\r\n          <td style={{ backgroundColor: index === 0 ? 'yellow' : '' }}>\r\n            {this.state.priorityQueue[index]}\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n  }\r\n\r\n  renderDijkstraHeading() {\r\n    return (\r\n      <tr>\r\n        <th>Node</th>\r\n        <th>Parent</th>\r\n        <th>Distance</th>\r\n        <th>Priority Queue</th>\r\n      </tr>\r\n    );\r\n  }\r\n\r\n  renderPrimTableData() {\r\n    return Object.keys(this.state.distances).map((key, index) => {\r\n      return (\r\n        <tr key={index}>\r\n          <td>{key}</td>\r\n          <td>{this.state.parents[key]}</td>\r\n          <td>{this.state.distances[key]}</td>\r\n        </tr>\r\n      );\r\n    });\r\n  }\r\n\r\n  renderPrimHeading() {\r\n    return (\r\n      <tr>\r\n        <th>Node</th>\r\n        <th>Parent</th>\r\n        <th>Cost</th>\r\n      </tr>\r\n    );\r\n  }\r\n\r\n  renderPrimPseudocode() {\r\n    const indentation = (num) => {\r\n      return num * 20;\r\n    };\r\n    return (\r\n      <div>\r\n        <div id={'prim-1'}>\r\n          1<span style={{ marginLeft: indentation(1) }}>Prim(G, root)</span>\r\n        </div>\r\n        <div id={'prim-2'}>\r\n          2\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            let cost be a map with all nodes as keys and values of Infinity\r\n          </span>\r\n        </div>\r\n        <div id={'prim-3'}>\r\n          3\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            let parents be a map with all nodes as keys and values of null\r\n          </span>\r\n        </div>\r\n        <div id={'prim-4'}>\r\n          4\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            let mstSet be a map with all nodes as keys and values of false\r\n          </span>\r\n        </div>\r\n        <div id={'prim-5'}>\r\n          5\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            set parents[root] = -1\r\n          </span>\r\n        </div>\r\n        <div id={'prim-6'}>\r\n          6\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            set costMap[root] = 0\r\n          </span>\r\n        </div>\r\n        <div id={'prim-7'}>\r\n          7\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            do n times where n is number of nodes\r\n          </span>\r\n        </div>\r\n        <div id={'prim-8'}>\r\n          8\r\n          <span style={{ marginLeft: indentation(3) }}>\r\n            {' '}\r\n            minNode = findMin(cost, mstSet)\r\n          </span>\r\n        </div>\r\n        <div id={'prim-9'}>\r\n          9\r\n          <span style={{ marginLeft: indentation(3) }}>\r\n            {' '}\r\n            set mstSet[minNode] = true\r\n          </span>\r\n        </div>\r\n        <div id={'prim-10'}>\r\n          10\r\n          <span style={{ marginLeft: indentation(3) }}>\r\n            for every neighbor, neighborCost of minNode\r\n          </span>\r\n        </div>\r\n        <div id={'prim-11'}>\r\n          11\r\n          <span style={{ marginLeft: indentation(4) }}>\r\n            if mstSet[neighbor] is false\r\n          </span>\r\n        </div>\r\n        <div id={'prim-12'}>\r\n          12\r\n          <span style={{ marginLeft: indentation(5) }}>\r\n            if cost[neighbor] {'>'} cost\r\n          </span>\r\n        </div>\r\n        <div id={'prim-13'}>\r\n          13\r\n          <span style={{ marginLeft: indentation(6) }}>\r\n            set cost[neighbor] = cost{' '}\r\n          </span>\r\n        </div>\r\n        <div id={'prim-14'}>\r\n          14\r\n          <span style={{ marginLeft: indentation(6) }}>\r\n            set parents[neighbor] = minNode{' '}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  renderDijkstraPseudocode() {\r\n    const indentation = (num) => {\r\n      return num * 20;\r\n    };\r\n    return (\r\n      <div>\r\n        <div id={'dijkstra-1'}>\r\n          1\r\n          <span style={{ marginLeft: indentation(1) }}>\r\n            Dijkstra(G, source, target)\r\n          </span>\r\n        </div>\r\n        <div id={'dijkstra-2'}>\r\n          2\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            let pq be a Priority Queue (min-heap)\r\n          </span>\r\n        </div>\r\n        <div id={'dijkstra-3'}>\r\n          3\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            let parents be a map with all nodes as keys and values of null\r\n          </span>\r\n        </div>\r\n        <div id={'dijkstra-4'}>\r\n          4\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            let distances be a map with all nodes as keys and values of Infinity\r\n          </span>\r\n        </div>\r\n        <div id={'dijkstra-5'}>\r\n          5\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            set distances[source] = 0\r\n          </span>\r\n        </div>\r\n        <div id={'dijkstra-6'}>\r\n          6\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            insert root at cost 0 into pq\r\n          </span>\r\n        </div>\r\n        <div id={'dijkstra-7'}>\r\n          7\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            while pq is not empty\r\n          </span>\r\n        </div>\r\n        <div id={'dijkstra-8'}>\r\n          8\r\n          <span style={{ marginLeft: indentation(3) }}>\r\n            current = pq.removeRoot()\r\n          </span>\r\n        </div>\r\n        <div id={'dijkstra-9'}>\r\n          9\r\n          <span style={{ marginLeft: indentation(3) }}>\r\n            for neighbor of G[current]\r\n          </span>\r\n        </div>\r\n        <div id={'dijkstra-10'}>\r\n          10\r\n          <span style={{ marginLeft: indentation(4) }}>\r\n            set potentialScore = distances[current] + neighborCost\r\n          </span>\r\n        </div>\r\n        <div id={'dijkstra-11'}>\r\n          11\r\n          <span style={{ marginLeft: indentation(4) }}>\r\n            {' '}\r\n            if potentialScore {'<'} distances[neighbor]\r\n          </span>\r\n        </div>\r\n        <div id={'dijkstra-12'}>\r\n          12\r\n          <span style={{ marginLeft: indentation(5) }}>\r\n            set distances[neighbor] = potentialScore\r\n          </span>\r\n        </div>\r\n        <div id={'dijkstra-13'}>\r\n          13\r\n          <span style={{ marginLeft: indentation(5) }}>\r\n            set parents[neighbor] = current\r\n          </span>\r\n        </div>\r\n        <div id={'dijkstra-14'}>\r\n          14\r\n          <span style={{ marginLeft: indentation(5) }}>\r\n            insert neighbor at cost neighborCost into pq\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={'row'}>\r\n        <div className={'col-4'} id={'graph-container'}>\r\n          <Dijkstra\r\n            g={this.adjList}\r\n            root={'source'}\r\n            target={'target'}\r\n            pause={this.state.pause}\r\n            stop={this.state.stop}\r\n            speed={this.state.speed}\r\n            runningAlg={this.state.runningAlg}\r\n            setRunningAlg={this.setRunningAlg}\r\n            updateDistances={this.updateDistances}\r\n            updateParents={this.updateParents}\r\n            updatePq={this.updatePq}\r\n            updatePotentialScore={this.updatePotentialScore}\r\n            updateNeighbor={this.updateNeighbor}\r\n            updateNode={this.updateNode}\r\n          />\r\n          <div className={'divider'}></div>\r\n          <Prim\r\n            g={this.adjList}\r\n            root={'source'}\r\n            pause={this.state.pause}\r\n            stop={this.state.stop}\r\n            speed={this.state.speed}\r\n            runningAlg={this.state.runningAlg}\r\n            setRunningAlg={this.setRunningAlg}\r\n            updateDistances={this.updateDistances}\r\n            updateParents={this.updateParents}\r\n            updateNeighbor={this.updateNeighbor}\r\n            updatePrimMinNode={this.updatePrimMinNode}\r\n            updatePrimMstSet={this.updatePrimMstSet}\r\n          />\r\n          <div className={'divider'}></div>\r\n          <button\r\n            className=\"graph-button\"\r\n            onClick={() => {\r\n              this.setState({ pause: false, stop: true });\r\n              this.reset();\r\n            }}\r\n          >\r\n            Reset\r\n          </button>\r\n          <div className={'divider'}></div>\r\n          <button\r\n            className=\"graph-button\"\r\n            onClick={() => {\r\n              this.setState({ pause: !this.state.pause });\r\n            }}\r\n          >\r\n            {this.state.pause ? 'UnPause' : 'Pause'}\r\n          </button>\r\n          <form onSubmit={(event) => event.preventDefault()}>\r\n            <label>\r\n              Speed:\r\n              <input\r\n                style={{ width: '50px' }}\r\n                type=\"number\"\r\n                value={this.state.speed}\r\n                onChange={(event) => {\r\n                  event.preventDefault();\r\n                  this.setState({\r\n                    speed: event.target.value,\r\n                  });\r\n                }}\r\n              />\r\n            </label>\r\n          </form>\r\n        </div>\r\n\r\n        <div className={'col-4'} id={'output-tables'}>\r\n          <table\r\n            id={'undirected-graph-table'}\r\n            className={('undirected-graph-table', 'float-right')}\r\n            style={{ marginRight: '40px' }}\r\n          >\r\n            <tbody>\r\n              {this.state.runningAlg === 'prim'\r\n                ? this.renderPrimHeading()\r\n                : this.state.runningAlg === 'dijkstra'\r\n                ? this.renderDijkstraHeading()\r\n                : ''}\r\n              {this.state.runningAlg === 'prim'\r\n                ? this.renderPrimTableData()\r\n                : this.state.runningAlg === 'dijkstra'\r\n                ? this.renderDijkstraTableData()\r\n                : ''}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div className={'col-4'}>\r\n          <div className={'row'}>\r\n            {this.state.runningAlg === ''\r\n              ? ''\r\n              : this.state.runningAlg === 'prim'\r\n              ? this.renderPrimPseudocode()\r\n              : this.renderDijkstraPseudocode()}\r\n          </div>\r\n\r\n          <div className={'row'}>\r\n            {this.state.runningAlg === 'prim' ? (\r\n              <Sidebar showButton={this.state.runningAlg !== ''}>\r\n                {this.state.minNode ? (\r\n                  <li> minNode = {this.state.minNode} </li>\r\n                ) : (\r\n                  ''\r\n                )}\r\n\r\n                {this.state.node ? <li> current = {this.state.node} </li> : ''}\r\n                {this.state.neighbor ? (\r\n                  <li> neighbor = {this.state.neighbor} </li>\r\n                ) : (\r\n                  ''\r\n                )}\r\n\r\n                {this.state.neighborCost ? (\r\n                  <li> neighborCost = {this.state.neighborCost} </li>\r\n                ) : (\r\n                  ''\r\n                )}\r\n\r\n                <li onClick={() => this.toggleClicked(0)}>\r\n                  {Object.keys(this.state.distances).length > 0 ? (\r\n                    <RenderObjectComponent\r\n                      obj={this.state.distances}\r\n                      objName={'cost'}\r\n                      clicked={this.state.clicked[0]}\r\n                    />\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </li>\r\n                <li onClick={() => this.toggleClicked(1)}>\r\n                  {Object.keys(this.state.parents).length > 0 ? (\r\n                    <RenderObjectComponent\r\n                      obj={this.state.parents}\r\n                      objName={'parents'}\r\n                      clicked={this.state.clicked[1]}\r\n                    />\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </li>\r\n                <li onClick={() => this.toggleClicked(2)}>\r\n                  {Object.keys(this.state.mstSet).length > 0 ? (\r\n                    <RenderObjectComponent\r\n                      obj={this.state.mstSet}\r\n                      objName={'mstSet'}\r\n                      clicked={this.state.clicked[2]}\r\n                    />\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </li>\r\n                <li onClick={() => this.toggleClicked(3)}>\r\n                  {this.adjList ? (\r\n                    <RenderObjectComponent\r\n                      obj={this.adjList}\r\n                      objName={'G'}\r\n                      clicked={this.state.clicked[3]}\r\n                    />\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </li>\r\n              </Sidebar>\r\n            ) : (\r\n              ''\r\n            )}\r\n            {this.state.runningAlg === 'dijkstra' ? (\r\n              <Sidebar showButton={this.state.runningAlg !== ''}>\r\n                {this.state.node ? <li> current = {this.state.node} </li> : ''}\r\n                {this.state.neighbor ? (\r\n                  <li> neighbor = {this.state.neighbor} </li>\r\n                ) : (\r\n                  ''\r\n                )}\r\n\r\n                {this.state.neighborCost ? (\r\n                  <li> neighborCost = {this.state.neighborCost} </li>\r\n                ) : (\r\n                  ''\r\n                )}\r\n\r\n                {this.state.potentialScore ? (\r\n                  <li> potentialScore = {this.state.potentialScore} </li>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                <li onClick={() => this.toggleClicked(0)}>\r\n                  {this.state.priorityQueue ? (\r\n                    <RenderListComponent\r\n                      list={this.state.priorityQueue}\r\n                      listName={'pq'}\r\n                      clicked={this.state.clicked[0]}\r\n                    />\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </li>\r\n                <li onClick={() => this.toggleClicked(1)}>\r\n                  {Object.keys(this.state.distances).length > 0 ? (\r\n                    <RenderObjectComponent\r\n                      obj={this.state.distances}\r\n                      objName={'distances'}\r\n                      clicked={this.state.clicked[1]}\r\n                    />\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </li>\r\n                <li onClick={() => this.toggleClicked(2)}>\r\n                  {Object.keys(this.state.parents).length > 0 ? (\r\n                    <RenderObjectComponent\r\n                      obj={this.state.parents}\r\n                      objName={'parents'}\r\n                      clicked={this.state.clicked[2]}\r\n                    />\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </li>\r\n                <li onClick={() => this.toggleClicked(3)}>\r\n                  {this.adjList ? (\r\n                    <RenderObjectComponent\r\n                      obj={this.adjList}\r\n                      objName={'G'}\r\n                      clicked={this.state.clicked[3]}\r\n                    />\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </li>\r\n              </Sidebar>\r\n            ) : (\r\n              <Sidebar>\r\n                <li onClick={() => this.toggleClicked(4)}>\r\n                  {this.adjList ? (\r\n                    <RenderObjectComponent\r\n                      obj={this.adjList}\r\n                      objName={'G'}\r\n                      clicked={this.state.clicked[4]}\r\n                    />\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </li>\r\n              </Sidebar>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UndirectedGraphAlgorithms;\r\n","import React, { Component } from 'react';\r\n\r\nclass Topsort extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.unMounting = false;\r\n    this.previousNodes = [];\r\n    this.callStack = [];\r\n  }\r\n  componentWillUnmount() {\r\n    this.unMounting = true;\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (\r\n      prevProps.runningAlg === 'topsort' &&\r\n      this.props.runningAlg !== 'topsort'\r\n    ) {\r\n      this.unMounting = true;\r\n    }\r\n  }\r\n\r\n  highlightLine(classId) {\r\n    let el = document.getElementById(classId);\r\n    if (el) el.classList.add('active-code-line');\r\n  }\r\n  removeHighlightedLine(classId) {\r\n    let el = document.getElementById(classId);\r\n    if (el) el.classList.remove('active-code-line');\r\n  }\r\n\r\n  topSort = async () => {\r\n    this.highlightLine('topsort-1');\r\n    await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\r\n    await this.checkPauseStatus();\r\n    if (this.props.stop) {\r\n      return;\r\n    }\r\n    if (this.unMounting) return;\r\n    this.removeHighlightedLine('topsort-1');\r\n\r\n    this.highlightLine('topsort-2');\r\n    await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\r\n    await this.checkPauseStatus();\r\n    if (this.props.stop) {\r\n      return;\r\n    }\r\n    if (this.unMounting) return;\r\n    this.removeHighlightedLine('topsort-2');\r\n\r\n    let stack = [];\r\n    this.props.updateStack(stack);\r\n\r\n    this.highlightLine('topsort-3');\r\n    await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\r\n    await this.checkPauseStatus();\r\n    if (this.props.stop) {\r\n      return;\r\n    }\r\n    if (this.unMounting) return;\r\n    this.removeHighlightedLine('topsort-3');\r\n\r\n    let visited = {};\r\n    Object.keys(this.props.g).map((key) => (visited[key] = null));\r\n    this.props.updateVisited(visited);\r\n\r\n    let activeLinks = {};\r\n\r\n    for (let node of Object.keys(this.props.g)) {\r\n      this.highlightLine('topsort-4');\r\n      await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\r\n      await this.checkPauseStatus();\r\n      if (this.props.stop) {\r\n        this.cleanUpActiveLinksAndCurrentNode(activeLinks);\r\n        return;\r\n      }\r\n      if (this.unMounting) return;\r\n      this.removeHighlightedLine('topsort-4');\r\n      this.props.updateNode(node);\r\n\r\n      if (visited[node]) {\r\n        this.highlightLine('topsort-5');\r\n        await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\r\n        await this.checkPauseStatus();\r\n        if (this.props.stop) {\r\n          this.cleanUpActiveLinksAndCurrentNode(activeLinks);\r\n          return;\r\n        }\r\n        if (this.unMounting) return;\r\n        this.removeHighlightedLine('topsort-5');\r\n      }\r\n\r\n      if (visited[node] === null) {\r\n        this.highlightLine('topsort-5');\r\n        await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\r\n        await this.checkPauseStatus();\r\n        if (this.props.stop) {\r\n          this.cleanUpActiveLinksAndCurrentNode(activeLinks);\r\n          return;\r\n        }\r\n        if (this.unMounting) return;\r\n        this.removeHighlightedLine('topsort-5');\r\n\r\n        this.highlightLine('topsort-6');\r\n        await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\r\n        await this.checkPauseStatus();\r\n        if (this.props.stop) {\r\n          this.cleanUpActiveLinksAndCurrentNode(activeLinks);\r\n          return;\r\n        }\r\n        if (this.unMounting) return;\r\n        this.callStack.unshift(`visit(${node}, G, S, V)`);\r\n        this.props.updateCallStack(this.callStack);\r\n        if ((await this.visit(node, stack, visited, activeLinks)) === false) {\r\n          return null;\r\n        }\r\n        this.callStack.shift();\r\n        this.props.updateCallStack(this.callStack);\r\n\r\n        await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\r\n        await this.checkPauseStatus();\r\n        if (this.props.stop) {\r\n          this.cleanUpActiveLinksAndCurrentNode(activeLinks, this.props.g);\r\n          return;\r\n        }\r\n        if (this.unMounting) return;\r\n\r\n        document\r\n          .getElementById(node)\r\n          .classList.remove('current-node-of-interest');\r\n\r\n        this.removeHighlightedLine('topsort-6');\r\n      }\r\n    }\r\n    this.highlightLine('topsort-8');\r\n    await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\r\n    await this.checkPauseStatus();\r\n    if (this.props.stop) {\r\n      this.cleanUpActiveLinksAndCurrentNode(activeLinks);\r\n      return;\r\n    }\r\n    if (this.unMounting) return;\r\n    this.removeHighlightedLine('topsort-8');\r\n    this.props.getOrdering(stack.slice().reverse());\r\n\r\n    return stack.reverse();\r\n  };\r\n  // 2 = permenant mark, 1 = temp mark (if we encounter 1 again, we have cycle)\r\n  visit = async (node, stack, visited, activeLinks) => {\r\n    console.log(this.previousNodes);\r\n    this.highlightLine('topsort-visit-1');\r\n    await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\r\n    await this.checkPauseStatus();\r\n    if (this.props.stop) {\r\n      this.cleanUpActiveLinksAndCurrentNode(activeLinks);\r\n      return;\r\n    }\r\n    if (this.unMounting) return;\r\n    this.removeHighlightedLine('topsort-visit-1');\r\n\r\n    this.highlightLine('topsort-visit-2');\r\n    await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\r\n    await this.checkPauseStatus();\r\n    if (this.props.stop) {\r\n      this.cleanUpActiveLinksAndCurrentNode(activeLinks);\r\n      return;\r\n    }\r\n    if (this.unMounting) return;\r\n    this.removeHighlightedLine('topsort-visit-2');\r\n\r\n    if (visited[node] === 'Complete') {\r\n      this.highlightLine('topsort-visit-3');\r\n      await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\r\n      await this.checkPauseStatus();\r\n      if (this.props.stop) {\r\n        this.cleanUpActiveLinksAndCurrentNode(activeLinks);\r\n        return;\r\n      }\r\n      if (this.unMounting) return;\r\n      this.removeHighlightedLine('topsort-visit-3');\r\n\r\n      this.props.updateNode(this.previousNodes.pop());\r\n      this.callStack.shift();\r\n      this.props.updateCallStack(this.callStack);\r\n      return true;\r\n    }\r\n    this.highlightLine('topsort-visit-4');\r\n    await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\r\n    await this.checkPauseStatus();\r\n    if (this.props.stop) {\r\n      this.cleanUpActiveLinksAndCurrentNode(activeLinks);\r\n      return;\r\n    }\r\n    if (this.unMounting) return;\r\n    this.removeHighlightedLine('topsort-visit-4');\r\n    if (visited[node] === 'In Progress') {\r\n      this.highlightLine('topsort-visit-5');\r\n      await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\r\n      await this.checkPauseStatus();\r\n      if (this.props.stop) {\r\n        this.cleanUpActiveLinksAndCurrentNode(activeLinks);\r\n        return;\r\n      }\r\n      if (this.unMounting) return;\r\n      this.removeHighlightedLine('topsort-visit-5');\r\n      return false;\r\n    }\r\n\r\n    this.activateCurrentNode(node);\r\n    visited[node] = 'In Progress';\r\n    this.highlightLine('topsort-visit-6');\r\n    await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\r\n    await this.checkPauseStatus();\r\n    if (this.props.stop) {\r\n      this.cleanUpActiveLinksAndCurrentNode(activeLinks);\r\n      return;\r\n    }\r\n    if (this.unMounting) return;\r\n    this.removeHighlightedLine('topsort-visit-6');\r\n    this.props.updateVisited(visited);\r\n\r\n    if (this.props.g[node].length < 1) {\r\n      this.highlightLine('topsort-visit-7');\r\n      await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\r\n      await this.checkPauseStatus();\r\n      if (this.props.stop) {\r\n        this.cleanUpActiveLinksAndCurrentNode(activeLinks);\r\n        return;\r\n      }\r\n      if (this.unMounting) return;\r\n      this.removeHighlightedLine('topsort-visit-7');\r\n    }\r\n\r\n    for (let neighbor of this.props.g[node]) {\r\n      this.highlightLine('topsort-visit-7');\r\n\r\n      let activeLink = this.activateLink(node, neighbor);\r\n      activeLinks = this.updateActiveLinks(activeLink, activeLinks, node);\r\n      this.activateNeighbor(neighbor);\r\n\r\n      await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\r\n      await this.checkPauseStatus();\r\n      if (this.props.stop) {\r\n        this.cleanUpActiveLinksAndCurrentNode(activeLinks);\r\n        return;\r\n      }\r\n      if (this.unMounting) return;\r\n      this.removeHighlightedLine('topsort-visit-7');\r\n      this.props.updateNeighbor(neighbor);\r\n\r\n      this.highlightLine('topsort-visit-8');\r\n      await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\r\n      await this.checkPauseStatus();\r\n      if (this.props.stop) {\r\n        this.cleanUpActiveLinksAndCurrentNode(activeLinks);\r\n        return;\r\n      }\r\n      if (this.unMounting) return;\r\n      this.removeHighlightedLine('topsort-visit-8');\r\n      this.props.updateNeighbor(null);\r\n      this.props.updateNode(neighbor);\r\n      this.previousNodes.push(node);\r\n      this.callStack.unshift(`visit(${neighbor}, G, S, V)`);\r\n      this.props.updateCallStack(this.callStack);\r\n      if ((await this.visit(neighbor, stack, visited, activeLinks)) === false) {\r\n        return false;\r\n      }\r\n    }\r\n    this.highlightLine('topsort-visit-10');\r\n    await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\r\n    await this.checkPauseStatus();\r\n    if (this.props.stop) {\r\n      this.cleanUpActiveLinksAndCurrentNode(activeLinks);\r\n      return;\r\n    }\r\n    if (this.unMounting) return;\r\n    this.removeHighlightedLine('topsort-visit-10');\r\n    stack.push(node);\r\n    this.props.updateStack(stack);\r\n\r\n    this.highlightLine('topsort-visit-11');\r\n    await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\r\n    await this.checkPauseStatus();\r\n    if (this.props.stop) {\r\n      this.cleanUpActiveLinksAndCurrentNode(activeLinks);\r\n      return;\r\n    }\r\n    if (this.unMounting) return;\r\n    this.removeHighlightedLine('topsort-visit-11');\r\n    visited[node] = 'Complete';\r\n    this.props.updateVisited(visited);\r\n\r\n    this.markNodeComplete(node);\r\n    this.removeOutgoingLinks(activeLinks, node);\r\n\r\n    this.highlightLine('topsort-visit-12');\r\n    await new Promise((r) => setTimeout(r, 1000 / this.props.speed));\r\n    await this.checkPauseStatus();\r\n    if (this.props.stop) {\r\n      this.cleanUpActiveLinksAndCurrentNode(activeLinks);\r\n      return;\r\n    }\r\n    if (this.unMounting) return;\r\n    this.removeHighlightedLine('topsort-visit-12');\r\n\r\n    this.props.updateNode(this.previousNodes.pop());\r\n    this.callStack.shift();\r\n    this.props.updateCallStack(this.callStack);\r\n    return true;\r\n  };\r\n\r\n  activateCurrentNode(node) {\r\n    let currentElement = document.getElementById(node);\r\n    if (currentElement.classList.contains('current-neighbor-of-interest')) {\r\n      document\r\n        .getElementById(node)\r\n        .classList.remove('current-neighbor-of-interest');\r\n      document.getElementById(node).classList.add('child-to-current');\r\n    } else {\r\n      document.getElementById(node).classList.add('current-node-of-interest');\r\n    }\r\n  }\r\n\r\n  activateNeighbor(neighbor) {\r\n    let neighborEl = document.getElementById(neighbor);\r\n    if (neighborEl) neighborEl.classList.add('current-neighbor-of-interest');\r\n  }\r\n\r\n  activateLink(node, neighbor) {\r\n    let lineElement = document.getElementById(node + '-' + neighbor);\r\n    if (lineElement) lineElement.classList.add('link-of-interest-ts');\r\n    return lineElement;\r\n  }\r\n\r\n  updateActiveLinks(activeLink, activeLinks, node) {\r\n    if (activeLink) {\r\n      if (!activeLinks[node]) {\r\n        activeLinks[node] = [activeLink];\r\n      } else {\r\n        activeLinks[node].push(activeLink);\r\n      }\r\n    }\r\n    return activeLinks;\r\n  }\r\n\r\n  removeOutgoingLinks(activeLinks, node) {\r\n    if (activeLinks[node] && activeLinks[node].length > 0) {\r\n      activeLinks[node].forEach((e) => {\r\n        e.classList.remove('link-of-interest-ts');\r\n      });\r\n    }\r\n  }\r\n\r\n  markNodeComplete(node) {\r\n    document\r\n      .getElementById(node)\r\n      .classList.remove('current-neighbor-of-interest');\r\n\r\n    document.getElementById(node).classList.remove('current-node-of-interest');\r\n    document.getElementById(node).classList.add('node-complete-directed');\r\n  }\r\n\r\n  cleanUpActiveLinksAndCurrentNode(activeLinks) {\r\n    for (let val of Object.values(activeLinks)) {\r\n      val.forEach((link) => link.classList.remove('link-of-interest-ts'));\r\n    }\r\n\r\n    Object.keys(this.props.g).forEach((node) => {\r\n      let nodeElement = document.getElementById(node);\r\n      if (nodeElement) nodeElement.classList = '';\r\n    });\r\n  }\r\n\r\n  async checkPauseStatus() {\r\n    while (this.props.pause) {\r\n      await new Promise((r) => setTimeout(r, 1000));\r\n      continue;\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <button\r\n        className=\"graph-button\"\r\n        onClick={() => {\r\n          if (this.unMounting) {\r\n            this.unMounting = false;\r\n          }\r\n          this.props.setRunningAlg('topsort');\r\n          this.topSort();\r\n        }}\r\n      >\r\n        Topological Sort\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Topsort;\r\n","import * as d3 from 'd3';\r\n\r\nfunction createDirectedGraph() {\r\n  let nodes = [\r\n    { id: 'g', level: 2 },\r\n    { id: 'f', level: 2 },\r\n\r\n    { id: 'd', level: 2 },\r\n    { id: 'i', level: 2 },\r\n    { id: 'e', level: 2 },\r\n    { id: 'a', level: 2 },\r\n    { id: 'h', level: 2 },\r\n    { id: 'j', level: 2 },\r\n\r\n    { id: 'c', level: 2 },\r\n    { id: 'b', level: 2 },\r\n  ];\r\n\r\n  let strength = 0.001;\r\n  let links = [\r\n    { source: 'g', target: 'i', strength: 100 * strength },\r\n    { source: 'g', target: 'f', strength: 20 * strength },\r\n    { source: 'i', target: 'h', strength: 40 * strength },\r\n    { source: 'd', target: 'g', strength: 10 * strength },\r\n    { source: 'd', target: 'e', strength: 10 * strength },\r\n    { source: 'd', target: 'b', strength: 20 * strength },\r\n    { source: 'a', target: 'g', strength: 10 * strength },\r\n    { source: 'a', target: 'b', strength: 10 * strength },\r\n    { source: 'a', target: 'c', strength: 30 * strength },\r\n    { source: 'j', target: 'e', strength: 50 * strength },\r\n    { source: 'e', target: 'b', strength: 20 * strength },\r\n    { source: 'b', target: 'f', strength: 20 * strength },\r\n  ];\r\n  const margin = { top: 20, right: 200, bottom: 200, left: -100 },\r\n    width = 800 - margin.left - margin.right,\r\n    height = 600 - margin.top - margin.bottom;\r\n\r\n  function getNodeColor(node) {\r\n    return node.level === 1 ? 'red' : 'gray';\r\n  }\r\n\r\n  var svg = d3\r\n    .select('#graph-container')\r\n    .append('svg')\r\n    .attr('width', width)\r\n    .attr('height', height)\r\n    .attr('id', 'dir-graph-svg')\r\n    .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')')\r\n    .attr('class', 'graph');\r\n\r\n  // simulation setup with all forces\r\n  var linkForce = d3\r\n    .forceLink()\r\n    .id(function (link) {\r\n      return link.id;\r\n    })\r\n    .strength(function (link) {\r\n      return link.strength / 0.9;\r\n    });\r\n\r\n  var simulation = d3\r\n    .forceSimulation()\r\n    .force('link', linkForce)\r\n    .force('charge', d3.forceManyBody().strength(-100))\r\n    .force('center', d3.forceCenter(width / 2, height / 2));\r\n\r\n  svg\r\n    .append('defs')\r\n    .append('marker')\r\n    .attr('id', 'arrow')\r\n    .attr('viewBox', [-0, -5, 10, 10])\r\n    .attr('refX', 19)\r\n    .attr('refY', 0)\r\n    .attr('markerWidth', 11)\r\n    .attr('markerHeight', 11)\r\n    .attr('orient', 'auto-start-reverse')\r\n    .append('path')\r\n    .attr('d', 'M 0,-5 L 10 ,0 L 0,5')\r\n    .attr('fill', 'rgba(50, 50, 50, 0.5)')\r\n    .attr('stroke', 'rgba(50, 50, 50, 0.2)');\r\n\r\n  var linkElements = svg\r\n    .append('g')\r\n    .attr('class', 'links')\r\n    .selectAll('line')\r\n    .data(links)\r\n    .enter()\r\n    .append('line')\r\n    .attr('stroke-width', 1)\r\n    .attr('stroke', 'rgba(50, 50, 50, 0.2)')\r\n    .attr('marker-end', 'url(#arrow)')\r\n    .attr('id', (d) => d.source + '-' + d.target);\r\n\r\n  var linkTextElements = svg\r\n    .append('g')\r\n    .attr('class', 'link_texts')\r\n    .selectAll('text')\r\n    .data(links)\r\n    .enter()\r\n    .append('text')\r\n    .text(function (link) {\r\n      return link.cost;\r\n    })\r\n    .attr('font-size', 15)\r\n    .attr('dx', 0)\r\n    .attr('dy', 0);\r\n\r\n  var nodeElements = svg\r\n    .append('g')\r\n    .attr('class', 'node')\r\n    .selectAll('circle')\r\n    .data(nodes)\r\n    .enter()\r\n    .append('circle')\r\n    .attr('r', 10)\r\n    .attr('fill', getNodeColor)\r\n    .attr('id', (d) => d.id);\r\n\r\n  var nodeTextElements = svg\r\n    .append('g')\r\n    .attr('class', 'texts')\r\n    .selectAll('text')\r\n    .data(nodes)\r\n    .enter()\r\n    .append('text')\r\n    .text(function (node) {\r\n      return node.id;\r\n    })\r\n    .attr('font-size', 15)\r\n    .attr('dx', -25)\r\n    .attr('dy', 4);\r\n\r\n  simulation.nodes(nodes).on('tick', () => {\r\n    nodeElements\r\n      .attr('cx', function (node) {\r\n        return node.x;\r\n      })\r\n      .attr('cy', function (node) {\r\n        return node.y;\r\n      });\r\n    nodeTextElements\r\n      .attr('x', function (node) {\r\n        return node.x;\r\n      })\r\n      .attr('y', function (node) {\r\n        return node.y;\r\n      });\r\n\r\n    linkElements\r\n      .attr('x1', function (link) {\r\n        return link.source.x;\r\n      })\r\n      .attr('y1', function (link) {\r\n        return link.source.y;\r\n      })\r\n      .attr('x2', function (link) {\r\n        return link.target.x;\r\n      })\r\n      .attr('y2', function (link) {\r\n        return link.target.y;\r\n      });\r\n\r\n    linkTextElements\r\n      .attr('x', function (link) {\r\n        return (link.source.x + link.target.x) / 2;\r\n      })\r\n      .attr('y', function (link) {\r\n        return (link.source.y + link.target.y) / 2;\r\n      });\r\n  });\r\n\r\n  simulation.force('link').links(links);\r\n}\r\n\r\nexport default createDirectedGraph;\r\n","import React, { Component } from 'react';\r\nimport Topsort from './algorithms/graph-algorithms/Topsort';\r\nimport createDirectedGraph from '../graph-builders/directed-graph-builder';\r\nimport Sidebar from './sidebar/Sidebar';\r\nimport RenderListComponent from './sidebar/RenderListComponent';\r\nimport RenderObjectComponent from './sidebar/RenderObjectComponent';\r\nclass DirectedGraphAlgorithms extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pause: false,\r\n      stop: false,\r\n      speed: 1,\r\n      ordering: null,\r\n      runningAlg: '',\r\n      neighbor: null,\r\n      node: null,\r\n      visited: null,\r\n      stack: null,\r\n      clicked: [false, false, false, false, false],\r\n      callStack: [],\r\n    };\r\n    this.adjList = {\r\n      a: ['g', 'c', 'b'],\r\n      b: ['f'],\r\n      c: [],\r\n      d: ['g', 'e', 'b'],\r\n      e: ['b'],\r\n      f: [],\r\n      g: ['i', 'f'],\r\n      h: [],\r\n      i: ['h'],\r\n      j: ['e'],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    createDirectedGraph();\r\n    this.graph = document.getElementById('graph-container');\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    let svg = document.getElementById('dir-graph-svg');\r\n    if (this.graph.hasChildNodes()) this.graph.removeChild(svg);\r\n    this.reset();\r\n  }\r\n  getOrdering = (ord) => {\r\n    this.setState({ ordering: ord });\r\n  };\r\n  setRunningAlg = (alg) => {\r\n    this.reset();\r\n    this.setState({ runningAlg: alg });\r\n  };\r\n  getPauseStatus = () => this.state.pause;\r\n  getStopStatus = () => this.state.stop;\r\n  getSpeedRequest = () => Number(this.state.speed) + 0.1;\r\n  toggleClicked = (i) => {\r\n    let a = this.state.clicked.slice();\r\n    a[i] = !a[i];\r\n    this.setState({\r\n      clicked: a,\r\n    });\r\n  };\r\n  updateVisited = (V) => {\r\n    this.setState({ visited: V });\r\n  };\r\n  updateNeighbor = (neighbor) => {\r\n    this.setState({ neighbor });\r\n  };\r\n\r\n  updateNode = (node) => {\r\n    this.setState({ node });\r\n  };\r\n\r\n  updateStack = (stack) => {\r\n    this.setState({ stack });\r\n  };\r\n\r\n  updateCallStack = (callStack) => {\r\n    this.setState({ callStack });\r\n  };\r\n\r\n  reset = () => {\r\n    Object.keys(this.adjList).forEach((e) => {\r\n      let el = document.getElementById(e);\r\n      if (el) el.classList = '';\r\n\r\n      for (let i = 1; i < 9; i++) {\r\n        let pseduoTopsortElements = document.getElementById('topsort-' + i);\r\n        if (pseduoTopsortElements) pseduoTopsortElements.classList = '';\r\n      }\r\n      for (let i = 1; i < 13; i++) {\r\n        let pseduoTopsortElements = document.getElementById(\r\n          'topsort-visit-' + i\r\n        );\r\n        if (pseduoTopsortElements) pseduoTopsortElements.classList = '';\r\n      }\r\n    });\r\n\r\n    this.setState({\r\n      ordering: null,\r\n      node: null,\r\n      neighbor: null,\r\n      stack: null,\r\n      visited: null,\r\n      callStack: [],\r\n    });\r\n    if (this.state.stop) {\r\n      this.setState({ stop: false, pause: false });\r\n    }\r\n  };\r\n\r\n  renderTopsortPseudocode() {\r\n    const indentation = (num) => {\r\n      return num * 20;\r\n    };\r\n    return (\r\n      <div>\r\n        <div id={'topsort-1'}>\r\n          1<span style={{ marginLeft: indentation(1) }}>ToplogicalSort(G)</span>\r\n        </div>\r\n        <div id={'topsort-2'}>\r\n          2<span style={{ marginLeft: indentation(2) }}>let S be a stack</span>\r\n        </div>\r\n        <div id={'topsort-3'}>\r\n          3\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            let V be a map with all nodes as keys and values of null\r\n          </span>\r\n        </div>\r\n        <div id={'topsort-4'}>\r\n          4<span style={{ marginLeft: indentation(2) }}>For node of G</span>\r\n        </div>\r\n        <div id={'topsort-5'}>\r\n          5\r\n          <span style={{ marginLeft: indentation(3) }}>if V[node] is null</span>\r\n        </div>\r\n        <div id={'topsort-6'}>\r\n          6\r\n          <span style={{ marginLeft: indentation(4) }}>\r\n            if visit(node, G, S, V) is false\r\n          </span>\r\n        </div>\r\n        <div id={'topsort-7'}>\r\n          7<span style={{ marginLeft: indentation(5) }}>return null</span>\r\n        </div>\r\n        <div id={'topsort-8'}>\r\n          8\r\n          <span style={{ marginLeft: indentation(2) }}>return S.reverse()</span>\r\n        </div>\r\n        <br></br>\r\n        <div id={'topsort-visit-1'}>\r\n          1\r\n          <span style={{ marginLeft: indentation(1) }}>\r\n            visit(node, G, S, V)\r\n          </span>\r\n        </div>\r\n        <div id={'topsort-visit-2'}>\r\n          2\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            if V[node] == 'Complete'\r\n          </span>\r\n        </div>\r\n        <div id={'topsort-visit-3'}>\r\n          3<span style={{ marginLeft: indentation(3) }}>return true</span>\r\n        </div>\r\n        <div id={'topsort-visit-4'}>\r\n          4\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            if V[node] == 'In Progress'\r\n          </span>\r\n        </div>\r\n        <div id={'topsort-visit-5'}>\r\n          5<span style={{ marginLeft: indentation(3) }}>return false</span>\r\n        </div>\r\n        <div id={'topsort-visit-6'}>\r\n          6\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            V[node] = 'In Progress'\r\n          </span>\r\n        </div>\r\n        <div id={'topsort-visit-7'}>\r\n          7\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            for neighbor of node\r\n          </span>\r\n        </div>\r\n        <div id={'topsort-visit-8'}>\r\n          8\r\n          <span style={{ marginLeft: indentation(3) }}>\r\n            if visit(node, G, S, V) is false\r\n          </span>\r\n        </div>\r\n        <div id={'topsort-visit-9'}>\r\n          9<span style={{ marginLeft: indentation(4) }}>return false</span>\r\n        </div>\r\n        <div id={'topsort-visit-10'}>\r\n          10\r\n          <span style={{ marginLeft: indentation(2) }}>S.push(node)</span>\r\n        </div>\r\n        <div id={'topsort-visit-11'}>\r\n          11\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            V[node] = 'Complete'\r\n          </span>\r\n        </div>\r\n        <div id={'topsort-visit-12'}>\r\n          12\r\n          <span style={{ marginLeft: indentation(2) }}>return true</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderTopsortTableData() {\r\n    return this.state.ordering.map((node) => {\r\n      return (\r\n        <tr key={node}>\r\n          <td>{node}</td>\r\n        </tr>\r\n      );\r\n    });\r\n  }\r\n\r\n  renderTopsortHeading() {\r\n    return (\r\n      <tr>\r\n        <th>Potential Ordering</th>\r\n      </tr>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={'row'}>\r\n        <div className={'col-4'} id={'graph-container'}>\r\n          <Topsort\r\n            g={this.adjList}\r\n            pause={this.state.pause}\r\n            stop={this.state.stop}\r\n            speed={this.state.speed}\r\n            runningAlg={this.state.runningAlg}\r\n            setRunningAlg={this.setRunningAlg}\r\n            getOrdering={this.getOrdering}\r\n            updateVisited={this.updateVisited}\r\n            updateNeighbor={this.updateNeighbor}\r\n            updateNode={this.updateNode}\r\n            updateStack={this.updateStack}\r\n            updateCallStack={this.updateCallStack}\r\n          />\r\n          <div className={'divider'}></div>\r\n          <button\r\n            className=\"graph-button\"\r\n            onClick={() => {\r\n              this.setState({ pause: false, stop: true });\r\n              this.reset();\r\n            }}\r\n          >\r\n            Reset\r\n          </button>\r\n          <div className={'divider'}></div>\r\n          <button\r\n            className=\"graph-button\"\r\n            onClick={() => {\r\n              this.setState({ pause: !this.state.pause });\r\n            }}\r\n          >\r\n            {this.state.pause ? 'UnPause' : 'Pause'}\r\n          </button>\r\n\r\n          <form onSubmit={(event) => event.preventDefault()}>\r\n            <label>\r\n              Speed:\r\n              <input\r\n                style={{ width: '50px' }}\r\n                type=\"number\"\r\n                value={this.state.speed}\r\n                onChange={(event) => {\r\n                  event.preventDefault();\r\n                  this.setState({\r\n                    speed: event.target.value,\r\n                  });\r\n                }}\r\n              />\r\n            </label>\r\n          </form>\r\n        </div>\r\n        {/* <div className={'col-6'} id={'output-tables'}> */}\r\n        <div className={'col-4'}>{this.renderTopsortPseudocode()}</div>\r\n        <div className={'col-4'}>\r\n          <Sidebar showButton={true}>\r\n            <li onClick={() => this.toggleClicked(0)}>\r\n              {this.state.ordering ? (\r\n                <RenderListComponent\r\n                  list={this.state.ordering}\r\n                  listName={'Return Value'}\r\n                  clicked={this.state.clicked[0]}\r\n                />\r\n              ) : (\r\n                ''\r\n              )}\r\n            </li>\r\n            {this.state.node ? <li> node = {this.state.node} </li> : ''}\r\n            {this.state.neighbor ? (\r\n              <li> neighbor = {this.state.neighbor} </li>\r\n            ) : (\r\n              ''\r\n            )}\r\n\r\n            <li onClick={() => this.toggleClicked(1)}>\r\n              {this.state.stack ? (\r\n                <RenderListComponent\r\n                  list={this.state.stack}\r\n                  listName={'S'}\r\n                  clicked={this.state.clicked[1]}\r\n                />\r\n              ) : (\r\n                ''\r\n              )}\r\n            </li>\r\n            <li onClick={() => this.toggleClicked(2)}>\r\n              {this.state.visited ? (\r\n                <RenderObjectComponent\r\n                  obj={this.state.visited}\r\n                  objName={'V'}\r\n                  clicked={this.state.clicked[2]}\r\n                />\r\n              ) : (\r\n                ''\r\n              )}\r\n            </li>\r\n            <li onClick={() => this.toggleClicked(3)}>\r\n              {this.adjList ? (\r\n                <RenderObjectComponent\r\n                  obj={this.adjList}\r\n                  objName={'G'}\r\n                  clicked={this.state.clicked[3]}\r\n                />\r\n              ) : (\r\n                ''\r\n              )}\r\n            </li>\r\n\r\n            <li onClick={() => this.toggleClicked(4)}>\r\n              {this.state.callStack.length > 0 ? (\r\n                <RenderListComponent\r\n                  list={this.state.callStack}\r\n                  listName={'Call Stack'}\r\n                  clicked={this.state.clicked[4]}\r\n                />\r\n              ) : (\r\n                ''\r\n              )}\r\n            </li>\r\n\r\n            {/* {this.state.currentIndex ? (\r\n              <li> currentIndex = {this.state.currentIndex} </li>\r\n            ) : (\r\n              ''\r\n            )}\r\n\r\n            {this.state.parentIndex ? (\r\n              <li> parentIndex = {this.state.parentIndex} </li>\r\n            ) : (\r\n              ''\r\n            )}\r\n            {this.state.childIndex ? (\r\n              <li> childIndex = {this.state.childIndex} </li>\r\n            ) : (\r\n              ''\r\n            )}\r\n\r\n            {this.state.leftChild ? (\r\n              <li> leftChild = {this.state.leftChild} </li>\r\n            ) : (\r\n              ''\r\n            )}\r\n            {this.state.rightChild ? (\r\n              <li> rightChild = {this.state.rightChild} </li>\r\n            ) : (\r\n              ''\r\n            )} */}\r\n\r\n            {/* <li onClick={() => this.toggleClicked(1)}>\r\n              <RenderListComponent\r\n                list={this.state.inputList}\r\n                listName={'inputList'}\r\n                clicked={this.state.clicked[1]}\r\n              />\r\n            </li> */}\r\n          </Sidebar>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DirectedGraphAlgorithms;\r\n\r\n//  <table id={'topsort-table'} className={'float-right'}>\r\n//           <tbody>\r\n//             {this.renderTopsortHeading()}\r\n//             {this.renderTopsortTableData()}\r\n//           </tbody>\r\n//         </table>\r\n","import * as d3 from 'd3';\r\n\r\n\r\nasync function createScatterplot(data) {\r\n  //modified from http://www.d3-graph-gallery.com, by Yan Holtz\r\n  // set the dimensions and margins of the graph\r\n  let margin = {top: 10, right: 30, bottom: 30, left: 60},\r\n  width = 600 - margin.left - margin.right,\r\n  height = 500 - margin.top - margin.bottom;\r\n\r\n  // append the svg object to the body of the page\r\n  let svg = d3.select(\"#graph-container\")\r\n    .append(\"svg\")\r\n    .attr(\"id\", \"scatter-svg\")\r\n    .attr(\"width\", width + margin.left + margin.right)\r\n    .attr(\"height\", height + margin.top + margin.bottom)\r\n      .append(\"g\")\r\n      .attr(\"id\", \"scatter-no-margin\")\r\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n\r\n  // Add X axis - animation start: 0 opacity\r\n  let x = d3.scaleLinear()\r\n    .domain([0, 0])\r\n    .range([0, width]);\r\n  \r\n  svg.append(\"g\")\r\n    .attr(\"class\", \"x-axis\")\r\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n    .call(d3.axisBottom(x))\r\n    .attr(\"opacity\", \"0\");\r\n\r\n  // Add Y axis\r\n  let y = d3.scaleLinear()\r\n    .domain([0, 7])\r\n    .range([height, 0]);\r\n  \r\n  svg.append(\"g\")\r\n    .call(d3.axisLeft(y));\r\n\r\n  // Add points\r\n  svg.append('g')\r\n    .selectAll(\"circle\")\r\n    .data(data)\r\n    .enter()\r\n    .append(\"circle\")\r\n      .attr(\"cx\", d => x(d.x))\r\n      .attr(\"cy\", d => y(d.y))\r\n      .attr(\"r\", 3)\r\n      .attr(\"stroke\", \"black\")\r\n      .attr(\"stroke-width\", 3)\r\n      //add an id to each point so we can grab it later and modify it\r\n      .attr(\"id\", d => `x:${parseFloat(d.x).toFixed(1)}-y:${parseFloat(d.y).toFixed(1)}`) //id: x:0.0-y:0.0\r\n      //initialize all clusters to black\r\n      .classed(\"cluster-unassigned\",true); \r\n\r\n  // Add new X axis - animation end: full opacity, transitioning to correct domain\r\n  x.domain([4, 8])\r\n  svg.select(\".x-axis\")\r\n    .transition()\r\n    .duration(2000)\r\n    .attr(\"opacity\", \"1\")\r\n    .call(d3.axisBottom(x));\r\n\r\n  //Animate each of the data points to their correct position using different delay\r\n  svg.selectAll(\"circle\")\r\n    .transition()\r\n    .delay((d,id) => id*3)\r\n    .duration(2000)\r\n    .attr(\"cx\", d => x(d.x))\r\n    .attr(\"cy\", d => y(d.y))\r\n\r\n\r\n}\r\n\r\n\r\nexport default createScatterplot;\r\n","//import { cloneElement } from 'react';\r\nimport React, { Component } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nclass KMeans extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.unMounting = false;\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unMounting = true;\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {}\r\n\r\n  //Perform K-Means clustering on points, plot, and animate\r\n  kmeans = async () => {\r\n    const k = this.props.k;\r\n    //Randomly initialize cluster centroids\r\n    const randomPoints = this.getRandomElements(this.props.points, k);\r\n    //create a shallow copy of centroids (to make sure the assigned points don't change)\r\n    let centroids = [...randomPoints];\r\n    \r\n    //Set the classes of the initialized centroid elements\r\n    \r\n    let centGroup = d3.select(\"#scatter-no-margin\")\r\n        .append(\"g\")\r\n        .attr(\"id\", \"centroid-group\")\r\n        .classed(\"centroid\", true);\r\n  \r\n    // centroids.forEach((centroid, index) => {\r\n    d3.select(\"#centroid-group\")\r\n      .selectAll(\"circle\")  \r\n      .data(centroids)\r\n      .enter()\r\n      .append(\"circle\")\r\n      .attr(\"cx\", (centroid) => this.scaleX(centroid.x))\r\n      .attr(\"cy\", (centroid) => this.scaleY(centroid.y))\r\n      .attr(\"r\", 10)\r\n      .attr(\"id\", (centroid,i) => `centroid${i}`)\r\n      .attr(\"class\", (centroid,i) => `cluster${i} centroid`);\r\n    \r\n\r\n    await new Promise((r) => setTimeout(r, 2000 / this.props.speed));\r\n    await this.checkPauseStatus();\r\n    if (this.props.stop) return;\r\n    if (this.unMounting) return;\r\n\r\n\r\n    // Main K-Means loop\r\n    let hasConverged = false;\r\n    let iter = 0;\r\n    do {\r\n      console.log('Iteration ', iter);\r\n\r\n      this.assignToClusters(this.props.points, centroids);\r\n\r\n      await new Promise((r) => setTimeout(r, 2000 / this.props.speed));\r\n      await this.checkPauseStatus();\r\n      if (this.props.stop) return;\r\n      if (this.unMounting) return;\r\n\r\n      console.log('Clusters have been assigned.');\r\n\r\n      let prevCentroids = [...centroids];\r\n      this.updateCentroids(this.props.points, k, centroids);\r\n\r\n      await new Promise((r) => setTimeout(r, 2000 / this.props.speed));\r\n      await this.checkPauseStatus();\r\n      if (this.props.stop) return;\r\n      if (this.unMounting) return;\r\n      \r\n      console.log('Centroids have been updated:');\r\n      console.log(JSON.stringify(centroids, null, 2));\r\n      \r\n      hasConverged = prevCentroids.reduce(\r\n        (bool, currentCentroid, i) => (currentCentroid.x === centroids[i].x) && (currentCentroid.y === centroids[i].y),\r\n        true\r\n      );\r\n      \r\n      iter++;\r\n    } while (!hasConverged && iter < 100);\r\n    console.log(\"Converged.\");\r\n\r\n  };\r\n\r\n  //Compute distance of each point from each centroid,\r\n  // and assign points to closest centroid\r\n  assignToClusters(points, centroids) {\r\n    points.forEach((point) => {\r\n      let distances = [];\r\n      centroids.forEach((centroid) => {\r\n        distances.push(\r\n          //calculate the Euclidean distance from each point to each centroid\r\n          Math.sqrt(\r\n            Math.pow(point.x - centroid.x, 2) +\r\n              Math.pow(point.y - centroid.y, 2)\r\n          )\r\n        );\r\n      });\r\n      //Assign the point to its closest centroid using the minimum of all distances\r\n      point.closestCentroid = distances.indexOf(Math.min(...distances));\r\n\r\n      //Color the point on the D3.js scatterplot\r\n      this.colorPoint(point);\r\n    });\r\n  }\r\n\r\n  //Calculate new cluster centroids, which will be the mean of all points in that cluster\r\n  updateCentroids(points, k, centroids) {\r\n    for (let i = 0; i < k; i++) {\r\n      //clusterArray = [{x: \"1.2\", y: \"2\", closestCentroid: \"i\"}, ...]\r\n      const clusterArray = points.filter(\r\n        (point) => point.closestCentroid === i\r\n      );\r\n\r\n      //calculate the mean in x and y directions\r\n      let mean = clusterArray.reduce(\r\n        (sum, currentPoint) => {\r\n          sum.x = Number(sum.x) + Number(currentPoint.x);\r\n          sum.y = Number(sum.y) + Number(currentPoint.y);\r\n          // console.log('current sum:', sum)\r\n          return sum;\r\n        },\r\n        { x: Number(0), y: Number(0) }\r\n      );\r\n      mean.x = mean.x / clusterArray.length;\r\n      mean.y = mean.y / clusterArray.length;\r\n\r\n      //update the centroid at index i\r\n      centroids[i] = { x: mean.x, y: mean.y };\r\n\r\n      this.moveIthCentroid(i, centroids[i]);\r\n    }\r\n  }\r\n\r\n  // ------------------\r\n  // Helper functions\r\n  // -------------------\r\n  getRandomElements(arr, n) {\r\n    let result = new Array(n),\r\n      len = arr.length,\r\n      taken = new Array(len);\r\n    if (n > len)\r\n      throw new RangeError('getRandom: more elements taken than available');\r\n    while (n--) {\r\n      let x = Math.floor(Math.random() * len);\r\n      result[n] = arr[x in taken ? taken[x] : x];\r\n      taken[x] = --len in taken ? taken[len] : len;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  colorPoint(point) {\r\n    let pointElement = document.getElementById(\r\n      `x:${parseFloat(point.x).toFixed(1)}-y:${parseFloat(point.y).toFixed(1)}`\r\n    );\r\n    let pointClasses = pointElement.classList;\r\n    if (pointElement) {\r\n      //if it's the first iteration, remove 'unassigned' style\r\n      if (pointClasses.contains('cluster-unassigned')) {\r\n        pointClasses.remove('cluster-unassigned');\r\n      }\r\n      //otherwise, remove the current cluster styles\r\n      else {\r\n        pointClasses.remove(pointClasses[0]);\r\n      }\r\n      //finally, add the color associated with the closest centroid\r\n      pointClasses.add(`cluster${point.closestCentroid}`);\r\n    }\r\n  }\r\n\r\n  moveIthCentroid(i, centroid) {\r\n     d3.select(`#centroid${i}`)\r\n      .attr('cx', this.scaleX(centroid.x))\r\n      .attr('cy', this.scaleY(centroid.y));\r\n  }\r\n\r\n  //Scale point coordinates to fit on the scatter plot\r\n  scaleX = d3.scaleLinear()\r\n      .domain([4, 8])\r\n      .range([0, 510]);\r\n      \r\n  scaleY = d3.scaleLinear()\r\n      .domain([0, 7])\r\n      .range([460, 0]);\r\n  \r\n\r\n  async checkPauseStatus() {\r\n    while (this.props.pause) {\r\n      await new Promise((r) => setTimeout(r, 1000));\r\n      continue;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <button\r\n        onClick={() => {\r\n          if (this.unMounting) {\r\n            this.unMounting = false;\r\n          }\r\n          this.kmeans();\r\n        }}\r\n      >\r\n        K-Means Clustering\r\n      </button>\r\n    );\r\n  }\r\n} //End of KMeans Component\r\n\r\nexport default KMeans;\r\n","import React, { Component } from 'react';\r\nimport createScatterplot from '../graph-builders/scatterplot-builder';\r\nimport * as d3 from 'd3';\r\nimport KMeans from './algorithms/clustering-algorithms/KMeans';\r\n\r\nclass ScatterPlotAlgorithms extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pause: false,\r\n      stop: false,\r\n      speed: 2,\r\n      k: 5,\r\n      points: [],\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    //Load in the csv data points (2D) as an object\r\n    let x = await d3.csv('https://raw.githubusercontent.com/luaywadie/AmAlgorithms/master/visualizations-app/src/data/cluster_data.csv');\r\n    this.setState({points: x});\r\n      //imported from scatterplot-builder\r\n    createScatterplot(this.state.points);\r\n\r\n    this.scatter = document.getElementById('graph-container');\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    let svg = document.getElementById('scatter-svg');\r\n    if (this.scatter.hasChildNodes()) this.scatter.removeChild(svg);\r\n  }\r\n\r\n  setPoints = (ps) => this.setState({points: ps});\r\n\r\n  getPauseStatus = () => this.state.pause;\r\n  getStopStatus = () => this.state.stop;\r\n  getSpeedRequest = () => Number(this.state.speed) + 0.1;\r\n\r\n  reset = () => {\r\n\r\n    //Remove all centroids from the DOM\r\n    const centroidGroup = document.getElementById(\"centroid-group\");\r\n    centroidGroup.parentNode.removeChild(centroidGroup);\r\n\r\n    //Clear the class list of each circle on scatterplot (reset) and restore to 'unassigned' state\r\n    let circleElements = document.getElementsByTagName('circle');\r\n    for (let i = 0; i < circleElements.length; i++) {\r\n        //Remove the classes and reset the point to 'unassigned'\r\n        circleElements[i].setAttribute('class', '');\r\n        circleElements[i].classList.add('cluster-unassigned');\r\n      }\r\n    //Set state\r\n    if(this.state.stop) {\r\n      this.setState({ stop: false, pause: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className={'row'}>\r\n          <div className={'col-6'} id={'graph-container'}>\r\n            <KMeans\r\n              points={this.state.points}\r\n              pause={this.state.pause}\r\n              stop={this.state.stop}\r\n              speed={this.state.speed}\r\n              k={this.state.k}\r\n              setPoints={this.setPoints}\r\n            />\r\n            <div className={'divider'}></div>\r\n            <button\r\n              className=\"graph-button\"\r\n              onClick={ async () => {\r\n                // this.setState( (state, props) =>\r\n                //   ({...this.state, pause: false, stop: true }) );\r\n                await this.setState({pause: false, stop:true});\r\n                this.reset();\r\n              }\r\n              }\r\n            >\r\n            Reset\r\n            </button>\r\n            <div className={'divider'}></div>\r\n            <button\r\n            onClick={() => {\r\n              this.setState({ pause: !this.state.pause });\r\n            }}\r\n          >\r\n            {this.state.pause ? 'UnPause' : 'Pause'}\r\n          </button>\r\n            <form onSubmit={(event) => event.preventDefault()}>\r\n            <label>\r\n              Number of Clusters (K):\r\n              <input\r\n                style={{ width: '50px' }}\r\n                type=\"number\"\r\n                value={this.state.k}\r\n                onChange={(event) =>\r\n                  this.setState({\r\n                    k: event.target.value,\r\n                  })\r\n                }\r\n              />\r\n            </label>\r\n          </form>\r\n          <form onSubmit={(event) => event.preventDefault()}>\r\n          <label>\r\n            Speed:\r\n            <input\r\n              style={{ width: '50px' }}\r\n              type=\"number\"\r\n              value={this.state.speed}\r\n              onChange={(event) =>\r\n                this.setState({\r\n                  speed: event.target.value,\r\n                })\r\n              }\r\n            />\r\n          </label>\r\n        </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ScatterPlotAlgorithms;\r\n","import * as d3 from 'd3';\r\n// const { bfs } = require('../helpers/data-structures/bfs_helper.js');\r\n\r\nconst margin = { top: 40, right: 90, bottom: 30, left: 0 };\r\nlet width = 900 - margin.left - margin.right;\r\nlet height = 900 - margin.top - margin.bottom;\r\nexport function buildTreeDataFromAdjList(adjList) {\r\n  let treeData = {};\r\n  let root = true;\r\n  for (let [node, children] of Object.entries(adjList)) {\r\n    if (root === true) {\r\n      treeData[node] = {\r\n        name: node,\r\n        value: 10,\r\n        type: 'black',\r\n        level: '',\r\n        children: [],\r\n      };\r\n      root = false;\r\n    }\r\n    for (let child of children) {\r\n      if (!treeData[child]) {\r\n        treeData[child] = {\r\n          name: child,\r\n          value: 10,\r\n          type: 'black',\r\n          level: '',\r\n          children: [],\r\n        };\r\n      }\r\n      if (!treeData[node]) {\r\n        treeData[node] = {\r\n          name: node,\r\n          value: 10,\r\n          type: 'black',\r\n          level: '',\r\n          children: [],\r\n        };\r\n      }\r\n      treeData[node].children.push(treeData[child]);\r\n    }\r\n  }\r\n\r\n  return treeData;\r\n}\r\nfunction getMin(adjList) {\r\n  let min = Infinity;\r\n  Object.keys(adjList).forEach((key) => {\r\n    if (Number(key) < min) {\r\n      min = Number(key);\r\n    }\r\n  });\r\n  return min;\r\n}\r\nexport function createDynamicTree(adjList) {\r\n  let min = getMin(adjList);\r\n  let treeData = buildTreeDataFromAdjList(adjList)[min];\r\n  let myScale = 1.5;\r\n\r\n  let treemap = d3.tree().size([height, width]);\r\n\r\n  let nodes = d3.hierarchy(treeData, (d) => d.children);\r\n\r\n  nodes = treemap(nodes);\r\n\r\n  const svg = d3\r\n      .select('#graph-container')\r\n      .append('svg')\r\n      .attr('id', 'heap-tree-svg')\r\n      .attr('width', width + margin.left + margin.right)\r\n      .attr('height', height + margin.top + margin.bottom)\r\n      .attr('class', 'graph'),\r\n    g = svg\r\n      .append('g')\r\n      .attr('class', 'circle-target-g')\r\n      .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\r\n\r\n  const node = g\r\n    .selectAll('.node')\r\n    .data(nodes.descendants())\r\n    .enter()\r\n    .append('g')\r\n    .attr(\r\n      'class',\r\n      (d) =>\r\n        'node ' +\r\n        (d.children ? ' node--internal ' : ' node--leaf ') +\r\n        ' g-node-' +\r\n        d.data.name\r\n    )\r\n    .attr(\r\n      'transform',\r\n      (d) => 'translate(' + d.x / myScale + ',' + d.y / myScale + ')'\r\n    );\r\n  node\r\n    .append('circle')\r\n    .attr('r', (d) => 10)\r\n    .attr('class', (d) => 'node-' + d.data.name)\r\n    .attr('id', (d) => d.data.name);\r\n\r\n  // adds the text to the node\r\n  node\r\n    .append('text')\r\n    .attr('class', (d) => 'node-' + d.data.name + '-text')\r\n    .attr('dy', '.35em')\r\n    .attr('x', (d) => (d.children ? (d.data.value + 5) * -1 : d.data.value + 5))\r\n    .attr('y', (d) =>\r\n      d.children && d.depth !== 0 ? -(d.data.value + 5) : d.data.value\r\n    )\r\n    .style('text-anchor', (d) => (d.children ? 'end' : 'start'))\r\n    .text((d) => d.data.name);\r\n}\r\nexport function clearTree() {\r\n  let dataStructure = document.getElementById('graph-container');\r\n  let svg = document.getElementById('heap-tree-svg');\r\n  if (dataStructure && svg && dataStructure.hasChildNodes())\r\n    dataStructure.removeChild(svg);\r\n}\r\nexport function removeRootOfDynamicTree(parent, adjList) {\r\n  clearTree();\r\n\r\n  let treeData = buildTreeDataFromAdjList(adjList)[parent];\r\n  let myScale = 1.5;\r\n\r\n  // declares a tree layout and assigns the size\r\n  let treemap = d3.tree().size([height, width]);\r\n  let nodes = d3.hierarchy(treeData, (d) => d.children);\r\n  nodes = treemap(nodes);\r\n\r\n  const svg = d3\r\n      .select('#graph-container')\r\n      .append('svg')\r\n      .attr('id', 'heap-tree-svg')\r\n      .attr('width', width + margin.left + margin.right)\r\n      .attr('height', height + margin.top + margin.bottom)\r\n      .attr('class', 'graph'),\r\n    g = svg\r\n      .append('g')\r\n      .attr('class', 'circle-target-g')\r\n      .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\r\n\r\n  g.selectAll('.link')\r\n    .data(nodes.descendants().slice(1))\r\n    .enter()\r\n    .append('path')\r\n    .attr(\r\n      'class',\r\n      (d) => `heap-link ${d.data.name}link heap-link-${d.data.name}`\r\n    )\r\n    .attr('id', (d) => d.data.name + 'link') // d.parent.data.name + '-' + d.data.name\r\n    .style('stroke', '#ccc')\r\n    .style('stroke-width', 2)\r\n    .attr('d', (d) => {\r\n      return (\r\n        'M' +\r\n        d.x / myScale +\r\n        ',' +\r\n        d.y / myScale +\r\n        'C' +\r\n        (d.x + d.parent.x) / myScale / 2 +\r\n        ',' +\r\n        d.y / myScale +\r\n        ' ' +\r\n        (d.x + d.parent.x) / myScale / 2 +\r\n        ',' +\r\n        d.parent.y / myScale +\r\n        ' ' +\r\n        d.parent.x / myScale +\r\n        ',' +\r\n        d.parent.y / myScale\r\n      );\r\n    });\r\n  const node = g\r\n    .selectAll('.node')\r\n    .data(nodes.descendants())\r\n    .enter()\r\n    .append('g')\r\n    .attr(\r\n      'class',\r\n      (d) =>\r\n        'node ' +\r\n        (d.children ? ' node--internal ' : ' node--leaf ') +\r\n        ' g-node-' +\r\n        d.data.name\r\n    )\r\n    .attr(\r\n      'transform',\r\n      (d) => 'translate(' + d.x / myScale + ',' + d.y / myScale + ')'\r\n    );\r\n  node\r\n    .append('circle')\r\n    .attr('r', (d) => 10)\r\n    .attr('class', (d) => 'node-' + d.data.name)\r\n    .attr('id', (d) => d.data.name);\r\n  node\r\n    .append('text')\r\n    .attr('class', (d) => 'node-' + d.data.name + '-text')\r\n    .attr('dy', '.35em')\r\n    .attr('x', (d) => (d.children ? (d.data.value + 5) * -1 : d.data.value + 5))\r\n    .attr('y', (d) =>\r\n      d.children && d.depth !== 0 ? -(d.data.value + 5) : d.data.value\r\n    )\r\n    .style('text-anchor', (d) => (d.children ? 'end' : 'start'))\r\n    .text((d) => d.data.name);\r\n  return;\r\n}\r\n\r\nexport function insertIntoDynamicTree(parent, adjList) {\r\n  clearTree();\r\n\r\n  let treeData = buildTreeDataFromAdjList(adjList)[parent];\r\n  let myScale = 1.5;\r\n\r\n  // declares a tree layout and assigns the size\r\n  let treemap = d3.tree().size([height, width]);\r\n  let nodes = d3.hierarchy(treeData, (d) => d.children);\r\n  nodes = treemap(nodes);\r\n\r\n  const svg = d3\r\n      .select('#graph-container')\r\n      .append('svg')\r\n      .attr('id', 'heap-tree-svg')\r\n      .attr('width', width + margin.left + margin.right)\r\n      .attr('height', height + margin.top + margin.bottom)\r\n      .attr('class', 'graph'),\r\n    g = svg\r\n      .append('g')\r\n      .attr('class', 'circle-target-g')\r\n      .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\r\n\r\n  g.selectAll('.link')\r\n    .data(nodes.descendants().slice(1))\r\n    .enter()\r\n    .append('path')\r\n    .attr(\r\n      'class',\r\n      (d) => `heap-link ${d.data.name}link heap-link-${d.data.name}`\r\n    )\r\n    .attr('id', (d) => d.data.name + 'link') // d.parent.data.name + '-' + d.data.name\r\n    .style('stroke', '#ccc')\r\n    .style('stroke-width', 2)\r\n    .attr('d', (d) => {\r\n      return (\r\n        'M' +\r\n        d.x / myScale +\r\n        ',' +\r\n        d.y / myScale +\r\n        'C' +\r\n        (d.x + d.parent.x) / myScale / 2 +\r\n        ',' +\r\n        d.y / myScale +\r\n        ' ' +\r\n        (d.x + d.parent.x) / myScale / 2 +\r\n        ',' +\r\n        d.parent.y / myScale +\r\n        ' ' +\r\n        d.parent.x / myScale +\r\n        ',' +\r\n        d.parent.y / myScale\r\n      );\r\n    });\r\n  const node = g\r\n    .selectAll('.node')\r\n    .data(nodes.descendants())\r\n    .enter()\r\n    .append('g')\r\n    .attr(\r\n      'class',\r\n      (d) =>\r\n        'node ' +\r\n        (d.children ? ' node--internal ' : ' node--leaf ') +\r\n        ' g-node-' +\r\n        d.data.name\r\n    )\r\n    .attr(\r\n      'transform',\r\n      (d) => 'translate(' + d.x / myScale + ',' + d.y / myScale + ')'\r\n    );\r\n  node\r\n    .append('circle')\r\n    .attr('r', (d) => 10)\r\n    .attr('class', (d) => 'node-' + d.data.name)\r\n    .attr('id', (d) => d.data.name);\r\n  node\r\n    .append('text')\r\n    .attr('class', (d) => 'node-' + d.data.name + '-text')\r\n    .attr('dy', '.35em')\r\n    .attr('x', (d) => (d.children ? (d.data.value + 5) * -1 : d.data.value + 5))\r\n    .attr('y', (d) =>\r\n      d.children && d.depth !== 0 ? -(d.data.value + 5) : d.data.value\r\n    )\r\n    .style('text-anchor', (d) => (d.children ? 'end' : 'start'))\r\n    .text((d) => d.data.name);\r\n}\r\n\r\nexport function swap(p, c) {\r\n  let parentText = d3.select('.node-' + p + '-text');\r\n  let childText = d3.select('.node-' + c + '-text');\r\n  parentText.attr('class', 'node-' + c + '-text');\r\n  childText.attr('class', 'node-' + p + '-text');\r\n  parentText.text(c);\r\n  childText.text(p);\r\n\r\n  let parentCircle = d3.select('.node-' + p);\r\n  let childCircle = d3.select('.node-' + c);\r\n  parentCircle.attr('class', 'node-' + c);\r\n  childCircle.attr('class', 'node-' + p);\r\n  parentCircle.attr('id', c);\r\n  childCircle.attr('id', p);\r\n\r\n  let parentG = d3.select('.g-node-' + p);\r\n  let childG = d3.select('.g-node-' + c);\r\n  parentG.attr('class', 'node  node--internal  g-node-' + c);\r\n  childG.attr('class', 'node  node--internal  g-node-' + p);\r\n\r\n  let childLink = d3.select('.heap-link-' + c);\r\n  childLink.attr('class', `heap-link ${p}link heap-link- + ${p}`);\r\n  childLink.attr('id', p + 'link');\r\n\r\n  let parentLink = d3.select('.heap-link-' + p);\r\n  parentLink.attr('class', `heap-link ${c}link heap-link-${c}`);\r\n  parentLink.attr('id', c + 'link');\r\n}\r\n\r\n// Animations\r\n\r\n// let bfsA = bfs(adjList, min);\r\n// let totalDelay = 0;\r\n// bfsA.forEach((key, i) => {\r\n//   let prevDelay = totalDelay;\r\n//   d3.select('.heap-link-' + key)\r\n//     .transition()\r\n//     .duration(100)\r\n//     .delay(() => {\r\n//       totalDelay += 1000;\r\n//       return totalDelay;\r\n//     })\r\n//     .attr('stroke', '#ccc');\r\n//   d3.select('.node-' + key)\r\n//     .transition()\r\n//     .duration(100)\r\n//     .delay(() => prevDelay + 1000)\r\n//     .attr('r', () => 10);\r\n\r\n//   d3.select('.g-node-' + key)\r\n//     .append('text')\r\n//     .transition()\r\n//     .duration(100)\r\n//     .delay(() => prevDelay + 1000)\r\n//     .attr('dy', '.35em')\r\n//     .attr('x', (d) =>\r\n//       d.children ? (d.data.value + 5) * -1 : d.data.value + 5\r\n//     )\r\n//     .attr('y', (d) =>\r\n//       d.children && d.depth !== 0 ? -(d.data.value + 5) : d.data.value\r\n//     )\r\n//     .style('text-anchor', (d) => (d.children ? 'end' : 'start'))\r\n//     .text((d) => d.data.name);\r\n// });\r\n","import React, { Component } from 'react';\r\nimport {\r\n  insertIntoDynamicTree,\r\n  swap,\r\n  createDynamicTree,\r\n  removeRootOfDynamicTree,\r\n  clearTree,\r\n} from '../../graph-builders/dynamic-tree-builder';\r\n\r\nimport Sidebar from '../sidebar/Sidebar';\r\n\r\nimport RenderListComponent from '../sidebar/RenderListComponent';\r\n\r\nclass Heap extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.sample = [9, 11, 24, 13, 35, 25, 61, 17, 48, 91];\r\n    this.h = [0];\r\n    this.state = {\r\n      inputList: [],\r\n      heapA: [0],\r\n      inputNum: '',\r\n      executing: false,\r\n      pause: false,\r\n      size: 0,\r\n      parentIndex: null,\r\n      currentIndex: null,\r\n      clicked: [false, false, false],\r\n      newElement: null,\r\n      removedRoot: null,\r\n      inserting: false,\r\n      removingRoot: false,\r\n      childIndex: null,\r\n      leftChild: null,\r\n      rightChild: null,\r\n    };\r\n    this.unMounting = false;\r\n    this.adjList = {};\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    if (this.state.inputList.length === 0) {\r\n      this.buildSampleHeap();\r\n    }\r\n    this.dataStructure = document.getElementById('graph-container');\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.unMounting = true;\r\n    let svg = document.getElementById('heap-tree-svg');\r\n    if (this.dataStructure.hasChildNodes() && svg)\r\n      this.dataStructure.removeChild(svg);\r\n  }\r\n\r\n  async buildSampleHeap() {\r\n    clearTree();\r\n    this.h = this.sample;\r\n    await this.setState({\r\n      inputList: this.sample,\r\n      heapA: this.h,\r\n    });\r\n    this.setState({ size: this.sample[0] });\r\n    this.convertHeapArrayToAdjList(this.h);\r\n    insertIntoDynamicTree(this.h[1], this.adjList);\r\n  }\r\n\r\n  async clearHeap() {\r\n    await this.setState({ inputList: [], heapA: [0] });\r\n    this.h = [0];\r\n    this.setState({ size: 0 });\r\n    this.adjList = {};\r\n    clearTree();\r\n  }\r\n\r\n  handleInsertButton = async () => {\r\n    let newNode = this.state.inputNum;\r\n    await this.setState({\r\n      inputList: [...this.state.inputList, Number(this.state.inputNum)],\r\n      inputNum: '',\r\n      executing: true,\r\n    });\r\n    await this.insert(newNode);\r\n    if (this.state.inputList.length === 1) {\r\n      this.convertHeapArrayToAdjList(this.h);\r\n      createDynamicTree(this.adjList);\r\n    }\r\n    this.setState({ executing: false });\r\n  };\r\n\r\n  async insert(e) {\r\n    this.setState({ newElement: e });\r\n    this.highlightLine('Heap-insert-1');\r\n    await new Promise((r) => setTimeout(r, 1000));\r\n    await this.checkPauseStatus();\r\n    if (this.unMounting) return;\r\n    this.removeHighlightedLine('Heap-insert-1');\r\n\r\n    this.highlightLine('Heap-insert-2');\r\n    await new Promise((r) => setTimeout(r, 1000));\r\n    await this.checkPauseStatus();\r\n    if (this.unMounting) return;\r\n    this.removeHighlightedLine('Heap-insert-2');\r\n\r\n    this.setState({ size: this.state.size + 1 });\r\n    this.h[0] = this.state.size;\r\n\r\n    this.highlightLine('Heap-insert-3');\r\n    await new Promise((r) => setTimeout(r, 1000));\r\n    await this.checkPauseStatus();\r\n    if (this.unMounting) return;\r\n    this.removeHighlightedLine('Heap-insert-3');\r\n    this.h[this.state.size] = e;\r\n    await this.setState({ heapA: this.h });\r\n\r\n    this.convertHeapArrayToAdjList(this.h);\r\n    if (this.state.size !== 1) {\r\n      insertIntoDynamicTree(this.h[1], this.adjList);\r\n    }\r\n\r\n    this.highlightLine('Heap-insert-4');\r\n    await new Promise((r) => setTimeout(r, 1000));\r\n    await this.checkPauseStatus();\r\n    if (this.unMounting) return;\r\n    await this.fixUp();\r\n    this.removeHighlightedLine('Heap-insert-4');\r\n    this.setState({ newElement: null });\r\n  }\r\n  async fixUp() {\r\n    this.highlightLine('Heap-fixup-1');\r\n    await new Promise((r) => setTimeout(r, 1000));\r\n    await this.checkPauseStatus();\r\n    if (this.unMounting) return;\r\n    this.removeHighlightedLine('Heap-fixup-1');\r\n\r\n    this.highlightLine('Heap-fixup-2');\r\n    await new Promise((r) => setTimeout(r, 1000));\r\n    await this.checkPauseStatus();\r\n    if (this.unMounting) return;\r\n    this.removeHighlightedLine('Heap-fixup-2');\r\n    let pos = this.state.size;\r\n    this.setState({ currentIndex: pos });\r\n    if (pos <= 1) {\r\n      this.highlightLine('Heap-fixup-3');\r\n      await new Promise((r) => setTimeout(r, 1000));\r\n      await this.checkPauseStatus();\r\n      if (this.unMounting) return;\r\n      this.removeHighlightedLine('Heap-fixup-3');\r\n    }\r\n    while (pos > 1) {\r\n      // Check when inserting into an empty boy\r\n      this.highlightLine('Heap-fixup-3');\r\n      await new Promise((r) => setTimeout(r, 1000));\r\n      await this.checkPauseStatus();\r\n      if (this.unMounting) return;\r\n      this.removeHighlightedLine('Heap-fixup-3');\r\n\r\n      let parent = Math.floor(pos / 2);\r\n      this.highlightLine('Heap-fixup-4');\r\n      await new Promise((r) => setTimeout(r, 1000));\r\n      await this.checkPauseStatus();\r\n      if (this.unMounting) return;\r\n      this.removeHighlightedLine('Heap-fixup-4');\r\n      this.setState({ parentIndex: parent });\r\n\r\n      this.highlightLine('Heap-fixup-5');\r\n      this.activateChildAndParent(this.h[pos], this.h[parent]);\r\n      await new Promise((r) => setTimeout(r, 1000));\r\n      await this.checkPauseStatus();\r\n      if (this.unMounting) return;\r\n\r\n      this.removeHighlightedLine('Heap-fixup-5');\r\n      this.removeActiveChildParent(this.h[pos], this.h[parent]);\r\n\r\n      if (this.h[parent] > this.h[pos]) {\r\n        this.activateLink(this.h[pos]);\r\n\r\n        this.highlightLine('Heap-fixup-6');\r\n        await new Promise((r) => setTimeout(r, 1000));\r\n        await this.checkPauseStatus();\r\n        if (this.unMounting) return;\r\n        this.removeHighlightedLine('Heap-fixup-6');\r\n\r\n        swap(this.h[parent], this.h[pos]);\r\n        let temp = this.h[parent];\r\n        this.h[parent] = this.h[pos];\r\n        this.h[pos] = temp;\r\n        await this.setState({ heapA: this.h });\r\n\r\n        this.highlightLine('Heap-fixup-7');\r\n        await new Promise((r) => setTimeout(r, 1000));\r\n        await this.checkPauseStatus();\r\n        if (this.unMounting) return;\r\n        this.removeHighlightedLine('Heap-fixup-7');\r\n\r\n        this.deActivateLink(this.h[pos]);\r\n\r\n        pos = parent;\r\n        this.setState({ currentIndex: pos });\r\n      } else {\r\n        this.highlightLine('Heap-fixup-8');\r\n        await new Promise((r) => setTimeout(r, 1000));\r\n        await this.checkPauseStatus();\r\n        if (this.unMounting) return;\r\n        this.removeHighlightedLine('Heap-fixup-8');\r\n        break;\r\n      }\r\n      this.setState({ parentIndex: null });\r\n    }\r\n    this.setState({ currentIndex: null, parentIndex: null });\r\n  }\r\n\r\n  async removeRoot() {\r\n    await this.setState({ executing: true });\r\n\r\n    this.highlightLine('Heap-removeRoot-1');\r\n    await new Promise((r) => setTimeout(r, 1000));\r\n    await this.checkPauseStatus();\r\n    if (this.unMounting) return;\r\n    this.removeHighlightedLine('Heap-removeRoot-1');\r\n\r\n    this.highlightLine('Heap-removeRoot-2');\r\n    await new Promise((r) => setTimeout(r, 1000));\r\n    await this.checkPauseStatus();\r\n    if (this.unMounting) return;\r\n    this.removeHighlightedLine('Heap-removeRoot-2');\r\n    let smallest = this.h[1];\r\n    this.setState({ removedRoot: smallest });\r\n\r\n    this.highlightLine('Heap-removeRoot-3');\r\n    await new Promise((r) => setTimeout(r, 1000));\r\n    await this.checkPauseStatus();\r\n    if (this.unMounting) return;\r\n    this.removeHighlightedLine('Heap-removeRoot-3');\r\n    this.h[1] = this.h.pop();\r\n    this.setState({ heapA: this.h });\r\n\r\n    this.highlightLine('Heap-removeRoot-4');\r\n    await new Promise((r) => setTimeout(r, 1000));\r\n    await this.checkPauseStatus();\r\n    if (this.unMounting) return;\r\n    this.removeHighlightedLine('Heap-removeRoot-4');\r\n    this.setState({ size: this.state.size - 1 });\r\n    this.h[0] = this.state.size;\r\n\r\n    let updatedList = this.state.inputList.filter((e) => e !== smallest);\r\n    if (this.state.size === 0) {\r\n      this.h = this.h.slice(0, 1);\r\n    }\r\n    await this.setState({ heapA: this.h, inputList: updatedList });\r\n\r\n    this.highlightLine('Heap-removeRoot-5');\r\n    await new Promise((r) => setTimeout(r, 1000));\r\n    await this.checkPauseStatus();\r\n    if (this.unMounting) return;\r\n    if (this.state.size === 0) {\r\n      clearTree();\r\n    } else {\r\n      this.convertHeapArrayToAdjList(this.h);\r\n      removeRootOfDynamicTree(this.h[1], this.adjList);\r\n      await this.fixDown();\r\n    }\r\n\r\n    this.removeHighlightedLine('Heap-removeRoot-5');\r\n    this.highlightLine('Heap-removeRoot-6');\r\n    await new Promise((r) => setTimeout(r, 1000));\r\n    await this.checkPauseStatus();\r\n    if (this.unMounting) return;\r\n    this.removeHighlightedLine('Heap-removeRoot-6');\r\n    await this.setState({ executing: false, removedRoot: null });\r\n    return smallest;\r\n  }\r\n  async fixDown() {\r\n    this.highlightLine('Heap-fixdown-1');\r\n    await new Promise((r) => setTimeout(r, 1000));\r\n    await this.checkPauseStatus();\r\n    if (this.unMounting) return;\r\n    this.removeHighlightedLine('Heap-fixdown-1');\r\n\r\n    this.highlightLine('Heap-fixdown-2');\r\n    await new Promise((r) => setTimeout(r, 1000));\r\n    await this.checkPauseStatus();\r\n    if (this.unMounting) return;\r\n    this.removeHighlightedLine('Heap-fixdown-2');\r\n\r\n    let pos = 1;\r\n    this.setState({ currentIndex: pos });\r\n\r\n    if (pos * 2 > this.state.size) {\r\n      this.highlightLine('Heap-fixdown-3');\r\n      await new Promise((r) => setTimeout(r, 1000));\r\n      await this.checkPauseStatus();\r\n      if (this.unMounting) return;\r\n      this.removeHighlightedLine('Heap-fixdown-3');\r\n    }\r\n    while (pos * 2 <= this.state.size) {\r\n      this.highlightLine('Heap-fixdown-3');\r\n      await new Promise((r) => setTimeout(r, 1000));\r\n      await this.checkPauseStatus();\r\n      if (this.unMounting) return;\r\n      this.removeHighlightedLine('Heap-fixdown-3');\r\n\r\n      this.highlightLine('Heap-fixdown-4');\r\n      await new Promise((r) => setTimeout(r, 1000));\r\n      await this.checkPauseStatus();\r\n      if (this.unMounting) return;\r\n      this.removeHighlightedLine('Heap-fixdown-4');\r\n\r\n      let child = pos * 2;\r\n      this.setState({ childIndex: child });\r\n\r\n      this.activateParent(this.h[pos]);\r\n\r\n      this.highlightLine('Heap-fixdown-5');\r\n      this.highlightLine('Heap-fixdown-6');\r\n      this.activateLeftAndRightChildren(this.h[child], this.h[child + 1]);\r\n      await new Promise((r) => setTimeout(r, 2000));\r\n      await this.checkPauseStatus();\r\n      if (this.unMounting) return;\r\n      this.removeHighlightedLine('Heap-fixdown-5');\r\n      this.removeHighlightedLine('Heap-fixdown-6');\r\n\r\n      this.setState({\r\n        leftChild: this.h[child],\r\n        rightChild: this.h[child + 1],\r\n      });\r\n\r\n      this.deActivateParent(this.h[pos]);\r\n      this.deActivateLeftAndRightChildren(this.h[child], this.h[child + 1]);\r\n\r\n      this.highlightLine('Heap-fixdown-7');\r\n      await new Promise((r) => setTimeout(r, 1000));\r\n      await this.checkPauseStatus();\r\n      if (this.unMounting) return;\r\n      this.removeHighlightedLine('Heap-fixdown-7');\r\n\r\n      if (this.h[child] > this.h[child + 1]) {\r\n        this.highlightLine('Heap-fixdown-8');\r\n        await new Promise((r) => setTimeout(r, 1000));\r\n        await this.checkPauseStatus();\r\n        if (this.unMounting) return;\r\n        this.removeHighlightedLine('Heap-fixdown-8');\r\n        child += 1;\r\n      }\r\n\r\n      this.activateChildAndParent(this.h[child], this.h[pos]);\r\n\r\n      this.highlightLine('Heap-fixdown-9');\r\n      await new Promise((r) => setTimeout(r, 2000));\r\n      await this.checkPauseStatus();\r\n      if (this.unMounting) return;\r\n      this.removeHighlightedLine('Heap-fixdown-9');\r\n\r\n      this.removeActiveChildParent(this.h[child], this.h[pos]);\r\n\r\n      if (this.h[pos] > this.h[child]) {\r\n        this.activateLink(this.h[child]);\r\n        this.highlightLine('Heap-fixdown-10');\r\n        await new Promise((r) => setTimeout(r, 2000));\r\n        await this.checkPauseStatus();\r\n        if (this.unMounting) return;\r\n\r\n        this.removeHighlightedLine('Heap-fixdown-10');\r\n\r\n        this.deActivateLink(this.h[child]);\r\n\r\n        swap(this.h[pos], this.h[child]);\r\n        let temp = this.h[child];\r\n        this.h[child] = this.h[pos];\r\n        this.h[pos] = temp;\r\n        await this.setState({ heapA: this.h });\r\n\r\n        this.highlightLine('Heap-fixdown-11');\r\n        await new Promise((r) => setTimeout(r, 1000));\r\n        await this.checkPauseStatus();\r\n        if (this.unMounting) return;\r\n        this.removeHighlightedLine('Heap-fixdown-11');\r\n        pos = child;\r\n        this.setState({ currentIndex: pos });\r\n      } else {\r\n        this.highlightLine('Heap-fixdown-12');\r\n        await new Promise((r) => setTimeout(r, 1000));\r\n        await this.checkPauseStatus();\r\n        if (this.unMounting) return;\r\n        this.removeHighlightedLine('Heap-fixdown-12');\r\n        break;\r\n      }\r\n      this.setState({ childIndex: null, leftChild: null, rightChild: null });\r\n    }\r\n    this.setState({ currentIndex: null });\r\n  }\r\n\r\n  convertHeapArrayToAdjList = (a) => {\r\n    let adjList = {};\r\n\r\n    for (let i = 1; i <= a[0]; i++) {\r\n      let parent = a[i];\r\n      if (adjList[parent]) {\r\n        continue;\r\n      }\r\n      let leftChild = a[i * 2];\r\n      let rightChild = a[i * 2 + 1];\r\n      let children = [];\r\n      if (leftChild) {\r\n        children.push(leftChild);\r\n      }\r\n      if (rightChild) {\r\n        children.push(rightChild);\r\n      }\r\n      adjList[parent] = children;\r\n    }\r\n    this.adjList = adjList;\r\n    return this.adjList;\r\n  };\r\n  toggleClicked = (i) => {\r\n    let a = this.state.clicked.slice();\r\n    a[i] = !a[i];\r\n    this.setState({\r\n      clicked: a,\r\n    });\r\n  };\r\n  activateLeftAndRightChildren(leftChild, rightChild) {\r\n    let leftChildElement = document.getElementsByClassName(\r\n      'node-' + leftChild\r\n    )[0];\r\n    if (leftChildElement) {\r\n      leftChildElement.classList.add('left-right-child-node');\r\n    }\r\n\r\n    let rightChildElement = document.getElementsByClassName(\r\n      'node-' + rightChild\r\n    )[0];\r\n    if (rightChildElement) {\r\n      rightChildElement.classList.add('left-right-child-node');\r\n    }\r\n  }\r\n\r\n  deActivateLeftAndRightChildren(leftChild, rightChild) {\r\n    let leftChildElement = document.getElementsByClassName(\r\n      'node-' + leftChild\r\n    )[0];\r\n    if (leftChildElement) {\r\n      leftChildElement.classList.remove('left-right-child-node');\r\n    }\r\n\r\n    let rightChildElement = document.getElementsByClassName(\r\n      'node-' + rightChild\r\n    )[0];\r\n    if (rightChildElement) {\r\n      rightChildElement.classList.remove('left-right-child-node');\r\n    }\r\n  }\r\n\r\n  activateParent(parent) {\r\n    let parentElement = document.getElementsByClassName('node-' + parent)[0];\r\n    parentElement.classList.add('parent-node');\r\n  }\r\n\r\n  deActivateParent(parent) {\r\n    let parentElement = document.getElementsByClassName('node-' + parent)[0];\r\n    parentElement.classList.remove('parent-node');\r\n  }\r\n\r\n  activateChildAndParent(child, parent) {\r\n    let childElement = document.getElementsByClassName('node-' + child)[0];\r\n    childElement.classList.add('child-node');\r\n    let parentElement = document.getElementsByClassName('node-' + parent)[0];\r\n    parentElement.classList.add('parent-node');\r\n  }\r\n\r\n  removeActiveChildParent(child, parent) {\r\n    let childElement = document.getElementsByClassName('node-' + child)[0];\r\n    let parentElement = document.getElementsByClassName('node-' + parent)[0];\r\n    let childLinkElement = document.getElementById(child + 'link');\r\n\r\n    childElement.classList.remove('child-node');\r\n    parentElement.classList.remove('parent-node');\r\n    childLinkElement.classList.remove('fade-in-out-link');\r\n  }\r\n\r\n  activateLink(child) {\r\n    let childLinkElement = document.getElementById(child + 'link');\r\n    childLinkElement.classList.add('fade-in-out-link');\r\n  }\r\n  deActivateLink(child) {\r\n    let childLinkElement = document.getElementById(child + 'link');\r\n    childLinkElement.classList.remove('fade-in-out-link');\r\n  }\r\n  async checkPauseStatus() {\r\n    while (this.state.pause) {\r\n      await new Promise((r) => setTimeout(r, 1000));\r\n      continue;\r\n    }\r\n  }\r\n\r\n  formatInsertButtonText() {\r\n    let linkText = '';\r\n    if (this.state.inputList.includes(this.state.inputNum)) {\r\n      linkText = 'No Duplicates';\r\n    } else if (this.state.executing) {\r\n      linkText = 'Executing...';\r\n    } else {\r\n      linkText = 'Insert';\r\n    }\r\n    return linkText;\r\n  }\r\n\r\n  renderHeapClassPseudocode() {\r\n    const indentation = (num) => {\r\n      return num * 20;\r\n    };\r\n    return (\r\n      <div>\r\n        <div id={'Heap-class-1'}>\r\n          1<span style={{ marginLeft: indentation(1) }}>Class Heap</span>\r\n        </div>\r\n        <div id={'Heap-class-2'}>\r\n          2<span style={{ marginLeft: indentation(2) }}>let h be an array</span>\r\n        </div>\r\n        <div id={'Heap-class-3'}>\r\n          3<span style={{ marginLeft: indentation(2) }}>let size be 0</span>\r\n        </div>\r\n        <div id={'Heap-class-4'}>\r\n          4\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            let the first element of h always be size\r\n          </span>\r\n        </div>\r\n        <br></br>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderInsertPseudocode() {\r\n    const indentation = (num) => {\r\n      return num * 20;\r\n    };\r\n    return (\r\n      <div>\r\n        <div id={'Heap-insert-1'}>\r\n          1<span style={{ marginLeft: indentation(1) }}>Insert(element)</span>\r\n        </div>\r\n        <div id={'Heap-insert-2'}>\r\n          2\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            let h[0] be size + 1\r\n          </span>\r\n        </div>\r\n        <div id={'Heap-insert-3'}>\r\n          3\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            insert element at end of h\r\n          </span>\r\n        </div>\r\n        <div id={'Heap-insert-4'}>\r\n          4<span style={{ marginLeft: indentation(2) }}>call fixUp()</span>\r\n        </div>\r\n        <br></br>\r\n        <div id={'Heap-fixup-1'}>\r\n          1<span style={{ marginLeft: indentation(2) }}>fixUp()</span>\r\n        </div>\r\n        <div id={'Heap-fixup-2'}>\r\n          2\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            let currentIndex be size\r\n          </span>\r\n        </div>\r\n        <div id={'Heap-fixup-3'}>\r\n          3\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            while currentIndex {'>'} 0\r\n          </span>\r\n        </div>\r\n        <div id={'Heap-fixup-4'}>\r\n          4\r\n          <span style={{ marginLeft: indentation(3) }}>\r\n            let parentIndex be (currentIndex // 2)\r\n          </span>\r\n        </div>\r\n        <div id={'Heap-fixup-5'}>\r\n          5\r\n          <span style={{ marginLeft: indentation(3) }}>\r\n            if h[parentIndex] {'>'} h[currentIndex]\r\n          </span>\r\n        </div>\r\n        <div id={'Heap-fixup-6'}>\r\n          6\r\n          <span style={{ marginLeft: indentation(4) }}>\r\n            swap h[parentIndex] with h[currentIndex]\r\n          </span>\r\n        </div>\r\n        <div id={'Heap-fixup-7'}>\r\n          7\r\n          <span style={{ marginLeft: indentation(4) }}>\r\n            let currentIndex be parentIndex\r\n          </span>\r\n        </div>\r\n        <div id={'Heap-fixup-8'}>\r\n          8\r\n          <span style={{ marginLeft: indentation(3) }}>\r\n            else break out of loop\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderRemoveRootPseudocode() {\r\n    const indentation = (num) => {\r\n      return num * 20;\r\n    };\r\n    return (\r\n      <div>\r\n        <div id={'Heap-removeRoot-1'}>\r\n          1<span style={{ marginLeft: indentation(1) }}>removeRoot()</span>\r\n        </div>\r\n        <div id={'Heap-removeRoot-2'}>\r\n          2<span style={{ marginLeft: indentation(2) }}>let min be h[1]</span>\r\n        </div>\r\n        <div id={'Heap-removeRoot-3'}>\r\n          3\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            h[1] = largest node (removed from end of h)\r\n          </span>\r\n        </div>\r\n        <div id={'Heap-removeRoot-4'}>\r\n          4<span style={{ marginLeft: indentation(2) }}>h[0] = size - 1</span>\r\n        </div>\r\n        <div id={'Heap-removeRoot-5'}>\r\n          5<span style={{ marginLeft: indentation(2) }}>fixDown()</span>\r\n        </div>\r\n        <div id={'Heap-removeRoot-6'}>\r\n          6<span style={{ marginLeft: indentation(2) }}>return min</span>\r\n        </div>\r\n        <br></br>\r\n        <div id={'Heap-fixdown-1'}>\r\n          1<span style={{ marginLeft: indentation(1) }}>fixDown()</span>\r\n        </div>\r\n        <div id={'Heap-fixdown-2'}>\r\n          2\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            let currentIndex be 1\r\n          </span>\r\n        </div>\r\n        <div id={'Heap-fixdown-3'}>\r\n          3\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            while (currentIndex * 2) {'<'} size\r\n          </span>\r\n        </div>\r\n        <div id={'Heap-fixdown-4'}>\r\n          4\r\n          <span style={{ marginLeft: indentation(3) }}>\r\n            let childIndex be currentIndex * 2\r\n          </span>\r\n        </div>\r\n        <div id={'Heap-fixdown-5'}>\r\n          5\r\n          <span style={{ marginLeft: indentation(3) }}>\r\n            let leftChild be h[currentIndex]\r\n          </span>\r\n        </div>\r\n        <div id={'Heap-fixdown-6'}>\r\n          6\r\n          <span style={{ marginLeft: indentation(3) }}>\r\n            let rightChild be h[currentIndex+1]\r\n          </span>\r\n        </div>\r\n        <div id={'Heap-fixdown-7'}>\r\n          7\r\n          <span style={{ marginLeft: indentation(3) }}>\r\n            if leftChild {'>'} rightChild\r\n          </span>\r\n        </div>\r\n        <div id={'Heap-fixdown-8'}>\r\n          8\r\n          <span style={{ marginLeft: indentation(4) }}>\r\n            let childIndex = childIndex + 1\r\n          </span>\r\n        </div>\r\n        <div id={'Heap-fixdown-9'}>\r\n          9\r\n          <span style={{ marginLeft: indentation(3) }}>\r\n            if h[currentIndex] {'>'} h[childIndex]\r\n          </span>\r\n        </div>\r\n        <div id={'Heap-fixdown-10'}>\r\n          10\r\n          <span style={{ marginLeft: indentation(4) }}>\r\n            swap h[currentIndex] with h[childIndex]\r\n          </span>\r\n        </div>\r\n        <div id={'Heap-fixdown-11'}>\r\n          11\r\n          <span style={{ marginLeft: indentation(4) }}>\r\n            {' '}\r\n            currentIndex = childIndex\r\n          </span>\r\n        </div>\r\n        <div id={'Heap-fixdown-12'}>\r\n          12\r\n          <span style={{ marginLeft: indentation(3) }}>\r\n            else break out of loop\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  highlightLine(classId) {\r\n    let el = document.getElementById(classId);\r\n    if (el) el.classList.add('active-code-line');\r\n  }\r\n  removeHighlightedLine(classId) {\r\n    let el = document.getElementById(classId);\r\n    if (el) el.classList.remove('active-code-line');\r\n  }\r\n  render() {\r\n    return (\r\n      <div className={'row'}>\r\n        <div className={'col-4'} id={'graph-container'}>\r\n          <form\r\n            onSubmit={(event) => {\r\n              event.preventDefault();\r\n            }}\r\n          >\r\n            <label>Add a node:</label>\r\n\r\n            <input\r\n              style={{ width: '50px' }}\r\n              type=\"text\"\r\n              value={this.state.inputNum}\r\n              onChange={async (event) => {\r\n                await this.setState({\r\n                  inputNum: Number(event.target.value),\r\n                });\r\n              }}\r\n            />\r\n            <button\r\n              type=\"submit\"\r\n              disabled={\r\n                this.state.inputList.includes(Number(this.state.inputNum)) ||\r\n                this.state.executing\r\n              }\r\n              onClick={() => {\r\n                this.setState({\r\n                  removingRoot: false,\r\n                  inserting: true,\r\n                  pause: false,\r\n                });\r\n                this.handleInsertButton();\r\n              }}\r\n            >\r\n              {this.formatInsertButtonText()}\r\n            </button>\r\n            <button\r\n              disabled={this.state.heapA.length <= 1 || this.state.executing}\r\n              onClick={() => {\r\n                this.setState({\r\n                  removingRoot: true,\r\n                  inserting: false,\r\n                  pause: false,\r\n                });\r\n                this.removeRoot();\r\n              }}\r\n            >\r\n              {this.state.executing ? 'Executing...' : 'Remove Root'}\r\n            </button>\r\n            <button\r\n              disabled={this.state.executing}\r\n              onClick={() => {\r\n                this.buildSampleHeap();\r\n              }}\r\n            >\r\n              {this.state.executing ? 'Executing...' : 'Sample Heap'}\r\n            </button>\r\n            <button\r\n              className=\"graph-button\"\r\n              onClick={() => {\r\n                this.setState({ pause: !this.state.pause });\r\n              }}\r\n            >\r\n              {this.state.pause ? 'UnPause' : 'Pause'}\r\n            </button>\r\n            <button\r\n              disabled={this.state.executing}\r\n              onClick={() => {\r\n                this.clearHeap();\r\n              }}\r\n            >\r\n              {this.state.executing ? 'Executing...' : 'Clear'}\r\n            </button>\r\n          </form>\r\n        </div>\r\n        <div className={'col-4'}>\r\n          <div className={'row'}>\r\n            {this.renderHeapClassPseudocode()}\r\n            {this.state.inserting ? this.renderInsertPseudocode() : ''}\r\n            {this.state.removingRoot ? this.renderRemoveRootPseudocode() : ''}\r\n          </div>\r\n        </div>\r\n        <div className={'col-4'}>\r\n          <div className={'row'}>\r\n            <Sidebar showButton={true}>\r\n              <li> size = {this.state.size} </li>\r\n              {this.state.newElement ? (\r\n                <li> element = {this.state.newElement} </li>\r\n              ) : (\r\n                ''\r\n              )}\r\n              {this.state.removedRoot ? (\r\n                <li> min = {this.state.removedRoot} </li>\r\n              ) : (\r\n                ''\r\n              )}\r\n\r\n              {this.state.currentIndex ? (\r\n                <li> currentIndex = {this.state.currentIndex} </li>\r\n              ) : (\r\n                ''\r\n              )}\r\n\r\n              {this.state.parentIndex ? (\r\n                <li> parentIndex = {this.state.parentIndex} </li>\r\n              ) : (\r\n                ''\r\n              )}\r\n              {this.state.childIndex ? (\r\n                <li> childIndex = {this.state.childIndex} </li>\r\n              ) : (\r\n                ''\r\n              )}\r\n\r\n              {this.state.leftChild ? (\r\n                <li> leftChild = {this.state.leftChild} </li>\r\n              ) : (\r\n                ''\r\n              )}\r\n              {this.state.rightChild ? (\r\n                <li> rightChild = {this.state.rightChild} </li>\r\n              ) : (\r\n                ''\r\n              )}\r\n\r\n              <li onClick={() => this.toggleClicked(0)}>\r\n                <RenderListComponent\r\n                  list={this.state.heapA}\r\n                  listName={'h'}\r\n                  clicked={this.state.clicked[0]}\r\n                />\r\n              </li>\r\n              <li onClick={() => this.toggleClicked(1)}>\r\n                <RenderListComponent\r\n                  list={this.state.inputList}\r\n                  listName={'inputList'}\r\n                  clicked={this.state.clicked[1]}\r\n                />\r\n              </li>\r\n            </Sidebar>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Heap;\r\n\r\n// renderHeapTableData() {\r\n//   return this.state.heapA.map((node, i) => {\r\n//     return (\r\n//       <td key={i} style={{ backgroundColor: i === 1 ? 'yellow' : '' }}>\r\n//         {node}\r\n//       </td>\r\n//     );\r\n//   });\r\n// }\r\n\r\n// renderHeapHeading() {\r\n//   return (\r\n//     <tr>\r\n//       <th>size</th>\r\n//     </tr>\r\n//   );\r\n// }\r\n\r\n// renderInputListTableData() {\r\n//   return this.state.inputList.map((node) => {\r\n//     return <td key={node}>{node}</td>;\r\n//   });\r\n// }\r\n\r\n/* <div className={'row'}>\r\n            <h4>Heap Array</h4>\r\n          </div>\r\n          <div className={'row'}>\r\n            <table id={'heap-table'} className={'float-left'}>\r\n              <tbody>\r\n                {this.renderHeapHeading()}\r\n                <tr>{this.renderHeapTableData()}</tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <div className={'row'}>\r\n            <h5 id={'root-extracted'}> </h5>\r\n          </div>\r\n          <div className={'row'}>\r\n            <h4>Input List</h4>\r\n          </div>\r\n          <div className={'row'}>\r\n            <table id={'input-list-table'} className={'float-left'}>\r\n              <tbody>\r\n                <tr>{this.renderInputListTableData()}</tr>\r\n              </tbody>\r\n            </table>\r\n          </div> */\r\n","import React, { Component } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nclass InsertionSort extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      animation_queue : [],\r\n      data : [5,3,1]\r\n    };\r\n\r\n  }\r\n  componentDidMount() {\r\n    // set the dimensions and margins of the graph\r\n    var margin = {top: 0, right: 30, bottom: 90, left: 200},\r\n        width = 1500 - margin.left - margin.right,\r\n        height = 700 - margin.top - margin.bottom;\r\n\r\n    // append the svg object to the body of the page\r\n    var svg = d3.select(\"#sort-container\")\r\n      .append(\"svg\")\r\n        .attr(\"width\", width + margin.left + margin.right)\r\n        .attr(\"height\", height + margin.top + margin.bottom)\r\n      .append(\"g\")\r\n        .attr(\"transform\",\r\n              \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n    // X axis\r\n    var x = d3.scaleBand()\r\n      .range([ 0, width ])\r\n      .domain(this.state.data)\r\n      .padding(0.2);\r\n\r\n    // Add Y axis\r\n    var y = d3.scaleLinear()\r\n      .domain([0, 10])\r\n      .range([ height, 0]);\r\n\r\n    // Bars\r\n    svg.selectAll(\"mybar\")\r\n      .data(this.state.data)\r\n      .enter()\r\n      .append(\"rect\")\r\n        .attr(\"x\", function(d) { return x(d); })\r\n        .attr(\"y\", function(d) { return y(0); })\r\n        .attr(\"width\", x.bandwidth())\r\n        .attr(\"fill\", \"#39a4ff\")\r\n        .attr(\"height\", function(d) { return height - y(0); }) // always equal to 0\r\n        .attr(\"value\", function(d, index){ return index })\r\n\r\n    svg.selectAll(\"mybar\")\r\n      .data(this.state.data)\r\n      .enter()\r\n      .append(\"text\")\r\n      .attr(\"x\", function(d) { return x(d) + 50; })\r\n      .attr(\"y\", function(d) { return y(d) - 10; })\r\n      .attr(\"value\", function(d, index){ return index })\r\n      .text(function(d) { return d })\r\n\r\n    // Animation\r\n    svg.selectAll(\"rect\")\r\n      .transition()\r\n      .duration(800)\r\n      .attr(\"y\", function(d) { return y(d); })\r\n      .attr(\"height\", function(d) { return height - y(d); })\r\n\r\n\r\n      // Sort\r\n      let sorted = this.insertionSort(this.state.data)\r\n      let interval = setInterval(() => {\r\n        if (this.state.animation_queue.length > 0) {\r\n          this.swapBars(this.state.animation_queue[0][0],this.state.animation_queue[0][1], svg, this.state.data)\r\n          this.state.animation_queue.shift()\r\n        }\r\n      }, 2000)\r\n      if (this.state.animation_queue.length == 0) {\r\n        clearInterval(interval)\r\n      }\r\n  }\r\n\r\n  insertionSort = arr => {\r\n    const len = arr.length;\r\n    for (let i = 0; i < len; i++) {\r\n      let el = arr[i];\r\n      let j;\r\n\r\n      for (j = i - 1; j >= 0 && arr[j] > el; j--) {\r\n        arr[j + 1] = arr[j];\r\n        this.state.animation_queue.push([i, j])\r\n      }\r\n      arr[j + 1] = el;\r\n            console.log(arr)\r\n    }\r\n    return arr;\r\n  };\r\n\r\n  swapBars(barFromIndex, barToIndex, svg) {\r\n    let fromObj = d3.selectAll(\"rect[value='\" + barFromIndex + \"']\");\r\n    let toObj = d3.selectAll(\"rect[value='\" + barToIndex + \"']\");\r\n    let fromObjTxt = d3.selectAll(\"text[value='\" + barFromIndex + \"']\");\r\n    let toObjTxt = d3.selectAll(\"text[value='\" + barToIndex + \"']\");\r\n\r\n    fromObjTxt.transition()\r\n      .duration(1000)\r\n      .attr(\"fill\", \"#9537ff\")\r\n      .delay(500)\r\n      .attr(\"x\", toObjTxt.attr(\"x\"))\r\n\r\n    toObjTxt.transition()\r\n      .duration(1000)\r\n      .attr(\"fill\", \"#9537ff\")\r\n      .delay(500)\r\n      .attr(\"x\", fromObjTxt.attr(\"x\"))\r\n\r\n    fromObj.transition()\r\n      .duration(1000)\r\n      .attr(\"fill\", \"#9537ff\")\r\n      .delay(500)\r\n      .attr(\"x\", toObj.attr(\"x\"))\r\n\r\n    toObj.transition()\r\n      .duration(1000)\r\n      .attr(\"fill\", \"#ffa500\")\r\n      .delay(500)\r\n      .attr(\"x\", fromObj.attr(\"x\"))\r\n\r\n    // Reset Colors\r\n    fromObj.transition().duration(500).delay(1500).attr(\"fill\", \"#39a4ff\")\r\n    toObj.transition().duration(500).delay(1500).attr(\"fill\", \"#39a4ff\")\r\n\r\n    let temp = fromObj.attr(\"value\")\r\n    fromObj.attr(\"value\", toObj.attr(\"value\"))\r\n    toObj.attr(\"value\", temp)\r\n    temp = fromObjTxt.attr(\"value\")\r\n    fromObjTxt.attr(\"value\", toObjTxt.attr(\"value\"))\r\n    toObjTxt.attr(\"value\", temp)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"sort-container\"></div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InsertionSort;\r\n","import React from 'react';\r\nimport '../styles/MainPage.scss';\r\n\r\nconst MainPage = (props) => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"heading\">\r\n        Welcome to\r\n        <span style={{ color: '#51a6fc' }}> Am</span>\r\n        <span style={{ color: '#8787fe' }}>Algorithm</span>\r\n      </h1>\r\n      <div className=\"background\">\r\n        <img\r\n          src={\r\n            process.env.PUBLIC_URL + '/assets/imgs/home_page_background1.png'\r\n          }\r\n          alt={'bg1'}\r\n        />\r\n        <img\r\n          src={\r\n            process.env.PUBLIC_URL + '/assets/imgs/home_page_background2.png'\r\n          }\r\n          alt={'bg2'}\r\n        />\r\n        <img\r\n          src={\r\n            process.env.PUBLIC_URL + '/assets/imgs/home_page_background3.png'\r\n          }\r\n          alt={'bg3'}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import React from 'react';\r\nimport {BrowserRouter as Router, Route, Link} from 'react-router-dom';\r\nimport {Container, Navbar, Nav, NavDropdown} from 'react-bootstrap';\r\n\r\nimport TreeTraversals from '../Components/TreeTraversals';\r\nimport UndirectedGraphAlgorithms from '../Components/UndirectedGraphAlgorithms';\r\nimport DirectedGraphAlgorithms from '../Components/DirectedGraphAlgorithms';\r\nimport ScatterPlotAlgorithms from '../Components/ScatterPlotAlgorithms';\r\nimport Heap from '../Components/data-structures/Heap';\r\nimport InsertionSort from '../Components/algorithms/sorts/InsertionSort';\r\n\r\nimport '../styles/Navigation-bar.scss';\r\nimport MainPage from './MainPage';\r\n\r\nconst NavigationBar = () => {\r\n  return (<Router>\r\n    <Navbar>\r\n      <Navbar.Brand as={Link} to=\"/\">\r\n        <img alt={'logo'} className={'header-logo'} src={process.env.PUBLIC_URL + '/assets/imgs/logo.png'}/>\r\n      </Navbar.Brand>\r\n\r\n      <Nav className=\"ml-auto\">\r\n        <NavDropdown title=\"Data Structures\">\r\n          <NavDropdown.Item eventKey=\"1\" as={Link} to=\"/heap\">\r\n            Heap\r\n          </NavDropdown.Item>\r\n        </NavDropdown>\r\n\r\n        <NavDropdown title=\"Sorting\">\r\n          <NavDropdown.Item eventKey=\"1\" as={Link} to=\"/insertion_sort\">\r\n            Insertion Sort\r\n          </NavDropdown.Item>\r\n        </NavDropdown>\r\n\r\n        <NavDropdown title=\"Tree\">\r\n          <NavDropdown.Item as={Link} to=\"/tree_traversals\">\r\n            Tree Traversals\r\n          </NavDropdown.Item>\r\n        </NavDropdown>\r\n\r\n        <NavDropdown title=\"Graph\">\r\n          <NavDropdown.Item eventKey=\"1\" as={Link} to=\"/directed_graph_algorithms\">\r\n            Directed Graph Algorithms\r\n          </NavDropdown.Item>\r\n          <NavDropdown.Item eventKey=\"2\" as={Link} to=\"/undirected_graph_algorithms\">\r\n            Undirected Graph Algorithms\r\n          </NavDropdown.Item>\r\n        </NavDropdown>\r\n\r\n        <NavDropdown title=\"Machine Learning\">\r\n          <NavDropdown.Item eventKey=\"3\" as={Link} to=\"/ScatterPlotAlgorithms\">\r\n            K-Means\r\n          </NavDropdown.Item>\r\n        </NavDropdown>\r\n\r\n        <div className=\"burgerContainer\">\r\n          <div className=\"burgerIcon\"></div>\r\n          <div className=\"burgerIcon\"></div>\r\n          <div className=\"burgerIcon\"></div>\r\n        </div>\r\n      </Nav>\r\n    </Navbar>\r\n    <br/>\r\n    <Route path=\"/tree_traversals\" component={TreeTraversals}/>\r\n    <Route path=\"/undirected_graph_algorithms\" component={UndirectedGraphAlgorithms}/>\r\n    <Route path=\"/directed_graph_algorithms\" component={DirectedGraphAlgorithms}/>\r\n    <Route path=\"/heap\" component={Heap}/>\r\n    <Route path=\"/insertion_sort\" component={InsertionSort}/>\r\n    <Route path=\"/ScatterPlotAlgorithms\" component={ScatterPlotAlgorithms}/>\r\n\r\n    <Route exact=\"exact\" path=\"/\" component={MainPage}/>\r\n  </Router>);\r\n};\r\n\r\nexport default NavigationBar;\r\n","import React from 'react';\r\nimport './styles/App.scss';\r\nimport NavigationBar from './Components/NavigationBar';\r\nimport './styles/Node.scss';\r\nimport './styles/Link.scss';\r\nimport './styles/Graph.scss';\r\nimport './styles/OutputTable.scss';\r\nimport './styles/Clusters.scss';\r\nimport './styles/Pseudocode.scss';\r\nimport './styles/Sidebar.scss';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className={'container-fluid'}>\r\n      <NavigationBar />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}